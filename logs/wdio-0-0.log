2021-10-30T13:04:34.643Z INFO @wdio/local-runner: Run worker command: run
2021-10-30T13:04:38.733Z INFO webdriver: Initiate new session using the WebDriver protocol
2021-10-30T13:04:38.997Z INFO webdriver: [POST] http://localhost:4444/session
2021-10-30T13:04:38.998Z INFO webdriver: DATA {
  capabilities: {
    alwaysMatch: { browserName: 'chrome', acceptInsecureCerts: true },
    firstMatch: [ {} ]
  },
  desiredCapabilities: { browserName: 'chrome', acceptInsecureCerts: true }
}
2021-10-30T13:05:11.750Z INFO webdriver: COMMAND navigateTo("https://www.volvocars.com/intl/v/car-safety/a-million-more")
2021-10-30T13:05:11.750Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/url
2021-10-30T13:05:11.750Z INFO webdriver: DATA { url: 'https://www.volvocars.com/intl/v/car-safety/a-million-more' }
2021-10-30T13:05:13.571Z INFO webdriver: COMMAND maximizeWindow()
2021-10-30T13:05:13.571Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/window/maximize
2021-10-30T13:05:13.709Z INFO webdriver: RESULT { height: 998, width: 1360, x: 0, y: 0 }
2021-10-30T13:05:16.715Z INFO webdriver: COMMAND findElement("xpath", "/html/body/div[1]/div[2]/div[4]/div[2]/div/button")
2021-10-30T13:05:16.715Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element
2021-10-30T13:05:16.715Z INFO webdriver: DATA {
  using: 'xpath',
  value: '/html/body/div[1]/div[2]/div[4]/div[2]/div/button'
}
2021-10-30T13:05:16.755Z INFO webdriver: RESULT {
  'element-6066-11e4-a52e-4f735466cecf': 'e6c44ae7-0995-477e-b85b-7c1240d88278'
}
2021-10-30T13:05:16.768Z INFO webdriver: COMMAND elementClick("e6c44ae7-0995-477e-b85b-7c1240d88278")
2021-10-30T13:05:16.768Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element/e6c44ae7-0995-477e-b85b-7c1240d88278/click
2021-10-30T13:05:17.140Z INFO webdriver: COMMAND getTitle()
2021-10-30T13:05:17.141Z INFO webdriver: [GET] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/title
2021-10-30T13:05:17.231Z INFO webdriver: RESULT A million more | Volvo Cars - International
2021-10-30T13:05:17.238Z INFO webdriver: COMMAND findElement("xpath", "//a[text()='Learn more about car safety']")
2021-10-30T13:05:17.238Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element
2021-10-30T13:05:17.238Z INFO webdriver: DATA { using: 'xpath', value: "//a[text()='Learn more about car safety']" }
2021-10-30T13:05:17.480Z INFO webdriver: RESULT {
  'element-6066-11e4-a52e-4f735466cecf': '3ec9ed79-225f-4f9d-9faa-60b293d94bbd'
}
2021-10-30T13:05:17.493Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-30T13:05:17.496Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/execute/sync
2021-10-30T13:05:17.496Z INFO webdriver: DATA {
  script: 'return (function isElementDisplayed(element) {\n' +
    '    function nodeIsElement(node) {\n' +
    '        if (!node) {\n' +
    '            return false;\n' +
    '        }\n' +
    '        switch (node.nodeType) {\n' +
    '            case Node.ELEMENT_NODE:\n' +
    '            case Node.DOCUMENT_NODE:\n' +
    '            case Node.DOCUMENT_FRAGMENT_NODE:\n' +
    '                return true;\n' +
    '            default:\n' +
    '                return false;\n' +
    '        }\n' +
    '    }\n' +
    '    function parentElementForElement(element) {\n' +
    '        if (!element) {\n' +
    '            return null;\n' +
    '        }\n' +
    '        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n' +
    '    }\n' +
    '    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n' +
    '        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode)\n' +
    '            if (predicate(node)) {\n' +
    '                return node;\n' +
    '            }\n' +
    '        return null;\n' +
    '    }\n' +
    '    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n' +
    '        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element))\n' +
    '            if (predicate(element)) {\n' +
    '                return element;\n' +
    '            }\n' +
    '        return null;\n' +
    '    }\n' +
    '    function cascadedStylePropertyForElement(element, property) {\n' +
    '        if (!element || !property) {\n' +
    '            return null;\n' +
    '        }\n' +
    '        // if document-fragment, skip it and use element.host instead. This happens\n' +
    '        // when the element is inside a shadow root.\n' +
    '        // window.getComputedStyle errors on document-fragment.\n' +
    '        if (element instanceof DocumentFragment) {\n' +
    '            element = element.host;\n' +
    '        }\n' +
    '        let computedStyle = window.getComputedStyle(element);\n' +
    '        let computedStyleProperty = computedStyle.getPropertyValue(property);\n' +
    "        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n" +
    '            return computedStyleProperty;\n' +
    '        }\n' +
    "        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n" +
    "        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n" +
    "        // Fall back to the first non-'inherit' value found in an ancestor.\n" +
    "        // In any case, getPropertyValue will not return 'initial'.\n" +
    '        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n' +
    '        // I think all important non-inheritable properties (width, height, etc.)\n' +
    '        // for our purposes here are specially resolved, so this may not be an issue.\n' +
    '        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n' +
    '        let parentElement = parentElementForElement(element);\n' +
    '        return cascadedStylePropertyForElement(parentElement, property);\n' +
    '    }\n' +
    '    function elementSubtreeHasNonZeroDimensions(element) {\n' +
    '        let boundingBox = element.getBoundingClientRect();\n' +
    '        if (boundingBox.width > 0 && boundingBox.height > 0) {\n' +
    '            return true;\n' +
    '        }\n' +
    '        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n' +
    "        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n" +
    "            let strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n" +
    '            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n' +
    '        }\n' +
    "        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n" +
    "        if (cascadedOverflow === 'hidden') {\n" +
    '            return false;\n' +
    '        }\n' +
    "        // If the container's overflow is not hidden and it has zero size, consider the\n" +
    '        // container to have non-zero dimensions if a child node has non-zero dimensions.\n' +
    '        return Array.from(element.childNodes).some((childNode) => {\n' +
    '            if (childNode.nodeType === Node.TEXT_NODE) {\n' +
    '                return true;\n' +
    '            }\n' +
    '            if (nodeIsElement(childNode)) {\n' +
    '                return elementSubtreeHasNonZeroDimensions(childNode);\n' +
    '            }\n' +
    '            return false;\n' +
    '        });\n' +
    '    }\n' +
    '    function elementOverflowsContainer(element) {\n' +
    "        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n" +
    "        if (cascadedOverflow !== 'hidden') {\n" +
    '            return false;\n' +
    '        }\n' +
    '        // FIXME: this needs to take into account the scroll position of the element,\n' +
    '        // the display modes of it and its ancestors, and the container it overflows.\n' +
    "        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n" +
    '        return true;\n' +
    '    }\n' +
    '    function isElementSubtreeHiddenByOverflow(element) {\n' +
    '        if (!element) {\n' +
    '            return false;\n' +
    '        }\n' +
    '        if (!elementOverflowsContainer(element)) {\n' +
    '            return false;\n' +
    '        }\n' +
    '        if (!element.childNodes.length) {\n' +
    '            return false;\n' +
    '        }\n' +
    "        // This element's subtree is hidden by overflow if all child subtrees are as well.\n" +
    '        return Array.from(element.childNodes).every((childNode) => {\n' +
    '            // Returns true if the child node is overflowed or otherwise hidden.\n' +
    "            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n" +
    '            // Visibility of text nodes is controlled by parent\n' +
    '            if (childNode.nodeType === Node.TEXT_NODE) {\n' +
    '                return false;\n' +
    '            }\n' +
    '            if (!nodeIsElement(childNode)) {\n' +
    '                return true;\n' +
    '            }\n' +
    '            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n' +
    '                return true;\n' +
    '            }\n' +
    '            // Recurse.\n' +
    '            return isElementSubtreeHiddenByOverflow(childNode);\n' +
    '        });\n' +
    '    }\n' +
    '    // walk up the tree testing for a shadow root\n' +
    '    function isElementInsideShadowRoot(element) {\n' +
    '        if (!element) {\n' +
    '            return false;\n' +
    '        }\n' +
    '        if (element.parentNode && element.parentNode.host) {\n' +
    '            return true;\n' +
    '        }\n' +
    '        return isElementInsideShadowRoot(element.parentNode);\n' +
    '    }\n' +
    `    // This is a partial reimplementation of Selenium's "element is displayed" algorithm.\n` +
    "    // When the W3C specification's algorithm stabilizes, we should implement that.\n" +
    '    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n' +
    '    if (!isElementInsideShadowRoot(element) && !document.contains(element)) {\n' +
    '        return false;\n' +
    '    }\n' +
    '    // Special cases for specific tag names.\n' +
    '    switch (element.tagName.toUpperCase()) {\n' +
    "        case 'BODY':\n" +
    '            return true;\n' +
    "        case 'SCRIPT':\n" +
    "        case 'NOSCRIPT':\n" +
    '            return false;\n' +
    "        case 'OPTGROUP':\n" +
    "        case 'OPTION': {\n" +
    '            // Option/optgroup are considered shown if the containing <select> is shown.\n' +
    "            let enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, (e) => e.tagName.toUpperCase() === 'SELECT');\n" +
    '            return isElementDisplayed(enclosingSelectElement);\n' +
    '        }\n' +
    "        case 'INPUT':\n" +
    '            // <input type="hidden"> is considered not shown.\n' +
    "            if (element.type === 'hidden') {\n" +
    '                return false;\n' +
    '            }\n' +
    '            break;\n' +
    "        // case 'MAP':\n" +
    "        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n" +
    '        default:\n' +
    '            break;\n' +
    '    }\n' +
    "    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n" +
    '        return false;\n' +
    '    }\n' +
    '    let hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\n' +
    "        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n" +
    '    });\n' +
    '    let hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\n' +
    "        return cascadedStylePropertyForElement(e, 'display') === 'none';\n" +
    '    });\n' +
    '    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n' +
    '        return false;\n' +
    '    }\n' +
    '    if (!elementSubtreeHasNonZeroDimensions(element)) {\n' +
    '        return false;\n' +
    '    }\n' +
    '    if (isElementSubtreeHiddenByOverflow(element)) {\n' +
    '        return false;\n' +
    '    }\n' +
    '    return true;\n' +
    '}).apply(null, arguments)',
  args: [
    {
      'element-6066-11e4-a52e-4f735466cecf': '3ec9ed79-225f-4f9d-9faa-60b293d94bbd',
      ELEMENT: '3ec9ed79-225f-4f9d-9faa-60b293d94bbd'
    }
  ]
}
2021-10-30T13:05:17.611Z INFO webdriver: RESULT true
2021-10-30T13:05:17.612Z INFO webdriver: COMMAND elementClick("3ec9ed79-225f-4f9d-9faa-60b293d94bbd")
2021-10-30T13:05:17.612Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element/3ec9ed79-225f-4f9d-9faa-60b293d94bbd/click
2021-10-30T13:05:18.894Z INFO webdriver: COMMAND getTitle()
2021-10-30T13:05:18.895Z INFO webdriver: [GET] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/title
2021-10-30T13:05:19.016Z INFO webdriver: RESULT Car safety | Volvo Cars - International
2021-10-30T13:05:19.017Z INFO webdriver: COMMAND getTitle()
2021-10-30T13:05:19.017Z INFO webdriver: [GET] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/title
2021-10-30T13:05:19.112Z INFO webdriver: RESULT Car safety | Volvo Cars - International
2021-10-30T13:05:19.117Z INFO webdriver: COMMAND findElement("xpath", "//*[@id="ImageWithText-1"]/section/div[1]/div[2]/div/div/div/h2")
2021-10-30T13:05:19.117Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element
2021-10-30T13:05:19.117Z INFO webdriver: DATA {
  using: 'xpath',
  value: '//*[@id="ImageWithText-1"]/section/div[1]/div[2]/div/div/div/h2'
}
2021-10-30T13:05:19.122Z INFO webdriver: COMMAND findElement("xpath", "//*[@id="ImageWithText-1"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a")
2021-10-30T13:05:19.122Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element
2021-10-30T13:05:19.123Z INFO webdriver: DATA {
  using: 'xpath',
  value: '//*[@id="ImageWithText-1"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a'
}
2021-10-30T13:05:19.176Z INFO webdriver: RESULT {
  'element-6066-11e4-a52e-4f735466cecf': '6581428b-1a89-4be4-8152-38d931af1dfd'
}
2021-10-30T13:05:19.204Z INFO webdriver: RESULT {
  'element-6066-11e4-a52e-4f735466cecf': '8a4a7876-f327-4aa8-8887-9059c419f11b'
}
2021-10-30T13:05:19.212Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-30T13:05:19.213Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/execute/sync
2021-10-30T13:05:19.213Z INFO webdriver: DATA {
  script: 'return (function (elem, options) {\n' +
    '        elem.scrollIntoView(options);\n' +
    '    }).apply(null, arguments)',
  args: [
    {
      'element-6066-11e4-a52e-4f735466cecf': '8a4a7876-f327-4aa8-8887-9059c419f11b',
      ELEMENT: '8a4a7876-f327-4aa8-8887-9059c419f11b'
    },
    true
  ]
}
2021-10-30T13:05:19.241Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-30T13:05:19.241Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/execute/sync
2021-10-30T13:05:19.241Z INFO webdriver: DATA {
  script: 'return (function isElementDisplayed(element) {\n' +
    '    function nodeIsElement(node) {\n' +
    '        if (!node) {\n' +
    '            return false;\n' +
    '        }\n' +
    '        switch (node.nodeType) {\n' +
    '            case Node.ELEMENT_NODE:\n' +
    '            case Node.DOCUMENT_NODE:\n' +
    '            case Node.DOCUMENT_FRAGMENT_NODE:\n' +
    '                return true;\n' +
    '            default:\n' +
    '                return false;\n' +
    '        }\n' +
    '    }\n' +
    '    function parentElementForElement(element) {\n' +
    '        if (!element) {\n' +
    '            return null;\n' +
    '        }\n' +
    '        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n' +
    '    }\n' +
    '    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n' +
    '        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode)\n' +
    '            if (predicate(node)) {\n' +
    '                return node;\n' +
    '            }\n' +
    '        return null;\n' +
    '    }\n' +
    '    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n' +
    '        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element))\n' +
    '            if (predicate(element)) {\n' +
    '                return element;\n' +
    '            }\n' +
    '        return null;\n' +
    '    }\n' +
    '    function cascadedStylePropertyForElement(element, property) {\n' +
    '        if (!element || !property) {\n' +
    '            return null;\n' +
    '        }\n' +
    '        // if document-fragment, skip it and use element.host instead. This happens\n' +
    '        // when the element is inside a shadow root.\n' +
    '        // window.getComputedStyle errors on document-fragment.\n' +
    '        if (element instanceof DocumentFragment) {\n' +
    '            element = element.host;\n' +
    '        }\n' +
    '        let computedStyle = window.getComputedStyle(element);\n' +
    '        let computedStyleProperty = computedStyle.getPropertyValue(property);\n' +
    "        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n" +
    '            return computedStyleProperty;\n' +
    '        }\n' +
    "        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n" +
    "        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n" +
    "        // Fall back to the first non-'inherit' value found in an ancestor.\n" +
    "        // In any case, getPropertyValue will not return 'initial'.\n" +
    '        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n' +
    '        // I think all important non-inheritable properties (width, height, etc.)\n' +
    '        // for our purposes here are specially resolved, so this may not be an issue.\n' +
    '        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n' +
    '        let parentElement = parentElementForElement(element);\n' +
    '        return cascadedStylePropertyForElement(parentElement, property);\n' +
    '    }\n' +
    '    function elementSubtreeHasNonZeroDimensions(element) {\n' +
    '        let boundingBox = element.getBoundingClientRect();\n' +
    '        if (boundingBox.width > 0 && boundingBox.height > 0) {\n' +
    '            return true;\n' +
    '        }\n' +
    '        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n' +
    "        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n" +
    "            let strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n" +
    '            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n' +
    '        }\n' +
    "        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n" +
    "        if (cascadedOverflow === 'hidden') {\n" +
    '            return false;\n' +
    '        }\n' +
    "        // If the container's overflow is not hidden and it has zero size, consider the\n" +
    '        // container to have non-zero dimensions if a child node has non-zero dimensions.\n' +
    '        return Array.from(element.childNodes).some((childNode) => {\n' +
    '            if (childNode.nodeType === Node.TEXT_NODE) {\n' +
    '                return true;\n' +
    '            }\n' +
    '            if (nodeIsElement(childNode)) {\n' +
    '                return elementSubtreeHasNonZeroDimensions(childNode);\n' +
    '            }\n' +
    '            return false;\n' +
    '        });\n' +
    '    }\n' +
    '    function elementOverflowsContainer(element) {\n' +
    "        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n" +
    "        if (cascadedOverflow !== 'hidden') {\n" +
    '            return false;\n' +
    '        }\n' +
    '        // FIXME: this needs to take into account the scroll position of the element,\n' +
    '        // the display modes of it and its ancestors, and the container it overflows.\n' +
    "        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n" +
    '        return true;\n' +
    '    }\n' +
    '    function isElementSubtreeHiddenByOverflow(element) {\n' +
    '        if (!element) {\n' +
    '            return false;\n' +
    '        }\n' +
    '        if (!elementOverflowsContainer(element)) {\n' +
    '            return false;\n' +
    '        }\n' +
    '        if (!element.childNodes.length) {\n' +
    '            return false;\n' +
    '        }\n' +
    "        // This element's subtree is hidden by overflow if all child subtrees are as well.\n" +
    '        return Array.from(element.childNodes).every((childNode) => {\n' +
    '            // Returns true if the child node is overflowed or otherwise hidden.\n' +
    "            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n" +
    '            // Visibility of text nodes is controlled by parent\n' +
    '            if (childNode.nodeType === Node.TEXT_NODE) {\n' +
    '                return false;\n' +
    '            }\n' +
    '            if (!nodeIsElement(childNode)) {\n' +
    '                return true;\n' +
    '            }\n' +
    '            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n' +
    '                return true;\n' +
    '            }\n' +
    '            // Recurse.\n' +
    '            return isElementSubtreeHiddenByOverflow(childNode);\n' +
    '        });\n' +
    '    }\n' +
    '    // walk up the tree testing for a shadow root\n' +
    '    function isElementInsideShadowRoot(element) {\n' +
    '        if (!element) {\n' +
    '            return false;\n' +
    '        }\n' +
    '        if (element.parentNode && element.parentNode.host) {\n' +
    '            return true;\n' +
    '        }\n' +
    '        return isElementInsideShadowRoot(element.parentNode);\n' +
    '    }\n' +
    `    // This is a partial reimplementation of Selenium's "element is displayed" algorithm.\n` +
    "    // When the W3C specification's algorithm stabilizes, we should implement that.\n" +
    '    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n' +
    '    if (!isElementInsideShadowRoot(element) && !document.contains(element)) {\n' +
    '        return false;\n' +
    '    }\n' +
    '    // Special cases for specific tag names.\n' +
    '    switch (element.tagName.toUpperCase()) {\n' +
    "        case 'BODY':\n" +
    '            return true;\n' +
    "        case 'SCRIPT':\n" +
    "        case 'NOSCRIPT':\n" +
    '            return false;\n' +
    "        case 'OPTGROUP':\n" +
    "        case 'OPTION': {\n" +
    '            // Option/optgroup are considered shown if the containing <select> is shown.\n' +
    "            let enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, (e) => e.tagName.toUpperCase() === 'SELECT');\n" +
    '            return isElementDisplayed(enclosingSelectElement);\n' +
    '        }\n' +
    "        case 'INPUT':\n" +
    '            // <input type="hidden"> is considered not shown.\n' +
    "            if (element.type === 'hidden') {\n" +
    '                return false;\n' +
    '            }\n' +
    '            break;\n' +
    "        // case 'MAP':\n" +
    "        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n" +
    '        default:\n' +
    '            break;\n' +
    '    }\n' +
    "    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n" +
    '        return false;\n' +
    '    }\n' +
    '    let hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\n' +
    "        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n" +
    '    });\n' +
    '    let hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\n' +
    "        return cascadedStylePropertyForElement(e, 'display') === 'none';\n" +
    '    });\n' +
    '    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n' +
    '        return false;\n' +
    '    }\n' +
    '    if (!elementSubtreeHasNonZeroDimensions(element)) {\n' +
    '        return false;\n' +
    '    }\n' +
    '    if (isElementSubtreeHiddenByOverflow(element)) {\n' +
    '        return false;\n' +
    '    }\n' +
    '    return true;\n' +
    '}).apply(null, arguments)',
  args: [
    {
      'element-6066-11e4-a52e-4f735466cecf': '6581428b-1a89-4be4-8152-38d931af1dfd',
      ELEMENT: '6581428b-1a89-4be4-8152-38d931af1dfd'
    }
  ]
}
2021-10-30T13:05:19.524Z WARN webdriver: Request encountered a stale element - terminating request
2021-10-30T13:05:19.526Z INFO webdriver: COMMAND findElement("xpath", "//*[@id="ImageWithText-1"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a")
2021-10-30T13:05:19.526Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element
2021-10-30T13:05:19.526Z INFO webdriver: DATA {
  using: 'xpath',
  value: '//*[@id="ImageWithText-1"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a'
}
2021-10-30T13:05:19.560Z INFO webdriver: RESULT {
  'element-6066-11e4-a52e-4f735466cecf': 'a91e8b6c-16ae-4b50-a9fb-56a6d3be0627'
}
2021-10-30T13:05:19.573Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-30T13:05:19.574Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/execute/sync
2021-10-30T13:05:19.574Z INFO webdriver: DATA {
  script: 'return (function isElementDisplayed(element) {\n' +
    '    function nodeIsElement(node) {\n' +
    '        if (!node) {\n' +
    '            return false;\n' +
    '        }\n' +
    '        switch (node.nodeType) {\n' +
    '            case Node.ELEMENT_NODE:\n' +
    '            case Node.DOCUMENT_NODE:\n' +
    '            case Node.DOCUMENT_FRAGMENT_NODE:\n' +
    '                return true;\n' +
    '            default:\n' +
    '                return false;\n' +
    '        }\n' +
    '    }\n' +
    '    function parentElementForElement(element) {\n' +
    '        if (!element) {\n' +
    '            return null;\n' +
    '        }\n' +
    '        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n' +
    '    }\n' +
    '    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n' +
    '        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode)\n' +
    '            if (predicate(node)) {\n' +
    '                return node;\n' +
    '            }\n' +
    '        return null;\n' +
    '    }\n' +
    '    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n' +
    '        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element))\n' +
    '            if (predicate(element)) {\n' +
    '                return element;\n' +
    '            }\n' +
    '        return null;\n' +
    '    }\n' +
    '    function cascadedStylePropertyForElement(element, property) {\n' +
    '        if (!element || !property) {\n' +
    '            return null;\n' +
    '        }\n' +
    '        // if document-fragment, skip it and use element.host instead. This happens\n' +
    '        // when the element is inside a shadow root.\n' +
    '        // window.getComputedStyle errors on document-fragment.\n' +
    '        if (element instanceof DocumentFragment) {\n' +
    '            element = element.host;\n' +
    '        }\n' +
    '        let computedStyle = window.getComputedStyle(element);\n' +
    '        let computedStyleProperty = computedStyle.getPropertyValue(property);\n' +
    "        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n" +
    '            return computedStyleProperty;\n' +
    '        }\n' +
    "        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n" +
    "        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n" +
    "        // Fall back to the first non-'inherit' value found in an ancestor.\n" +
    "        // In any case, getPropertyValue will not return 'initial'.\n" +
    '        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n' +
    '        // I think all important non-inheritable properties (width, height, etc.)\n' +
    '        // for our purposes here are specially resolved, so this may not be an issue.\n' +
    '        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n' +
    '        let parentElement = parentElementForElement(element);\n' +
    '        return cascadedStylePropertyForElement(parentElement, property);\n' +
    '    }\n' +
    '    function elementSubtreeHasNonZeroDimensions(element) {\n' +
    '        let boundingBox = element.getBoundingClientRect();\n' +
    '        if (boundingBox.width > 0 && boundingBox.height > 0) {\n' +
    '            return true;\n' +
    '        }\n' +
    '        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n' +
    "        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n" +
    "            let strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n" +
    '            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n' +
    '        }\n' +
    "        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n" +
    "        if (cascadedOverflow === 'hidden') {\n" +
    '            return false;\n' +
    '        }\n' +
    "        // If the container's overflow is not hidden and it has zero size, consider the\n" +
    '        // container to have non-zero dimensions if a child node has non-zero dimensions.\n' +
    '        return Array.from(element.childNodes).some((childNode) => {\n' +
    '            if (childNode.nodeType === Node.TEXT_NODE) {\n' +
    '                return true;\n' +
    '            }\n' +
    '            if (nodeIsElement(childNode)) {\n' +
    '                return elementSubtreeHasNonZeroDimensions(childNode);\n' +
    '            }\n' +
    '            return false;\n' +
    '        });\n' +
    '    }\n' +
    '    function elementOverflowsContainer(element) {\n' +
    "        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n" +
    "        if (cascadedOverflow !== 'hidden') {\n" +
    '            return false;\n' +
    '        }\n' +
    '        // FIXME: this needs to take into account the scroll position of the element,\n' +
    '        // the display modes of it and its ancestors, and the container it overflows.\n' +
    "        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n" +
    '        return true;\n' +
    '    }\n' +
    '    function isElementSubtreeHiddenByOverflow(element) {\n' +
    '        if (!element) {\n' +
    '            return false;\n' +
    '        }\n' +
    '        if (!elementOverflowsContainer(element)) {\n' +
    '            return false;\n' +
    '        }\n' +
    '        if (!element.childNodes.length) {\n' +
    '            return false;\n' +
    '        }\n' +
    "        // This element's subtree is hidden by overflow if all child subtrees are as well.\n" +
    '        return Array.from(element.childNodes).every((childNode) => {\n' +
    '            // Returns true if the child node is overflowed or otherwise hidden.\n' +
    "            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n" +
    '            // Visibility of text nodes is controlled by parent\n' +
    '            if (childNode.nodeType === Node.TEXT_NODE) {\n' +
    '                return false;\n' +
    '            }\n' +
    '            if (!nodeIsElement(childNode)) {\n' +
    '                return true;\n' +
    '            }\n' +
    '            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n' +
    '                return true;\n' +
    '            }\n' +
    '            // Recurse.\n' +
    '            return isElementSubtreeHiddenByOverflow(childNode);\n' +
    '        });\n' +
    '    }\n' +
    '    // walk up the tree testing for a shadow root\n' +
    '    function isElementInsideShadowRoot(element) {\n' +
    '        if (!element) {\n' +
    '            return false;\n' +
    '        }\n' +
    '        if (element.parentNode && element.parentNode.host) {\n' +
    '            return true;\n' +
    '        }\n' +
    '        return isElementInsideShadowRoot(element.parentNode);\n' +
    '    }\n' +
    `    // This is a partial reimplementation of Selenium's "element is displayed" algorithm.\n` +
    "    // When the W3C specification's algorithm stabilizes, we should implement that.\n" +
    '    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n' +
    '    if (!isElementInsideShadowRoot(element) && !document.contains(element)) {\n' +
    '        return false;\n' +
    '    }\n' +
    '    // Special cases for specific tag names.\n' +
    '    switch (element.tagName.toUpperCase()) {\n' +
    "        case 'BODY':\n" +
    '            return true;\n' +
    "        case 'SCRIPT':\n" +
    "        case 'NOSCRIPT':\n" +
    '            return false;\n' +
    "        case 'OPTGROUP':\n" +
    "        case 'OPTION': {\n" +
    '            // Option/optgroup are considered shown if the containing <select> is shown.\n' +
    "            let enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, (e) => e.tagName.toUpperCase() === 'SELECT');\n" +
    '            return isElementDisplayed(enclosingSelectElement);\n' +
    '        }\n' +
    "        case 'INPUT':\n" +
    '            // <input type="hidden"> is considered not shown.\n' +
    "            if (element.type === 'hidden') {\n" +
    '                return false;\n' +
    '            }\n' +
    '            break;\n' +
    "        // case 'MAP':\n" +
    "        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n" +
    '        default:\n' +
    '            break;\n' +
    '    }\n' +
    "    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n" +
    '        return false;\n' +
    '    }\n' +
    '    let hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\n' +
    "        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n" +
    '    });\n' +
    '    let hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\n' +
    "        return cascadedStylePropertyForElement(e, 'display') === 'none';\n" +
    '    });\n' +
    '    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n' +
    '        return false;\n' +
    '    }\n' +
    '    if (!elementSubtreeHasNonZeroDimensions(element)) {\n' +
    '        return false;\n' +
    '    }\n' +
    '    if (isElementSubtreeHiddenByOverflow(element)) {\n' +
    '        return false;\n' +
    '    }\n' +
    '    return true;\n' +
    '}).apply(null, arguments)',
  args: [
    {
      'element-6066-11e4-a52e-4f735466cecf': 'a91e8b6c-16ae-4b50-a9fb-56a6d3be0627',
      ELEMENT: 'a91e8b6c-16ae-4b50-a9fb-56a6d3be0627'
    }
  ]
}
2021-10-30T13:05:19.598Z INFO webdriver: RESULT true
2021-10-30T13:05:19.599Z INFO webdriver: COMMAND elementClick("a91e8b6c-16ae-4b50-a9fb-56a6d3be0627")
2021-10-30T13:05:19.599Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element/a91e8b6c-16ae-4b50-a9fb-56a6d3be0627/click
2021-10-30T13:05:21.110Z INFO webdriver: COMMAND getTitle()
2021-10-30T13:05:21.110Z INFO webdriver: [GET] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/title
2021-10-30T13:05:21.148Z INFO webdriver: RESULT Driver assistance systems | Volvo Cars
2021-10-30T13:05:21.150Z INFO webdriver: COMMAND getTitle()
2021-10-30T13:05:21.150Z INFO webdriver: [GET] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/title
2021-10-30T13:05:21.197Z INFO webdriver: RESULT Driver assistance systems | Volvo Cars
2021-10-30T13:05:21.198Z INFO webdriver: COMMAND back()
2021-10-30T13:05:21.198Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/back
2021-10-30T13:05:22.105Z INFO webdriver: COMMAND findElement("xpath", "//*[@id="ImageWithText-2"]/section/div[1]/div[2]/div/div/div/h2")
2021-10-30T13:05:22.106Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element
2021-10-30T13:05:22.106Z INFO webdriver: DATA {
  using: 'xpath',
  value: '//*[@id="ImageWithText-2"]/section/div[1]/div[2]/div/div/div/h2'
}
2021-10-30T13:05:22.109Z INFO webdriver: COMMAND findElement("xpath", "//*[@id="ImageWithText-2"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a")
2021-10-30T13:05:22.109Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element
2021-10-30T13:05:22.109Z INFO webdriver: DATA {
  using: 'xpath',
  value: '//*[@id="ImageWithText-2"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a'
}
2021-10-30T13:05:22.160Z INFO webdriver: RESULT {
  'element-6066-11e4-a52e-4f735466cecf': '9c9fda32-15e0-44ca-9d50-71ba7a60df2b'
}
2021-10-30T13:05:22.168Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-30T13:05:22.168Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/execute/sync
2021-10-30T13:05:22.168Z INFO webdriver: DATA {
  script: 'return (function (elem, options) {\n' +
    '        elem.scrollIntoView(options);\n' +
    '    }).apply(null, arguments)',
  args: [
    {
      'element-6066-11e4-a52e-4f735466cecf': '9c9fda32-15e0-44ca-9d50-71ba7a60df2b',
      ELEMENT: '9c9fda32-15e0-44ca-9d50-71ba7a60df2b'
    },
    true
  ]
}
2021-10-30T13:05:22.181Z INFO webdriver: RESULT {
  'element-6066-11e4-a52e-4f735466cecf': 'e7d8ffa7-fc6c-4687-90a9-470051706742'
}
2021-10-30T13:05:22.219Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-30T13:05:22.220Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/execute/sync
2021-10-30T13:05:22.220Z INFO webdriver: DATA {
  script: 'return (function isElementDisplayed(element) {\n' +
    '    function nodeIsElement(node) {\n' +
    '        if (!node) {\n' +
    '            return false;\n' +
    '        }\n' +
    '        switch (node.nodeType) {\n' +
    '            case Node.ELEMENT_NODE:\n' +
    '            case Node.DOCUMENT_NODE:\n' +
    '            case Node.DOCUMENT_FRAGMENT_NODE:\n' +
    '                return true;\n' +
    '            default:\n' +
    '                return false;\n' +
    '        }\n' +
    '    }\n' +
    '    function parentElementForElement(element) {\n' +
    '        if (!element) {\n' +
    '            return null;\n' +
    '        }\n' +
    '        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n' +
    '    }\n' +
    '    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n' +
    '        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode)\n' +
    '            if (predicate(node)) {\n' +
    '                return node;\n' +
    '            }\n' +
    '        return null;\n' +
    '    }\n' +
    '    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n' +
    '        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element))\n' +
    '            if (predicate(element)) {\n' +
    '                return element;\n' +
    '            }\n' +
    '        return null;\n' +
    '    }\n' +
    '    function cascadedStylePropertyForElement(element, property) {\n' +
    '        if (!element || !property) {\n' +
    '            return null;\n' +
    '        }\n' +
    '        // if document-fragment, skip it and use element.host instead. This happens\n' +
    '        // when the element is inside a shadow root.\n' +
    '        // window.getComputedStyle errors on document-fragment.\n' +
    '        if (element instanceof DocumentFragment) {\n' +
    '            element = element.host;\n' +
    '        }\n' +
    '        let computedStyle = window.getComputedStyle(element);\n' +
    '        let computedStyleProperty = computedStyle.getPropertyValue(property);\n' +
    "        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n" +
    '            return computedStyleProperty;\n' +
    '        }\n' +
    "        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n" +
    "        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n" +
    "        // Fall back to the first non-'inherit' value found in an ancestor.\n" +
    "        // In any case, getPropertyValue will not return 'initial'.\n" +
    '        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n' +
    '        // I think all important non-inheritable properties (width, height, etc.)\n' +
    '        // for our purposes here are specially resolved, so this may not be an issue.\n' +
    '        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n' +
    '        let parentElement = parentElementForElement(element);\n' +
    '        return cascadedStylePropertyForElement(parentElement, property);\n' +
    '    }\n' +
    '    function elementSubtreeHasNonZeroDimensions(element) {\n' +
    '        let boundingBox = element.getBoundingClientRect();\n' +
    '        if (boundingBox.width > 0 && boundingBox.height > 0) {\n' +
    '            return true;\n' +
    '        }\n' +
    '        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n' +
    "        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n" +
    "            let strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n" +
    '            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n' +
    '        }\n' +
    "        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n" +
    "        if (cascadedOverflow === 'hidden') {\n" +
    '            return false;\n' +
    '        }\n' +
    "        // If the container's overflow is not hidden and it has zero size, consider the\n" +
    '        // container to have non-zero dimensions if a child node has non-zero dimensions.\n' +
    '        return Array.from(element.childNodes).some((childNode) => {\n' +
    '            if (childNode.nodeType === Node.TEXT_NODE) {\n' +
    '                return true;\n' +
    '            }\n' +
    '            if (nodeIsElement(childNode)) {\n' +
    '                return elementSubtreeHasNonZeroDimensions(childNode);\n' +
    '            }\n' +
    '            return false;\n' +
    '        });\n' +
    '    }\n' +
    '    function elementOverflowsContainer(element) {\n' +
    "        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n" +
    "        if (cascadedOverflow !== 'hidden') {\n" +
    '            return false;\n' +
    '        }\n' +
    '        // FIXME: this needs to take into account the scroll position of the element,\n' +
    '        // the display modes of it and its ancestors, and the container it overflows.\n' +
    "        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n" +
    '        return true;\n' +
    '    }\n' +
    '    function isElementSubtreeHiddenByOverflow(element) {\n' +
    '        if (!element) {\n' +
    '            return false;\n' +
    '        }\n' +
    '        if (!elementOverflowsContainer(element)) {\n' +
    '            return false;\n' +
    '        }\n' +
    '        if (!element.childNodes.length) {\n' +
    '            return false;\n' +
    '        }\n' +
    "        // This element's subtree is hidden by overflow if all child subtrees are as well.\n" +
    '        return Array.from(element.childNodes).every((childNode) => {\n' +
    '            // Returns true if the child node is overflowed or otherwise hidden.\n' +
    "            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n" +
    '            // Visibility of text nodes is controlled by parent\n' +
    '            if (childNode.nodeType === Node.TEXT_NODE) {\n' +
    '                return false;\n' +
    '            }\n' +
    '            if (!nodeIsElement(childNode)) {\n' +
    '                return true;\n' +
    '            }\n' +
    '            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n' +
    '                return true;\n' +
    '            }\n' +
    '            // Recurse.\n' +
    '            return isElementSubtreeHiddenByOverflow(childNode);\n' +
    '        });\n' +
    '    }\n' +
    '    // walk up the tree testing for a shadow root\n' +
    '    function isElementInsideShadowRoot(element) {\n' +
    '        if (!element) {\n' +
    '            return false;\n' +
    '        }\n' +
    '        if (element.parentNode && element.parentNode.host) {\n' +
    '            return true;\n' +
    '        }\n' +
    '        return isElementInsideShadowRoot(element.parentNode);\n' +
    '    }\n' +
    `    // This is a partial reimplementation of Selenium's "element is displayed" algorithm.\n` +
    "    // When the W3C specification's algorithm stabilizes, we should implement that.\n" +
    '    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n' +
    '    if (!isElementInsideShadowRoot(element) && !document.contains(element)) {\n' +
    '        return false;\n' +
    '    }\n' +
    '    // Special cases for specific tag names.\n' +
    '    switch (element.tagName.toUpperCase()) {\n' +
    "        case 'BODY':\n" +
    '            return true;\n' +
    "        case 'SCRIPT':\n" +
    "        case 'NOSCRIPT':\n" +
    '            return false;\n' +
    "        case 'OPTGROUP':\n" +
    "        case 'OPTION': {\n" +
    '            // Option/optgroup are considered shown if the containing <select> is shown.\n' +
    "            let enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, (e) => e.tagName.toUpperCase() === 'SELECT');\n" +
    '            return isElementDisplayed(enclosingSelectElement);\n' +
    '        }\n' +
    "        case 'INPUT':\n" +
    '            // <input type="hidden"> is considered not shown.\n' +
    "            if (element.type === 'hidden') {\n" +
    '                return false;\n' +
    '            }\n' +
    '            break;\n' +
    "        // case 'MAP':\n" +
    "        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n" +
    '        default:\n' +
    '            break;\n' +
    '    }\n' +
    "    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n" +
    '        return false;\n' +
    '    }\n' +
    '    let hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\n' +
    "        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n" +
    '    });\n' +
    '    let hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\n' +
    "        return cascadedStylePropertyForElement(e, 'display') === 'none';\n" +
    '    });\n' +
    '    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n' +
    '        return false;\n' +
    '    }\n' +
    '    if (!elementSubtreeHasNonZeroDimensions(element)) {\n' +
    '        return false;\n' +
    '    }\n' +
    '    if (isElementSubtreeHiddenByOverflow(element)) {\n' +
    '        return false;\n' +
    '    }\n' +
    '    return true;\n' +
    '}).apply(null, arguments)',
  args: [
    {
      'element-6066-11e4-a52e-4f735466cecf': 'e7d8ffa7-fc6c-4687-90a9-470051706742',
      ELEMENT: 'e7d8ffa7-fc6c-4687-90a9-470051706742'
    }
  ]
}
2021-10-30T13:05:22.472Z INFO webdriver: RESULT true
2021-10-30T13:05:22.473Z INFO webdriver: COMMAND elementClick("e7d8ffa7-fc6c-4687-90a9-470051706742")
2021-10-30T13:05:22.473Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element/e7d8ffa7-fc6c-4687-90a9-470051706742/click
2021-10-30T13:05:25.658Z INFO webdriver: COMMAND getTitle()
2021-10-30T13:05:25.658Z INFO webdriver: [GET] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/title
2021-10-30T13:05:25.750Z INFO webdriver: RESULT Child Safety innovations for our most precious passengers | Volvo Cars
2021-10-30T13:05:25.751Z INFO webdriver: COMMAND getTitle()
2021-10-30T13:05:25.752Z INFO webdriver: [GET] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/title
2021-10-30T13:05:25.902Z INFO webdriver: RESULT Child Safety innovations for our most precious passengers | Volvo Cars
2021-10-30T13:05:25.904Z INFO webdriver: COMMAND back()
2021-10-30T13:05:25.904Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/back
2021-10-30T13:05:26.946Z INFO webdriver: COMMAND findElement("xpath", "//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a")
2021-10-30T13:05:26.946Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element
2021-10-30T13:05:26.946Z INFO webdriver: DATA {
  using: 'xpath',
  value: '//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a'
}
2021-10-30T13:05:27.012Z INFO webdriver: RESULT {
  'element-6066-11e4-a52e-4f735466cecf': '0ddca8cc-020c-42ab-a1bc-3f86ae829efe'
}
2021-10-30T13:05:27.016Z INFO webdriver: COMMAND elementClick("0ddca8cc-020c-42ab-a1bc-3f86ae829efe")
2021-10-30T13:05:27.016Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element/0ddca8cc-020c-42ab-a1bc-3f86ae829efe/click
2021-10-30T13:05:27.020Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-30T13:05:27.021Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/execute/sync
2021-10-30T13:05:27.021Z INFO webdriver: DATA {
  script: 'return (function isElementDisplayed(element) {\n' +
    '    function nodeIsElement(node) {\n' +
    '        if (!node) {\n' +
    '            return false;\n' +
    '        }\n' +
    '        switch (node.nodeType) {\n' +
    '            case Node.ELEMENT_NODE:\n' +
    '            case Node.DOCUMENT_NODE:\n' +
    '            case Node.DOCUMENT_FRAGMENT_NODE:\n' +
    '                return true;\n' +
    '            default:\n' +
    '                return false;\n' +
    '        }\n' +
    '    }\n' +
    '    function parentElementForElement(element) {\n' +
    '        if (!element) {\n' +
    '            return null;\n' +
    '        }\n' +
    '        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n' +
    '    }\n' +
    '    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n' +
    '        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode)\n' +
    '            if (predicate(node)) {\n' +
    '                return node;\n' +
    '            }\n' +
    '        return null;\n' +
    '    }\n' +
    '    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n' +
    '        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element))\n' +
    '            if (predicate(element)) {\n' +
    '                return element;\n' +
    '            }\n' +
    '        return null;\n' +
    '    }\n' +
    '    function cascadedStylePropertyForElement(element, property) {\n' +
    '        if (!element || !property) {\n' +
    '            return null;\n' +
    '        }\n' +
    '        // if document-fragment, skip it and use element.host instead. This happens\n' +
    '        // when the element is inside a shadow root.\n' +
    '        // window.getComputedStyle errors on document-fragment.\n' +
    '        if (element instanceof DocumentFragment) {\n' +
    '            element = element.host;\n' +
    '        }\n' +
    '        let computedStyle = window.getComputedStyle(element);\n' +
    '        let computedStyleProperty = computedStyle.getPropertyValue(property);\n' +
    "        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n" +
    '            return computedStyleProperty;\n' +
    '        }\n' +
    "        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n" +
    "        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n" +
    "        // Fall back to the first non-'inherit' value found in an ancestor.\n" +
    "        // In any case, getPropertyValue will not return 'initial'.\n" +
    '        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n' +
    '        // I think all important non-inheritable properties (width, height, etc.)\n' +
    '        // for our purposes here are specially resolved, so this may not be an issue.\n' +
    '        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n' +
    '        let parentElement = parentElementForElement(element);\n' +
    '        return cascadedStylePropertyForElement(parentElement, property);\n' +
    '    }\n' +
    '    function elementSubtreeHasNonZeroDimensions(element) {\n' +
    '        let boundingBox = element.getBoundingClientRect();\n' +
    '        if (boundingBox.width > 0 && boundingBox.height > 0) {\n' +
    '            return true;\n' +
    '        }\n' +
    '        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n' +
    "        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n" +
    "            let strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n" +
    '            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n' +
    '        }\n' +
    "        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n" +
    "        if (cascadedOverflow === 'hidden') {\n" +
    '            return false;\n' +
    '        }\n' +
    "        // If the container's overflow is not hidden and it has zero size, consider the\n" +
    '        // container to have non-zero dimensions if a child node has non-zero dimensions.\n' +
    '        return Array.from(element.childNodes).some((childNode) => {\n' +
    '            if (childNode.nodeType === Node.TEXT_NODE) {\n' +
    '                return true;\n' +
    '            }\n' +
    '            if (nodeIsElement(childNode)) {\n' +
    '                return elementSubtreeHasNonZeroDimensions(childNode);\n' +
    '            }\n' +
    '            return false;\n' +
    '        });\n' +
    '    }\n' +
    '    function elementOverflowsContainer(element) {\n' +
    "        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n" +
    "        if (cascadedOverflow !== 'hidden') {\n" +
    '            return false;\n' +
    '        }\n' +
    '        // FIXME: this needs to take into account the scroll position of the element,\n' +
    '        // the display modes of it and its ancestors, and the container it overflows.\n' +
    "        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n" +
    '        return true;\n' +
    '    }\n' +
    '    function isElementSubtreeHiddenByOverflow(element) {\n' +
    '        if (!element) {\n' +
    '            return false;\n' +
    '        }\n' +
    '        if (!elementOverflowsContainer(element)) {\n' +
    '            return false;\n' +
    '        }\n' +
    '        if (!element.childNodes.length) {\n' +
    '            return false;\n' +
    '        }\n' +
    "        // This element's subtree is hidden by overflow if all child subtrees are as well.\n" +
    '        return Array.from(element.childNodes).every((childNode) => {\n' +
    '            // Returns true if the child node is overflowed or otherwise hidden.\n' +
    "            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n" +
    '            // Visibility of text nodes is controlled by parent\n' +
    '            if (childNode.nodeType === Node.TEXT_NODE) {\n' +
    '                return false;\n' +
    '            }\n' +
    '            if (!nodeIsElement(childNode)) {\n' +
    '                return true;\n' +
    '            }\n' +
    '            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n' +
    '                return true;\n' +
    '            }\n' +
    '            // Recurse.\n' +
    '            return isElementSubtreeHiddenByOverflow(childNode);\n' +
    '        });\n' +
    '    }\n' +
    '    // walk up the tree testing for a shadow root\n' +
    '    function isElementInsideShadowRoot(element) {\n' +
    '        if (!element) {\n' +
    '            return false;\n' +
    '        }\n' +
    '        if (element.parentNode && element.parentNode.host) {\n' +
    '            return true;\n' +
    '        }\n' +
    '        return isElementInsideShadowRoot(element.parentNode);\n' +
    '    }\n' +
    `    // This is a partial reimplementation of Selenium's "element is displayed" algorithm.\n` +
    "    // When the W3C specification's algorithm stabilizes, we should implement that.\n" +
    '    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n' +
    '    if (!isElementInsideShadowRoot(element) && !document.contains(element)) {\n' +
    '        return false;\n' +
    '    }\n' +
    '    // Special cases for specific tag names.\n' +
    '    switch (element.tagName.toUpperCase()) {\n' +
    "        case 'BODY':\n" +
    '            return true;\n' +
    "        case 'SCRIPT':\n" +
    "        case 'NOSCRIPT':\n" +
    '            return false;\n' +
    "        case 'OPTGROUP':\n" +
    "        case 'OPTION': {\n" +
    '            // Option/optgroup are considered shown if the containing <select> is shown.\n' +
    "            let enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, (e) => e.tagName.toUpperCase() === 'SELECT');\n" +
    '            return isElementDisplayed(enclosingSelectElement);\n' +
    '        }\n' +
    "        case 'INPUT':\n" +
    '            // <input type="hidden"> is considered not shown.\n' +
    "            if (element.type === 'hidden') {\n" +
    '                return false;\n' +
    '            }\n' +
    '            break;\n' +
    "        // case 'MAP':\n" +
    "        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n" +
    '        default:\n' +
    '            break;\n' +
    '    }\n' +
    "    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n" +
    '        return false;\n' +
    '    }\n' +
    '    let hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\n' +
    "        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n" +
    '    });\n' +
    '    let hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\n' +
    "        return cascadedStylePropertyForElement(e, 'display') === 'none';\n" +
    '    });\n' +
    '    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n' +
    '        return false;\n' +
    '    }\n' +
    '    if (!elementSubtreeHasNonZeroDimensions(element)) {\n' +
    '        return false;\n' +
    '    }\n' +
    '    if (isElementSubtreeHiddenByOverflow(element)) {\n' +
    '        return false;\n' +
    '    }\n' +
    '    return true;\n' +
    '}).apply(null, arguments)',
  args: [
    {
      'element-6066-11e4-a52e-4f735466cecf': '0ddca8cc-020c-42ab-a1bc-3f86ae829efe',
      ELEMENT: '0ddca8cc-020c-42ab-a1bc-3f86ae829efe'
    }
  ]
}
2021-10-30T13:05:27.540Z WARN webdriver: Request encountered a stale element - terminating request
2021-10-30T13:05:27.541Z INFO webdriver: COMMAND findElement("xpath", "//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a")
2021-10-30T13:05:27.542Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element
2021-10-30T13:05:27.542Z INFO webdriver: DATA {
  using: 'xpath',
  value: '//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a'
}
2021-10-30T13:05:27.572Z WARN webdriver: Request encountered a stale element - terminating request
2021-10-30T13:05:27.573Z INFO webdriver: COMMAND findElement("xpath", "//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a")
2021-10-30T13:05:27.573Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element
2021-10-30T13:05:27.573Z INFO webdriver: DATA {
  using: 'xpath',
  value: '//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a'
}
2021-10-30T13:05:27.601Z INFO webdriver: RESULT {
  'element-6066-11e4-a52e-4f735466cecf': 'b23cae08-9112-4999-9d45-118f4b8ab269'
}
2021-10-30T13:05:27.612Z INFO webdriver: COMMAND elementClick("0ddca8cc-020c-42ab-a1bc-3f86ae829efe")
2021-10-30T13:05:27.612Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element/0ddca8cc-020c-42ab-a1bc-3f86ae829efe/click
2021-10-30T13:05:27.616Z INFO webdriver: RESULT {
  'element-6066-11e4-a52e-4f735466cecf': 'b23cae08-9112-4999-9d45-118f4b8ab269'
}
2021-10-30T13:05:27.627Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-30T13:05:27.627Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/execute/sync
2021-10-30T13:05:27.627Z INFO webdriver: DATA {
  script: 'return (function isElementDisplayed(element) {\n' +
    '    function nodeIsElement(node) {\n' +
    '        if (!node) {\n' +
    '            return false;\n' +
    '        }\n' +
    '        switch (node.nodeType) {\n' +
    '            case Node.ELEMENT_NODE:\n' +
    '            case Node.DOCUMENT_NODE:\n' +
    '            case Node.DOCUMENT_FRAGMENT_NODE:\n' +
    '                return true;\n' +
    '            default:\n' +
    '                return false;\n' +
    '        }\n' +
    '    }\n' +
    '    function parentElementForElement(element) {\n' +
    '        if (!element) {\n' +
    '            return null;\n' +
    '        }\n' +
    '        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n' +
    '    }\n' +
    '    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n' +
    '        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode)\n' +
    '            if (predicate(node)) {\n' +
    '                return node;\n' +
    '            }\n' +
    '        return null;\n' +
    '    }\n' +
    '    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n' +
    '        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element))\n' +
    '            if (predicate(element)) {\n' +
    '                return element;\n' +
    '            }\n' +
    '        return null;\n' +
    '    }\n' +
    '    function cascadedStylePropertyForElement(element, property) {\n' +
    '        if (!element || !property) {\n' +
    '            return null;\n' +
    '        }\n' +
    '        // if document-fragment, skip it and use element.host instead. This happens\n' +
    '        // when the element is inside a shadow root.\n' +
    '        // window.getComputedStyle errors on document-fragment.\n' +
    '        if (element instanceof DocumentFragment) {\n' +
    '            element = element.host;\n' +
    '        }\n' +
    '        let computedStyle = window.getComputedStyle(element);\n' +
    '        let computedStyleProperty = computedStyle.getPropertyValue(property);\n' +
    "        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n" +
    '            return computedStyleProperty;\n' +
    '        }\n' +
    "        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n" +
    "        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n" +
    "        // Fall back to the first non-'inherit' value found in an ancestor.\n" +
    "        // In any case, getPropertyValue will not return 'initial'.\n" +
    '        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n' +
    '        // I think all important non-inheritable properties (width, height, etc.)\n' +
    '        // for our purposes here are specially resolved, so this may not be an issue.\n' +
    '        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n' +
    '        let parentElement = parentElementForElement(element);\n' +
    '        return cascadedStylePropertyForElement(parentElement, property);\n' +
    '    }\n' +
    '    function elementSubtreeHasNonZeroDimensions(element) {\n' +
    '        let boundingBox = element.getBoundingClientRect();\n' +
    '        if (boundingBox.width > 0 && boundingBox.height > 0) {\n' +
    '            return true;\n' +
    '        }\n' +
    '        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n' +
    "        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n" +
    "            let strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n" +
    '            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n' +
    '        }\n' +
    "        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n" +
    "        if (cascadedOverflow === 'hidden') {\n" +
    '            return false;\n' +
    '        }\n' +
    "        // If the container's overflow is not hidden and it has zero size, consider the\n" +
    '        // container to have non-zero dimensions if a child node has non-zero dimensions.\n' +
    '        return Array.from(element.childNodes).some((childNode) => {\n' +
    '            if (childNode.nodeType === Node.TEXT_NODE) {\n' +
    '                return true;\n' +
    '            }\n' +
    '            if (nodeIsElement(childNode)) {\n' +
    '                return elementSubtreeHasNonZeroDimensions(childNode);\n' +
    '            }\n' +
    '            return false;\n' +
    '        });\n' +
    '    }\n' +
    '    function elementOverflowsContainer(element) {\n' +
    "        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n" +
    "        if (cascadedOverflow !== 'hidden') {\n" +
    '            return false;\n' +
    '        }\n' +
    '        // FIXME: this needs to take into account the scroll position of the element,\n' +
    '        // the display modes of it and its ancestors, and the container it overflows.\n' +
    "        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n" +
    '        return true;\n' +
    '    }\n' +
    '    function isElementSubtreeHiddenByOverflow(element) {\n' +
    '        if (!element) {\n' +
    '            return false;\n' +
    '        }\n' +
    '        if (!elementOverflowsContainer(element)) {\n' +
    '            return false;\n' +
    '        }\n' +
    '        if (!element.childNodes.length) {\n' +
    '            return false;\n' +
    '        }\n' +
    "        // This element's subtree is hidden by overflow if all child subtrees are as well.\n" +
    '        return Array.from(element.childNodes).every((childNode) => {\n' +
    '            // Returns true if the child node is overflowed or otherwise hidden.\n' +
    "            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n" +
    '            // Visibility of text nodes is controlled by parent\n' +
    '            if (childNode.nodeType === Node.TEXT_NODE) {\n' +
    '                return false;\n' +
    '            }\n' +
    '            if (!nodeIsElement(childNode)) {\n' +
    '                return true;\n' +
    '            }\n' +
    '            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n' +
    '                return true;\n' +
    '            }\n' +
    '            // Recurse.\n' +
    '            return isElementSubtreeHiddenByOverflow(childNode);\n' +
    '        });\n' +
    '    }\n' +
    '    // walk up the tree testing for a shadow root\n' +
    '    function isElementInsideShadowRoot(element) {\n' +
    '        if (!element) {\n' +
    '            return false;\n' +
    '        }\n' +
    '        if (element.parentNode && element.parentNode.host) {\n' +
    '            return true;\n' +
    '        }\n' +
    '        return isElementInsideShadowRoot(element.parentNode);\n' +
    '    }\n' +
    `    // This is a partial reimplementation of Selenium's "element is displayed" algorithm.\n` +
    "    // When the W3C specification's algorithm stabilizes, we should implement that.\n" +
    '    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n' +
    '    if (!isElementInsideShadowRoot(element) && !document.contains(element)) {\n' +
    '        return false;\n' +
    '    }\n' +
    '    // Special cases for specific tag names.\n' +
    '    switch (element.tagName.toUpperCase()) {\n' +
    "        case 'BODY':\n" +
    '            return true;\n' +
    "        case 'SCRIPT':\n" +
    "        case 'NOSCRIPT':\n" +
    '            return false;\n' +
    "        case 'OPTGROUP':\n" +
    "        case 'OPTION': {\n" +
    '            // Option/optgroup are considered shown if the containing <select> is shown.\n' +
    "            let enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, (e) => e.tagName.toUpperCase() === 'SELECT');\n" +
    '            return isElementDisplayed(enclosingSelectElement);\n' +
    '        }\n' +
    "        case 'INPUT':\n" +
    '            // <input type="hidden"> is considered not shown.\n' +
    "            if (element.type === 'hidden') {\n" +
    '                return false;\n' +
    '            }\n' +
    '            break;\n' +
    "        // case 'MAP':\n" +
    "        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n" +
    '        default:\n' +
    '            break;\n' +
    '    }\n' +
    "    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n" +
    '        return false;\n' +
    '    }\n' +
    '    let hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\n' +
    "        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n" +
    '    });\n' +
    '    let hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\n' +
    "        return cascadedStylePropertyForElement(e, 'display') === 'none';\n" +
    '    });\n' +
    '    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n' +
    '        return false;\n' +
    '    }\n' +
    '    if (!elementSubtreeHasNonZeroDimensions(element)) {\n' +
    '        return false;\n' +
    '    }\n' +
    '    if (isElementSubtreeHiddenByOverflow(element)) {\n' +
    '        return false;\n' +
    '    }\n' +
    '    return true;\n' +
    '}).apply(null, arguments)',
  args: [
    {
      'element-6066-11e4-a52e-4f735466cecf': 'b23cae08-9112-4999-9d45-118f4b8ab269',
      ELEMENT: 'b23cae08-9112-4999-9d45-118f4b8ab269'
    }
  ]
}
2021-10-30T13:05:27.649Z WARN webdriver: Request encountered a stale element - terminating request
2021-10-30T13:05:27.650Z INFO webdriver: COMMAND findElement("xpath", "//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a")
2021-10-30T13:05:27.650Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element
2021-10-30T13:05:27.650Z INFO webdriver: DATA {
  using: 'xpath',
  value: '//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a'
}
2021-10-30T13:05:27.668Z INFO webdriver: RESULT true
2021-10-30T13:05:27.670Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-30T13:05:27.670Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/execute/sync
2021-10-30T13:05:27.670Z INFO webdriver: DATA {
  script: 'return (function isElementInViewport(elem) {\n' +
    '    if (!elem.getBoundingClientRect) {\n' +
    '        return false;\n' +
    '    }\n' +
    '    const rect = elem.getBoundingClientRect();\n' +
    '    const windowHeight = (window.innerHeight || document.documentElement.clientHeight);\n' +
    '    const windowWidth = (window.innerWidth || document.documentElement.clientWidth);\n' +
    '    const vertInView = (rect.top <= windowHeight) && ((rect.top + rect.height) > 0);\n' +
    '    const horInView = (rect.left <= windowWidth) && ((rect.left + rect.width) > 0);\n' +
    '    return (vertInView && horInView);\n' +
    '}).apply(null, arguments)',
  args: [
    {
      'element-6066-11e4-a52e-4f735466cecf': 'b23cae08-9112-4999-9d45-118f4b8ab269',
      ELEMENT: 'b23cae08-9112-4999-9d45-118f4b8ab269'
    }
  ]
}
2021-10-30T13:05:27.687Z INFO webdriver: RESULT {
  'element-6066-11e4-a52e-4f735466cecf': 'b23cae08-9112-4999-9d45-118f4b8ab269'
}
2021-10-30T13:05:27.696Z INFO webdriver: COMMAND elementClick("b23cae08-9112-4999-9d45-118f4b8ab269")
2021-10-30T13:05:27.696Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element/b23cae08-9112-4999-9d45-118f4b8ab269/click
2021-10-30T13:05:27.747Z INFO webdriver: RESULT false
2021-10-30T13:05:27.750Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-30T13:05:27.751Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/execute/sync
2021-10-30T13:05:27.751Z INFO webdriver: DATA {
  script: 'return (function isElementDisplayed(element) {\n' +
    '    function nodeIsElement(node) {\n' +
    '        if (!node) {\n' +
    '            return false;\n' +
    '        }\n' +
    '        switch (node.nodeType) {\n' +
    '            case Node.ELEMENT_NODE:\n' +
    '            case Node.DOCUMENT_NODE:\n' +
    '            case Node.DOCUMENT_FRAGMENT_NODE:\n' +
    '                return true;\n' +
    '            default:\n' +
    '                return false;\n' +
    '        }\n' +
    '    }\n' +
    '    function parentElementForElement(element) {\n' +
    '        if (!element) {\n' +
    '            return null;\n' +
    '        }\n' +
    '        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n' +
    '    }\n' +
    '    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n' +
    '        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode)\n' +
    '            if (predicate(node)) {\n' +
    '                return node;\n' +
    '            }\n' +
    '        return null;\n' +
    '    }\n' +
    '    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n' +
    '        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element))\n' +
    '            if (predicate(element)) {\n' +
    '                return element;\n' +
    '            }\n' +
    '        return null;\n' +
    '    }\n' +
    '    function cascadedStylePropertyForElement(element, property) {\n' +
    '        if (!element || !property) {\n' +
    '            return null;\n' +
    '        }\n' +
    '        // if document-fragment, skip it and use element.host instead. This happens\n' +
    '        // when the element is inside a shadow root.\n' +
    '        // window.getComputedStyle errors on document-fragment.\n' +
    '        if (element instanceof DocumentFragment) {\n' +
    '            element = element.host;\n' +
    '        }\n' +
    '        let computedStyle = window.getComputedStyle(element);\n' +
    '        let computedStyleProperty = computedStyle.getPropertyValue(property);\n' +
    "        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n" +
    '            return computedStyleProperty;\n' +
    '        }\n' +
    "        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n" +
    "        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n" +
    "        // Fall back to the first non-'inherit' value found in an ancestor.\n" +
    "        // In any case, getPropertyValue will not return 'initial'.\n" +
    '        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n' +
    '        // I think all important non-inheritable properties (width, height, etc.)\n' +
    '        // for our purposes here are specially resolved, so this may not be an issue.\n' +
    '        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n' +
    '        let parentElement = parentElementForElement(element);\n' +
    '        return cascadedStylePropertyForElement(parentElement, property);\n' +
    '    }\n' +
    '    function elementSubtreeHasNonZeroDimensions(element) {\n' +
    '        let boundingBox = element.getBoundingClientRect();\n' +
    '        if (boundingBox.width > 0 && boundingBox.height > 0) {\n' +
    '            return true;\n' +
    '        }\n' +
    '        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n' +
    "        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n" +
    "            let strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n" +
    '            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n' +
    '        }\n' +
    "        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n" +
    "        if (cascadedOverflow === 'hidden') {\n" +
    '            return false;\n' +
    '        }\n' +
    "        // If the container's overflow is not hidden and it has zero size, consider the\n" +
    '        // container to have non-zero dimensions if a child node has non-zero dimensions.\n' +
    '        return Array.from(element.childNodes).some((childNode) => {\n' +
    '            if (childNode.nodeType === Node.TEXT_NODE) {\n' +
    '                return true;\n' +
    '            }\n' +
    '            if (nodeIsElement(childNode)) {\n' +
    '                return elementSubtreeHasNonZeroDimensions(childNode);\n' +
    '            }\n' +
    '            return false;\n' +
    '        });\n' +
    '    }\n' +
    '    function elementOverflowsContainer(element) {\n' +
    "        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n" +
    "        if (cascadedOverflow !== 'hidden') {\n" +
    '            return false;\n' +
    '        }\n' +
    '        // FIXME: this needs to take into account the scroll position of the element,\n' +
    '        // the display modes of it and its ancestors, and the container it overflows.\n' +
    "        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n" +
    '        return true;\n' +
    '    }\n' +
    '    function isElementSubtreeHiddenByOverflow(element) {\n' +
    '        if (!element) {\n' +
    '            return false;\n' +
    '        }\n' +
    '        if (!elementOverflowsContainer(element)) {\n' +
    '            return false;\n' +
    '        }\n' +
    '        if (!element.childNodes.length) {\n' +
    '            return false;\n' +
    '        }\n' +
    "        // This element's subtree is hidden by overflow if all child subtrees are as well.\n" +
    '        return Array.from(element.childNodes).every((childNode) => {\n' +
    '            // Returns true if the child node is overflowed or otherwise hidden.\n' +
    "            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n" +
    '            // Visibility of text nodes is controlled by parent\n' +
    '            if (childNode.nodeType === Node.TEXT_NODE) {\n' +
    '                return false;\n' +
    '            }\n' +
    '            if (!nodeIsElement(childNode)) {\n' +
    '                return true;\n' +
    '            }\n' +
    '            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n' +
    '                return true;\n' +
    '            }\n' +
    '            // Recurse.\n' +
    '            return isElementSubtreeHiddenByOverflow(childNode);\n' +
    '        });\n' +
    '    }\n' +
    '    // walk up the tree testing for a shadow root\n' +
    '    function isElementInsideShadowRoot(element) {\n' +
    '        if (!element) {\n' +
    '            return false;\n' +
    '        }\n' +
    '        if (element.parentNode && element.parentNode.host) {\n' +
    '            return true;\n' +
    '        }\n' +
    '        return isElementInsideShadowRoot(element.parentNode);\n' +
    '    }\n' +
    `    // This is a partial reimplementation of Selenium's "element is displayed" algorithm.\n` +
    "    // When the W3C specification's algorithm stabilizes, we should implement that.\n" +
    '    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n' +
    '    if (!isElementInsideShadowRoot(element) && !document.contains(element)) {\n' +
    '        return false;\n' +
    '    }\n' +
    '    // Special cases for specific tag names.\n' +
    '    switch (element.tagName.toUpperCase()) {\n' +
    "        case 'BODY':\n" +
    '            return true;\n' +
    "        case 'SCRIPT':\n" +
    "        case 'NOSCRIPT':\n" +
    '            return false;\n' +
    "        case 'OPTGROUP':\n" +
    "        case 'OPTION': {\n" +
    '            // Option/optgroup are considered shown if the containing <select> is shown.\n' +
    "            let enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, (e) => e.tagName.toUpperCase() === 'SELECT');\n" +
    '            return isElementDisplayed(enclosingSelectElement);\n' +
    '        }\n' +
    "        case 'INPUT':\n" +
    '            // <input type="hidden"> is considered not shown.\n' +
    "            if (element.type === 'hidden') {\n" +
    '                return false;\n' +
    '            }\n' +
    '            break;\n' +
    "        // case 'MAP':\n" +
    "        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n" +
    '        default:\n' +
    '            break;\n' +
    '    }\n' +
    "    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n" +
    '        return false;\n' +
    '    }\n' +
    '    let hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\n' +
    "        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n" +
    '    });\n' +
    '    let hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\n' +
    "        return cascadedStylePropertyForElement(e, 'display') === 'none';\n" +
    '    });\n' +
    '    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n' +
    '        return false;\n' +
    '    }\n' +
    '    if (!elementSubtreeHasNonZeroDimensions(element)) {\n' +
    '        return false;\n' +
    '    }\n' +
    '    if (isElementSubtreeHiddenByOverflow(element)) {\n' +
    '        return false;\n' +
    '    }\n' +
    '    return true;\n' +
    '}).apply(null, arguments)',
  args: [
    {
      'element-6066-11e4-a52e-4f735466cecf': 'b23cae08-9112-4999-9d45-118f4b8ab269',
      ELEMENT: 'b23cae08-9112-4999-9d45-118f4b8ab269'
    }
  ]
}
2021-10-30T13:05:30.162Z INFO webdriver: COMMAND getTitle()
2021-10-30T13:05:30.163Z INFO webdriver: [GET] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/title
2021-10-30T13:05:30.239Z WARN webdriver: Request encountered a stale element - terminating request
2021-10-30T13:05:30.240Z INFO webdriver: COMMAND findElement("xpath", "//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a")
2021-10-30T13:05:30.240Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element
2021-10-30T13:05:30.240Z INFO webdriver: DATA {
  using: 'xpath',
  value: '//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a'
}
2021-10-30T13:05:30.248Z INFO webdriver: RESULT The E.V.A. Initiative | Cars safe for all
2021-10-30T13:05:30.250Z INFO webdriver: COMMAND findElement("xpath", "//*[@id="Video-1"]/section/div/div/div/button")
2021-10-30T13:05:30.251Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element
2021-10-30T13:05:30.251Z INFO webdriver: DATA {
  using: 'xpath',
  value: '//*[@id="Video-1"]/section/div/div/div/button'
}
2021-10-30T13:05:30.276Z INFO webdriver: RESULT {
  error: 'no such element',
  message: 'no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a"}\n' +
    '  (Session info: chrome=94.0.4606.81)',
  stacktrace: '#0 0x564d9a5f98f3 <unknown>\n' +
    '#1 0x564d9a0deba8 <unknown>\n' +
    '#2 0x564d9a1149b5 <unknown>\n' +
    '#3 0x564d9a147104 <unknown>\n' +
    '#4 0x564d9a131e9d <unknown>\n' +
    '#5 0x564d9a144dac <unknown>\n' +
    '#6 0x564d9a131d63 <unknown>\n' +
    '#7 0x564d9a108144 <unknown>\n' +
    '#8 0x564d9a109135 <unknown>\n' +
    '#9 0x564d9a628c3e <unknown>\n' +
    '#10 0x564d9a63e6b7 <unknown>\n' +
    '#11 0x564d9a629b95 <unknown>\n' +
    '#12 0x564d9a63fb05 <unknown>\n' +
    '#13 0x564d9a61e2ab <unknown>\n' +
    '#14 0x564d9a65a248 <unknown>\n' +
    '#15 0x564d9a65a3c8 <unknown>\n' +
    '#16 0x564d9a67533d <unknown>\n' +
    '#17 0x7fefb7284609 start_thread\n'
}
2021-10-30T13:05:30.282Z INFO webdriver: COMMAND findElement("xpath", "//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a")
2021-10-30T13:05:30.282Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element
2021-10-30T13:05:30.282Z INFO webdriver: DATA {
  using: 'xpath',
  value: '//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a'
}
2021-10-30T13:05:30.300Z INFO webdriver: RESULT {
  'element-6066-11e4-a52e-4f735466cecf': '9f4df46a-0aa5-4ef0-b58f-160959bf1620'
}
2021-10-30T13:05:30.308Z INFO webdriver: COMMAND elementClick("9f4df46a-0aa5-4ef0-b58f-160959bf1620")
2021-10-30T13:05:30.308Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element/9f4df46a-0aa5-4ef0-b58f-160959bf1620/click
2021-10-30T13:05:30.328Z INFO webdriver: RESULT {
  error: 'no such element',
  message: 'no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a"}\n' +
    '  (Session info: chrome=94.0.4606.81)',
  stacktrace: '#0 0x564d9a5f98f3 <unknown>\n' +
    '#1 0x564d9a0deba8 <unknown>\n' +
    '#2 0x564d9a1149b5 <unknown>\n' +
    '#3 0x564d9a147104 <unknown>\n' +
    '#4 0x564d9a131e9d <unknown>\n' +
    '#5 0x564d9a144dac <unknown>\n' +
    '#6 0x564d9a131d63 <unknown>\n' +
    '#7 0x564d9a108144 <unknown>\n' +
    '#8 0x564d9a109135 <unknown>\n' +
    '#9 0x564d9a628c3e <unknown>\n' +
    '#10 0x564d9a63e6b7 <unknown>\n' +
    '#11 0x564d9a629b95 <unknown>\n' +
    '#12 0x564d9a63fb05 <unknown>\n' +
    '#13 0x564d9a61e2ab <unknown>\n' +
    '#14 0x564d9a65a248 <unknown>\n' +
    '#15 0x564d9a65a3c8 <unknown>\n' +
    '#16 0x564d9a67533d <unknown>\n' +
    '#17 0x7fefb7284609 start_thread\n'
}
2021-10-30T13:05:30.334Z INFO webdriver: COMMAND findElement("xpath", "//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a")
2021-10-30T13:05:30.334Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element
2021-10-30T13:05:30.334Z INFO webdriver: DATA {
  using: 'xpath',
  value: '//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a'
}
2021-10-30T13:05:30.695Z INFO webdriver: RESULT {
  error: 'no such element',
  message: 'no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a"}\n' +
    '  (Session info: chrome=94.0.4606.81)',
  stacktrace: '#0 0x564d9a5f98f3 <unknown>\n' +
    '#1 0x564d9a0deba8 <unknown>\n' +
    '#2 0x564d9a1149b5 <unknown>\n' +
    '#3 0x564d9a147104 <unknown>\n' +
    '#4 0x564d9a131e9d <unknown>\n' +
    '#5 0x564d9a144dac <unknown>\n' +
    '#6 0x564d9a131d63 <unknown>\n' +
    '#7 0x564d9a108144 <unknown>\n' +
    '#8 0x564d9a109135 <unknown>\n' +
    '#9 0x564d9a628c3e <unknown>\n' +
    '#10 0x564d9a63e6b7 <unknown>\n' +
    '#11 0x564d9a629b95 <unknown>\n' +
    '#12 0x564d9a63fb05 <unknown>\n' +
    '#13 0x564d9a61e2ab <unknown>\n' +
    '#14 0x564d9a65a248 <unknown>\n' +
    '#15 0x564d9a65a3c8 <unknown>\n' +
    '#16 0x564d9a67533d <unknown>\n' +
    '#17 0x7fefb7284609 start_thread\n'
}
2021-10-30T13:05:30.701Z INFO webdriver: COMMAND findElement("xpath", "//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a")
2021-10-30T13:05:30.702Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element
2021-10-30T13:05:30.702Z INFO webdriver: DATA {
  using: 'xpath',
  value: '//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a'
}
2021-10-30T13:05:30.795Z INFO webdriver: RESULT {
  error: 'no such element',
  message: 'no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a"}\n' +
    '  (Session info: chrome=94.0.4606.81)',
  stacktrace: '#0 0x564d9a5f98f3 <unknown>\n' +
    '#1 0x564d9a0deba8 <unknown>\n' +
    '#2 0x564d9a1149b5 <unknown>\n' +
    '#3 0x564d9a147104 <unknown>\n' +
    '#4 0x564d9a131e9d <unknown>\n' +
    '#5 0x564d9a144dac <unknown>\n' +
    '#6 0x564d9a131d63 <unknown>\n' +
    '#7 0x564d9a108144 <unknown>\n' +
    '#8 0x564d9a109135 <unknown>\n' +
    '#9 0x564d9a628c3e <unknown>\n' +
    '#10 0x564d9a63e6b7 <unknown>\n' +
    '#11 0x564d9a629b95 <unknown>\n' +
    '#12 0x564d9a63fb05 <unknown>\n' +
    '#13 0x564d9a61e2ab <unknown>\n' +
    '#14 0x564d9a65a248 <unknown>\n' +
    '#15 0x564d9a65a3c8 <unknown>\n' +
    '#16 0x564d9a67533d <unknown>\n' +
    '#17 0x7fefb7284609 start_thread\n'
}
2021-10-30T13:05:30.804Z INFO webdriver: COMMAND findElement("xpath", "//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a")
2021-10-30T13:05:30.804Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element
2021-10-30T13:05:30.804Z INFO webdriver: DATA {
  using: 'xpath',
  value: '//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a'
}
2021-10-30T13:05:30.849Z INFO webdriver: RESULT {
  error: 'no such element',
  message: 'no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a"}\n' +
    '  (Session info: chrome=94.0.4606.81)',
  stacktrace: '#0 0x564d9a5f98f3 <unknown>\n' +
    '#1 0x564d9a0deba8 <unknown>\n' +
    '#2 0x564d9a1149b5 <unknown>\n' +
    '#3 0x564d9a147104 <unknown>\n' +
    '#4 0x564d9a131e9d <unknown>\n' +
    '#5 0x564d9a144dac <unknown>\n' +
    '#6 0x564d9a131d63 <unknown>\n' +
    '#7 0x564d9a108144 <unknown>\n' +
    '#8 0x564d9a109135 <unknown>\n' +
    '#9 0x564d9a628c3e <unknown>\n' +
    '#10 0x564d9a63e6b7 <unknown>\n' +
    '#11 0x564d9a629b95 <unknown>\n' +
    '#12 0x564d9a63fb05 <unknown>\n' +
    '#13 0x564d9a61e2ab <unknown>\n' +
    '#14 0x564d9a65a248 <unknown>\n' +
    '#15 0x564d9a65a3c8 <unknown>\n' +
    '#16 0x564d9a67533d <unknown>\n' +
    '#17 0x7fefb7284609 start_thread\n'
}
2021-10-30T13:05:30.855Z INFO webdriver: COMMAND findElement("xpath", "//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a")
2021-10-30T13:05:30.855Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element
2021-10-30T13:05:30.855Z INFO webdriver: DATA {
  using: 'xpath',
  value: '//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a'
}
2021-10-30T13:05:30.894Z INFO webdriver: RESULT {
  error: 'no such element',
  message: 'no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a"}\n' +
    '  (Session info: chrome=94.0.4606.81)',
  stacktrace: '#0 0x564d9a5f98f3 <unknown>\n' +
    '#1 0x564d9a0deba8 <unknown>\n' +
    '#2 0x564d9a1149b5 <unknown>\n' +
    '#3 0x564d9a147104 <unknown>\n' +
    '#4 0x564d9a131e9d <unknown>\n' +
    '#5 0x564d9a144dac <unknown>\n' +
    '#6 0x564d9a131d63 <unknown>\n' +
    '#7 0x564d9a108144 <unknown>\n' +
    '#8 0x564d9a109135 <unknown>\n' +
    '#9 0x564d9a628c3e <unknown>\n' +
    '#10 0x564d9a63e6b7 <unknown>\n' +
    '#11 0x564d9a629b95 <unknown>\n' +
    '#12 0x564d9a63fb05 <unknown>\n' +
    '#13 0x564d9a61e2ab <unknown>\n' +
    '#14 0x564d9a65a248 <unknown>\n' +
    '#15 0x564d9a65a3c8 <unknown>\n' +
    '#16 0x564d9a67533d <unknown>\n' +
    '#17 0x7fefb7284609 start_thread\n'
}
2021-10-30T13:05:30.899Z INFO webdriver: COMMAND findElement("xpath", "//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a")
2021-10-30T13:05:30.899Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element
2021-10-30T13:05:30.899Z INFO webdriver: DATA {
  using: 'xpath',
  value: '//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a'
}
2021-10-30T13:05:30.934Z INFO webdriver: RESULT {
  error: 'no such element',
  message: 'no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a"}\n' +
    '  (Session info: chrome=94.0.4606.81)',
  stacktrace: '#0 0x564d9a5f98f3 <unknown>\n' +
    '#1 0x564d9a0deba8 <unknown>\n' +
    '#2 0x564d9a1149b5 <unknown>\n' +
    '#3 0x564d9a147104 <unknown>\n' +
    '#4 0x564d9a131e9d <unknown>\n' +
    '#5 0x564d9a144dac <unknown>\n' +
    '#6 0x564d9a131d63 <unknown>\n' +
    '#7 0x564d9a108144 <unknown>\n' +
    '#8 0x564d9a109135 <unknown>\n' +
    '#9 0x564d9a628c3e <unknown>\n' +
    '#10 0x564d9a63e6b7 <unknown>\n' +
    '#11 0x564d9a629b95 <unknown>\n' +
    '#12 0x564d9a63fb05 <unknown>\n' +
    '#13 0x564d9a61e2ab <unknown>\n' +
    '#14 0x564d9a65a248 <unknown>\n' +
    '#15 0x564d9a65a3c8 <unknown>\n' +
    '#16 0x564d9a67533d <unknown>\n' +
    '#17 0x7fefb7284609 start_thread\n'
}
2021-10-30T13:05:30.940Z INFO webdriver: COMMAND findElement("xpath", "//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a")
2021-10-30T13:05:30.940Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element
2021-10-30T13:05:30.940Z INFO webdriver: DATA {
  using: 'xpath',
  value: '//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a'
}
2021-10-30T13:05:30.972Z INFO webdriver: RESULT {
  error: 'no such element',
  message: 'no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a"}\n' +
    '  (Session info: chrome=94.0.4606.81)',
  stacktrace: '#0 0x564d9a5f98f3 <unknown>\n' +
    '#1 0x564d9a0deba8 <unknown>\n' +
    '#2 0x564d9a1149b5 <unknown>\n' +
    '#3 0x564d9a147104 <unknown>\n' +
    '#4 0x564d9a131e9d <unknown>\n' +
    '#5 0x564d9a144dac <unknown>\n' +
    '#6 0x564d9a131d63 <unknown>\n' +
    '#7 0x564d9a108144 <unknown>\n' +
    '#8 0x564d9a109135 <unknown>\n' +
    '#9 0x564d9a628c3e <unknown>\n' +
    '#10 0x564d9a63e6b7 <unknown>\n' +
    '#11 0x564d9a629b95 <unknown>\n' +
    '#12 0x564d9a63fb05 <unknown>\n' +
    '#13 0x564d9a61e2ab <unknown>\n' +
    '#14 0x564d9a65a248 <unknown>\n' +
    '#15 0x564d9a65a3c8 <unknown>\n' +
    '#16 0x564d9a67533d <unknown>\n' +
    '#17 0x7fefb7284609 start_thread\n'
}
2021-10-30T13:05:30.977Z INFO webdriver: COMMAND findElement("xpath", "//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a")
2021-10-30T13:05:30.977Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element
2021-10-30T13:05:30.977Z INFO webdriver: DATA {
  using: 'xpath',
  value: '//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a'
}
2021-10-30T13:05:31.008Z INFO webdriver: RESULT {
  error: 'no such element',
  message: 'no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a"}\n' +
    '  (Session info: chrome=94.0.4606.81)',
  stacktrace: '#0 0x564d9a5f98f3 <unknown>\n' +
    '#1 0x564d9a0deba8 <unknown>\n' +
    '#2 0x564d9a1149b5 <unknown>\n' +
    '#3 0x564d9a147104 <unknown>\n' +
    '#4 0x564d9a131e9d <unknown>\n' +
    '#5 0x564d9a144dac <unknown>\n' +
    '#6 0x564d9a131d63 <unknown>\n' +
    '#7 0x564d9a108144 <unknown>\n' +
    '#8 0x564d9a109135 <unknown>\n' +
    '#9 0x564d9a628c3e <unknown>\n' +
    '#10 0x564d9a63e6b7 <unknown>\n' +
    '#11 0x564d9a629b95 <unknown>\n' +
    '#12 0x564d9a63fb05 <unknown>\n' +
    '#13 0x564d9a61e2ab <unknown>\n' +
    '#14 0x564d9a65a248 <unknown>\n' +
    '#15 0x564d9a65a3c8 <unknown>\n' +
    '#16 0x564d9a67533d <unknown>\n' +
    '#17 0x7fefb7284609 start_thread\n'
}
2021-10-30T13:05:31.448Z INFO webdriver: COMMAND findElement("xpath", "//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a")
2021-10-30T13:05:31.449Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element
2021-10-30T13:05:31.449Z INFO webdriver: DATA {
  using: 'xpath',
  value: '//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a'
}
2021-10-30T13:05:31.494Z INFO webdriver: RESULT {
  error: 'no such element',
  message: 'no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a"}\n' +
    '  (Session info: chrome=94.0.4606.81)',
  stacktrace: '#0 0x564d9a5f98f3 <unknown>\n' +
    '#1 0x564d9a0deba8 <unknown>\n' +
    '#2 0x564d9a1149b5 <unknown>\n' +
    '#3 0x564d9a147104 <unknown>\n' +
    '#4 0x564d9a131e9d <unknown>\n' +
    '#5 0x564d9a144dac <unknown>\n' +
    '#6 0x564d9a131d63 <unknown>\n' +
    '#7 0x564d9a108144 <unknown>\n' +
    '#8 0x564d9a109135 <unknown>\n' +
    '#9 0x564d9a628c3e <unknown>\n' +
    '#10 0x564d9a63e6b7 <unknown>\n' +
    '#11 0x564d9a629b95 <unknown>\n' +
    '#12 0x564d9a63fb05 <unknown>\n' +
    '#13 0x564d9a61e2ab <unknown>\n' +
    '#14 0x564d9a65a248 <unknown>\n' +
    '#15 0x564d9a65a3c8 <unknown>\n' +
    '#16 0x564d9a67533d <unknown>\n' +
    '#17 0x7fefb7284609 start_thread\n'
}
2021-10-30T13:05:31.949Z INFO webdriver: COMMAND findElement("xpath", "//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a")
2021-10-30T13:05:31.949Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element
2021-10-30T13:05:31.949Z INFO webdriver: DATA {
  using: 'xpath',
  value: '//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a'
}
2021-10-30T13:05:31.980Z INFO webdriver: RESULT {
  error: 'no such element',
  message: 'no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a"}\n' +
    '  (Session info: chrome=94.0.4606.81)',
  stacktrace: '#0 0x564d9a5f98f3 <unknown>\n' +
    '#1 0x564d9a0deba8 <unknown>\n' +
    '#2 0x564d9a1149b5 <unknown>\n' +
    '#3 0x564d9a147104 <unknown>\n' +
    '#4 0x564d9a131e9d <unknown>\n' +
    '#5 0x564d9a144dac <unknown>\n' +
    '#6 0x564d9a131d63 <unknown>\n' +
    '#7 0x564d9a108144 <unknown>\n' +
    '#8 0x564d9a109135 <unknown>\n' +
    '#9 0x564d9a628c3e <unknown>\n' +
    '#10 0x564d9a63e6b7 <unknown>\n' +
    '#11 0x564d9a629b95 <unknown>\n' +
    '#12 0x564d9a63fb05 <unknown>\n' +
    '#13 0x564d9a61e2ab <unknown>\n' +
    '#14 0x564d9a65a248 <unknown>\n' +
    '#15 0x564d9a65a3c8 <unknown>\n' +
    '#16 0x564d9a67533d <unknown>\n' +
    '#17 0x7fefb7284609 start_thread\n'
}
2021-10-30T13:05:32.447Z INFO webdriver: COMMAND findElement("xpath", "//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a")
2021-10-30T13:05:32.448Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element
2021-10-30T13:05:32.448Z INFO webdriver: DATA {
  using: 'xpath',
  value: '//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a'
}
2021-10-30T13:05:32.480Z INFO webdriver: RESULT {
  error: 'no such element',
  message: 'no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a"}\n' +
    '  (Session info: chrome=94.0.4606.81)',
  stacktrace: '#0 0x564d9a5f98f3 <unknown>\n' +
    '#1 0x564d9a0deba8 <unknown>\n' +
    '#2 0x564d9a1149b5 <unknown>\n' +
    '#3 0x564d9a147104 <unknown>\n' +
    '#4 0x564d9a131e9d <unknown>\n' +
    '#5 0x564d9a144dac <unknown>\n' +
    '#6 0x564d9a131d63 <unknown>\n' +
    '#7 0x564d9a108144 <unknown>\n' +
    '#8 0x564d9a109135 <unknown>\n' +
    '#9 0x564d9a628c3e <unknown>\n' +
    '#10 0x564d9a63e6b7 <unknown>\n' +
    '#11 0x564d9a629b95 <unknown>\n' +
    '#12 0x564d9a63fb05 <unknown>\n' +
    '#13 0x564d9a61e2ab <unknown>\n' +
    '#14 0x564d9a65a248 <unknown>\n' +
    '#15 0x564d9a65a3c8 <unknown>\n' +
    '#16 0x564d9a67533d <unknown>\n' +
    '#17 0x7fefb7284609 start_thread\n'
}
2021-10-30T13:05:32.948Z INFO webdriver: COMMAND findElement("xpath", "//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a")
2021-10-30T13:05:32.949Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element
2021-10-30T13:05:32.949Z INFO webdriver: DATA {
  using: 'xpath',
  value: '//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a'
}
2021-10-30T13:05:32.979Z INFO webdriver: RESULT {
  error: 'no such element',
  message: 'no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a"}\n' +
    '  (Session info: chrome=94.0.4606.81)',
  stacktrace: '#0 0x564d9a5f98f3 <unknown>\n' +
    '#1 0x564d9a0deba8 <unknown>\n' +
    '#2 0x564d9a1149b5 <unknown>\n' +
    '#3 0x564d9a147104 <unknown>\n' +
    '#4 0x564d9a131e9d <unknown>\n' +
    '#5 0x564d9a144dac <unknown>\n' +
    '#6 0x564d9a131d63 <unknown>\n' +
    '#7 0x564d9a108144 <unknown>\n' +
    '#8 0x564d9a109135 <unknown>\n' +
    '#9 0x564d9a628c3e <unknown>\n' +
    '#10 0x564d9a63e6b7 <unknown>\n' +
    '#11 0x564d9a629b95 <unknown>\n' +
    '#12 0x564d9a63fb05 <unknown>\n' +
    '#13 0x564d9a61e2ab <unknown>\n' +
    '#14 0x564d9a65a248 <unknown>\n' +
    '#15 0x564d9a65a3c8 <unknown>\n' +
    '#16 0x564d9a67533d <unknown>\n' +
    '#17 0x7fefb7284609 start_thread\n'
}
2021-10-30T13:05:33.447Z INFO webdriver: COMMAND findElement("xpath", "//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a")
2021-10-30T13:05:33.447Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element
2021-10-30T13:05:33.447Z INFO webdriver: DATA {
  using: 'xpath',
  value: '//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a'
}
2021-10-30T13:05:33.475Z INFO webdriver: RESULT {
  error: 'no such element',
  message: 'no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a"}\n' +
    '  (Session info: chrome=94.0.4606.81)',
  stacktrace: '#0 0x564d9a5f98f3 <unknown>\n' +
    '#1 0x564d9a0deba8 <unknown>\n' +
    '#2 0x564d9a1149b5 <unknown>\n' +
    '#3 0x564d9a147104 <unknown>\n' +
    '#4 0x564d9a131e9d <unknown>\n' +
    '#5 0x564d9a144dac <unknown>\n' +
    '#6 0x564d9a131d63 <unknown>\n' +
    '#7 0x564d9a108144 <unknown>\n' +
    '#8 0x564d9a109135 <unknown>\n' +
    '#9 0x564d9a628c3e <unknown>\n' +
    '#10 0x564d9a63e6b7 <unknown>\n' +
    '#11 0x564d9a629b95 <unknown>\n' +
    '#12 0x564d9a63fb05 <unknown>\n' +
    '#13 0x564d9a61e2ab <unknown>\n' +
    '#14 0x564d9a65a248 <unknown>\n' +
    '#15 0x564d9a65a3c8 <unknown>\n' +
    '#16 0x564d9a67533d <unknown>\n' +
    '#17 0x7fefb7284609 start_thread\n'
}
2021-10-30T13:05:33.949Z INFO webdriver: COMMAND findElement("xpath", "//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a")
2021-10-30T13:05:33.949Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element
2021-10-30T13:05:33.949Z INFO webdriver: DATA {
  using: 'xpath',
  value: '//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a'
}
2021-10-30T13:05:33.979Z INFO webdriver: RESULT {
  error: 'no such element',
  message: 'no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a"}\n' +
    '  (Session info: chrome=94.0.4606.81)',
  stacktrace: '#0 0x564d9a5f98f3 <unknown>\n' +
    '#1 0x564d9a0deba8 <unknown>\n' +
    '#2 0x564d9a1149b5 <unknown>\n' +
    '#3 0x564d9a147104 <unknown>\n' +
    '#4 0x564d9a131e9d <unknown>\n' +
    '#5 0x564d9a144dac <unknown>\n' +
    '#6 0x564d9a131d63 <unknown>\n' +
    '#7 0x564d9a108144 <unknown>\n' +
    '#8 0x564d9a109135 <unknown>\n' +
    '#9 0x564d9a628c3e <unknown>\n' +
    '#10 0x564d9a63e6b7 <unknown>\n' +
    '#11 0x564d9a629b95 <unknown>\n' +
    '#12 0x564d9a63fb05 <unknown>\n' +
    '#13 0x564d9a61e2ab <unknown>\n' +
    '#14 0x564d9a65a248 <unknown>\n' +
    '#15 0x564d9a65a3c8 <unknown>\n' +
    '#16 0x564d9a67533d <unknown>\n' +
    '#17 0x7fefb7284609 start_thread\n'
}
2021-10-30T13:05:34.449Z INFO webdriver: COMMAND findElement("xpath", "//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a")
2021-10-30T13:05:34.449Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element
2021-10-30T13:05:34.449Z INFO webdriver: DATA {
  using: 'xpath',
  value: '//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a'
}
2021-10-30T13:05:34.476Z INFO webdriver: RESULT {
  error: 'no such element',
  message: 'no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a"}\n' +
    '  (Session info: chrome=94.0.4606.81)',
  stacktrace: '#0 0x564d9a5f98f3 <unknown>\n' +
    '#1 0x564d9a0deba8 <unknown>\n' +
    '#2 0x564d9a1149b5 <unknown>\n' +
    '#3 0x564d9a147104 <unknown>\n' +
    '#4 0x564d9a131e9d <unknown>\n' +
    '#5 0x564d9a144dac <unknown>\n' +
    '#6 0x564d9a131d63 <unknown>\n' +
    '#7 0x564d9a108144 <unknown>\n' +
    '#8 0x564d9a109135 <unknown>\n' +
    '#9 0x564d9a628c3e <unknown>\n' +
    '#10 0x564d9a63e6b7 <unknown>\n' +
    '#11 0x564d9a629b95 <unknown>\n' +
    '#12 0x564d9a63fb05 <unknown>\n' +
    '#13 0x564d9a61e2ab <unknown>\n' +
    '#14 0x564d9a65a248 <unknown>\n' +
    '#15 0x564d9a65a3c8 <unknown>\n' +
    '#16 0x564d9a67533d <unknown>\n' +
    '#17 0x7fefb7284609 start_thread\n'
}
2021-10-30T13:05:34.948Z INFO webdriver: COMMAND findElement("xpath", "//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a")
2021-10-30T13:05:34.948Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element
2021-10-30T13:05:34.948Z INFO webdriver: DATA {
  using: 'xpath',
  value: '//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a'
}
2021-10-30T13:05:34.982Z INFO webdriver: RESULT {
  error: 'no such element',
  message: 'no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a"}\n' +
    '  (Session info: chrome=94.0.4606.81)',
  stacktrace: '#0 0x564d9a5f98f3 <unknown>\n' +
    '#1 0x564d9a0deba8 <unknown>\n' +
    '#2 0x564d9a1149b5 <unknown>\n' +
    '#3 0x564d9a147104 <unknown>\n' +
    '#4 0x564d9a131e9d <unknown>\n' +
    '#5 0x564d9a144dac <unknown>\n' +
    '#6 0x564d9a131d63 <unknown>\n' +
    '#7 0x564d9a108144 <unknown>\n' +
    '#8 0x564d9a109135 <unknown>\n' +
    '#9 0x564d9a628c3e <unknown>\n' +
    '#10 0x564d9a63e6b7 <unknown>\n' +
    '#11 0x564d9a629b95 <unknown>\n' +
    '#12 0x564d9a63fb05 <unknown>\n' +
    '#13 0x564d9a61e2ab <unknown>\n' +
    '#14 0x564d9a65a248 <unknown>\n' +
    '#15 0x564d9a65a3c8 <unknown>\n' +
    '#16 0x564d9a67533d <unknown>\n' +
    '#17 0x7fefb7284609 start_thread\n'
}
2021-10-30T13:05:35.448Z INFO webdriver: COMMAND findElement("xpath", "//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a")
2021-10-30T13:05:35.449Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element
2021-10-30T13:05:35.449Z INFO webdriver: DATA {
  using: 'xpath',
  value: '//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a'
}
2021-10-30T13:05:35.477Z INFO webdriver: RESULT {
  error: 'no such element',
  message: 'no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a"}\n' +
    '  (Session info: chrome=94.0.4606.81)',
  stacktrace: '#0 0x564d9a5f98f3 <unknown>\n' +
    '#1 0x564d9a0deba8 <unknown>\n' +
    '#2 0x564d9a1149b5 <unknown>\n' +
    '#3 0x564d9a147104 <unknown>\n' +
    '#4 0x564d9a131e9d <unknown>\n' +
    '#5 0x564d9a144dac <unknown>\n' +
    '#6 0x564d9a131d63 <unknown>\n' +
    '#7 0x564d9a108144 <unknown>\n' +
    '#8 0x564d9a109135 <unknown>\n' +
    '#9 0x564d9a628c3e <unknown>\n' +
    '#10 0x564d9a63e6b7 <unknown>\n' +
    '#11 0x564d9a629b95 <unknown>\n' +
    '#12 0x564d9a63fb05 <unknown>\n' +
    '#13 0x564d9a61e2ab <unknown>\n' +
    '#14 0x564d9a65a248 <unknown>\n' +
    '#15 0x564d9a65a3c8 <unknown>\n' +
    '#16 0x564d9a67533d <unknown>\n' +
    '#17 0x7fefb7284609 start_thread\n'
}
2021-10-30T13:05:35.949Z INFO webdriver: COMMAND findElement("xpath", "//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a")
2021-10-30T13:05:35.949Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element
2021-10-30T13:05:35.949Z INFO webdriver: DATA {
  using: 'xpath',
  value: '//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a'
}
2021-10-30T13:05:35.979Z INFO webdriver: RESULT {
  error: 'no such element',
  message: 'no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a"}\n' +
    '  (Session info: chrome=94.0.4606.81)',
  stacktrace: '#0 0x564d9a5f98f3 <unknown>\n' +
    '#1 0x564d9a0deba8 <unknown>\n' +
    '#2 0x564d9a1149b5 <unknown>\n' +
    '#3 0x564d9a147104 <unknown>\n' +
    '#4 0x564d9a131e9d <unknown>\n' +
    '#5 0x564d9a144dac <unknown>\n' +
    '#6 0x564d9a131d63 <unknown>\n' +
    '#7 0x564d9a108144 <unknown>\n' +
    '#8 0x564d9a109135 <unknown>\n' +
    '#9 0x564d9a628c3e <unknown>\n' +
    '#10 0x564d9a63e6b7 <unknown>\n' +
    '#11 0x564d9a629b95 <unknown>\n' +
    '#12 0x564d9a63fb05 <unknown>\n' +
    '#13 0x564d9a61e2ab <unknown>\n' +
    '#14 0x564d9a65a248 <unknown>\n' +
    '#15 0x564d9a65a3c8 <unknown>\n' +
    '#16 0x564d9a67533d <unknown>\n' +
    '#17 0x7fefb7284609 start_thread\n'
}
2021-10-30T13:05:36.448Z INFO webdriver: COMMAND findElement("xpath", "//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a")
2021-10-30T13:05:36.448Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element
2021-10-30T13:05:36.448Z INFO webdriver: DATA {
  using: 'xpath',
  value: '//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a'
}
2021-10-30T13:05:36.474Z INFO webdriver: RESULT {
  error: 'no such element',
  message: 'no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="ImageWithText-3"]/section/div[1]/div[2]/div/div/div/div[3]/div/div/a"}\n' +
    '  (Session info: chrome=94.0.4606.81)',
  stacktrace: '#0 0x564d9a5f98f3 <unknown>\n' +
    '#1 0x564d9a0deba8 <unknown>\n' +
    '#2 0x564d9a1149b5 <unknown>\n' +
    '#3 0x564d9a147104 <unknown>\n' +
    '#4 0x564d9a131e9d <unknown>\n' +
    '#5 0x564d9a144dac <unknown>\n' +
    '#6 0x564d9a131d63 <unknown>\n' +
    '#7 0x564d9a108144 <unknown>\n' +
    '#8 0x564d9a109135 <unknown>\n' +
    '#9 0x564d9a628c3e <unknown>\n' +
    '#10 0x564d9a63e6b7 <unknown>\n' +
    '#11 0x564d9a629b95 <unknown>\n' +
    '#12 0x564d9a63fb05 <unknown>\n' +
    '#13 0x564d9a61e2ab <unknown>\n' +
    '#14 0x564d9a65a248 <unknown>\n' +
    '#15 0x564d9a65a3c8 <unknown>\n' +
    '#16 0x564d9a67533d <unknown>\n' +
    '#17 0x7fefb7284609 start_thread\n'
}
2021-10-30T13:05:40.678Z INFO webdriver: COMMAND findElement("xpath", "//*[@id="Video-1"]/section/div/button/div/video")
2021-10-30T13:05:40.679Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/element
2021-10-30T13:05:40.679Z INFO webdriver: DATA {
  using: 'xpath',
  value: '//*[@id="Video-1"]/section/div/button/div/video'
}
2021-10-30T13:05:40.714Z INFO webdriver: RESULT {
  error: 'no such element',
  message: 'no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="Video-1"]/section/div/button/div/video"}\n' +
    '  (Session info: chrome=94.0.4606.81)',
  stacktrace: '#0 0x564d9a5f98f3 <unknown>\n' +
    '#1 0x564d9a0deba8 <unknown>\n' +
    '#2 0x564d9a1149b5 <unknown>\n' +
    '#3 0x564d9a147104 <unknown>\n' +
    '#4 0x564d9a131e9d <unknown>\n' +
    '#5 0x564d9a144dac <unknown>\n' +
    '#6 0x564d9a131d63 <unknown>\n' +
    '#7 0x564d9a108144 <unknown>\n' +
    '#8 0x564d9a109135 <unknown>\n' +
    '#9 0x564d9a628c3e <unknown>\n' +
    '#10 0x564d9a63e6b7 <unknown>\n' +
    '#11 0x564d9a629b95 <unknown>\n' +
    '#12 0x564d9a63fb05 <unknown>\n' +
    '#13 0x564d9a61e2ab <unknown>\n' +
    '#14 0x564d9a65a248 <unknown>\n' +
    '#15 0x564d9a65a3c8 <unknown>\n' +
    '#16 0x564d9a67533d <unknown>\n' +
    '#17 0x7fefb7284609 start_thread\n'
}
2021-10-30T13:05:40.761Z INFO webdriver: COMMAND getLogTypes()
2021-10-30T13:05:40.762Z INFO webdriver: [GET] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/se/log/types
2021-10-30T13:05:40.773Z INFO webdriver: RESULT [ 'browser', 'driver' ]
2021-10-30T13:05:40.774Z INFO webdriver: COMMAND getLogs("driver")
2021-10-30T13:05:40.774Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/se/log
2021-10-30T13:05:40.774Z INFO webdriver: DATA { type: 'driver' }
2021-10-30T13:05:40.775Z INFO webdriver: COMMAND getLogs("browser")
2021-10-30T13:05:40.775Z INFO webdriver: [POST] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71/se/log
2021-10-30T13:05:40.775Z INFO webdriver: DATA { type: 'browser' }
2021-10-30T13:05:40.788Z INFO webdriver: RESULT [
  {
    level: 'WARNING',
    message: "https://code.jquery.com/jquery-3.3.1.min.js 1 Synchronous XMLHttpRequest on the main thread is deprecated because of its detrimental effects to the end user's experience. For more help, check https://xhr.spec.whatwg.org/.",
    source: 'deprecation',
    timestamp: 1635599125396
  }
]
2021-10-30T13:05:40.790Z INFO webdriver: RESULT []
2021-10-30T13:05:40.791Z INFO webdriver: COMMAND deleteSession()
2021-10-30T13:05:40.792Z INFO webdriver: [DELETE] http://localhost:4444/session/b57da7fe15005ab424191a76b73eef71
