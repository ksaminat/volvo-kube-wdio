2021-10-31T05:12:04.468Z INFO @wdio/local-runner: Run worker command: run
2021-10-31T05:12:05.728Z INFO webdriver: Initiate new session using the WebDriver protocol
2021-10-31T05:12:05.804Z INFO webdriver: [POST] http://localhost:4444/session
2021-10-31T05:12:05.804Z INFO webdriver: DATA {
  capabilities: {
    alwaysMatch: { browserName: 'chrome', acceptInsecureCerts: true },
    firstMatch: [ {} ]
  },
  desiredCapabilities: { browserName: 'chrome', acceptInsecureCerts: true }
}
2021-10-31T05:12:10.501Z INFO wdio-image-comparison-service: Adding commands to global browser
2021-10-31T05:12:10.509Z INFO webdriver: COMMAND navigateTo("https://www.volvocars.com/intl/v/cars/other-powertrains")
2021-10-31T05:12:10.510Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/url
2021-10-31T05:12:10.510Z INFO webdriver: DATA { url: 'https://www.volvocars.com/intl/v/cars/other-powertrains' }
2021-10-31T05:12:12.242Z INFO webdriver: COMMAND maximizeWindow()
2021-10-31T05:12:12.242Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/window/maximize
2021-10-31T05:12:12.448Z INFO webdriver: RESULT { height: 998, width: 1360, x: 0, y: 0 }
2021-10-31T05:12:15.455Z INFO webdriver: COMMAND findElement("xpath", "/html/body/div[1]/div[2]/div[4]/div[2]/div/button")
2021-10-31T05:12:15.456Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/element
2021-10-31T05:12:15.456Z INFO webdriver: DATA {
  using: 'xpath',
  value: '/html/body/div[1]/div[2]/div[4]/div[2]/div/button'
}
2021-10-31T05:12:15.501Z INFO webdriver: RESULT {
  'element-6066-11e4-a52e-4f735466cecf': 'e4d61072-1834-472a-94d0-bb302becceba'
}
2021-10-31T05:12:15.507Z INFO webdriver: COMMAND elementClick("e4d61072-1834-472a-94d0-bb302becceba")
2021-10-31T05:12:15.508Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/element/e4d61072-1834-472a-94d0-bb302becceba/click
2021-10-31T05:12:15.722Z INFO webdriver: COMMAND navigateTo("https://www.volvocars.com/intl/v/cars/other-powertrains")
2021-10-31T05:12:15.722Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/url
2021-10-31T05:12:15.722Z INFO webdriver: DATA { url: 'https://www.volvocars.com/intl/v/cars/other-powertrains' }
2021-10-31T05:12:17.347Z INFO webdriver: COMMAND saveScreen("mildscreen", <object>)
2021-10-31T05:12:17.349Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:17.349Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:17.349Z INFO webdriver: DATA {
  script: 'return (function hideScrollBars(hide) {\n' +
    '    try {\n' +
    '        if (hide) {\n' +
    "            document.body.style.overflow = 'hidden';\n" +
    '        }\n' +
    '        else {\n' +
    "            document.body.style.overflow = '';\n" +
    '        }\n' +
    '    }\n' +
    '    catch (e) {\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: [ true ]
}
2021-10-31T05:12:17.582Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:17.583Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:17.583Z INFO webdriver: DATA {
  script: 'return (function getScreenDimensions() {\n' +
    '    var body = document.body;\n' +
    '    var html = document.documentElement;\n' +
    '    var bodyDimensions = {\n' +
    '        scrollHeight: body == null ? 0 : body.scrollHeight,\n' +
    '        offsetHeight: body == null ? 0 : body.offsetHeight\n' +
    '    };\n' +
    '    var htmlDimensions = {\n' +
    '        clientHeight: html == null ? 0 : html.clientHeight,\n' +
    '        clientWidth: html == null ? 0 : html.clientWidth,\n' +
    '        scrollHeight: html == null ? 0 : html.scrollHeight,\n' +
    '        scrollWidth: html == null ? 0 : html.scrollWidth,\n' +
    '        offsetHeight: html == null ? 0 : html.offsetHeight\n' +
    '    };\n' +
    '    var windowDimensions = {\n' +
    '        innerWidth: window.innerWidth,\n' +
    '        innerHeight: window.innerHeight,\n' +
    '        outerHeight: window.outerHeight === 0 ? htmlDimensions.clientHeight : window.outerHeight,\n' +
    '        outerWidth: window.outerWidth === 0 ? htmlDimensions.clientWidth : window.outerWidth,\n' +
    '        devicePixelRatio: window.devicePixelRatio,\n' +
    '        screenWidth: window.screen.width,\n' +
    '        screenHeight: window.screen.height,\n' +
    '    };\n' +
    '    return {\n' +
    '        dimensions: {\n' +
    '            body: bodyDimensions,\n' +
    '            html: htmlDimensions,\n' +
    '            window: windowDimensions\n' +
    '        }\n' +
    '    };\n' +
    '}).apply(null, arguments)',
  args: []
}
2021-10-31T05:12:17.628Z INFO webdriver: RESULT {
  dimensions: {
    body: { offsetHeight: 4380, scrollHeight: 4380 },
    html: {
      clientHeight: 880,
      clientWidth: 1360,
      offsetHeight: 4380,
      scrollHeight: 4380,
      scrollWidth: 1360
    },
    window: {
      devicePixelRatio: 1,
      innerHeight: 880,
      innerWidth: 1360,
      outerHeight: 998,
      outerWidth: 1360,
      screenHeight: 1020,
      screenWidth: 1360
    }
  }
}
2021-10-31T05:12:17.629Z INFO webdriver: COMMAND takeScreenshot()
2021-10-31T05:12:17.629Z INFO webdriver: [GET] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/screenshot
2021-10-31T05:12:18.170Z INFO webdriver: RESULT iVBORw0KGgoAAAANSUhEUgAABVAAAANwCAYAAADJAkFEAAAAAXNSR0IArs4c6...
2021-10-31T05:12:18.685Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:18.685Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:18.685Z INFO webdriver: DATA {
  script: 'return (function hideScrollBars(hide) {\n' +
    '    try {\n' +
    '        if (hide) {\n' +
    "            document.body.style.overflow = 'hidden';\n" +
    '        }\n' +
    '        else {\n' +
    "            document.body.style.overflow = '';\n" +
    '        }\n' +
    '    }\n' +
    '    catch (e) {\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: [ false ]
}
2021-10-31T05:12:18.721Z INFO webdriver: RESULT {
  fileName: 'mildscreen--1360x998.png',
  path: '/Users/ksaminat/testing/git_volvo/volvo-kube-wdio/.tmp/actual/desktop_chrome',
  devicePixelRatio: 1
}
2021-10-31T05:12:18.722Z INFO webdriver: COMMAND navigateTo("https://www.volvocars.com/intl/v/cars/other-powertrains")
2021-10-31T05:12:18.722Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/url
2021-10-31T05:12:18.722Z INFO webdriver: DATA { url: 'https://www.volvocars.com/intl/v/cars/other-powertrains' }
2021-10-31T05:12:20.956Z INFO webdriver: COMMAND checkScreen("mildscreen", <object>)
2021-10-31T05:12:20.958Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:20.958Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:20.958Z INFO webdriver: DATA {
  script: 'return (function hideScrollBars(hide) {\n' +
    '    try {\n' +
    '        if (hide) {\n' +
    "            document.body.style.overflow = 'hidden';\n" +
    '        }\n' +
    '        else {\n' +
    "            document.body.style.overflow = '';\n" +
    '        }\n' +
    '    }\n' +
    '    catch (e) {\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: [ true ]
}
2021-10-31T05:12:21.010Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:21.010Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:21.010Z INFO webdriver: DATA {
  script: 'return (function getScreenDimensions() {\n' +
    '    var body = document.body;\n' +
    '    var html = document.documentElement;\n' +
    '    var bodyDimensions = {\n' +
    '        scrollHeight: body == null ? 0 : body.scrollHeight,\n' +
    '        offsetHeight: body == null ? 0 : body.offsetHeight\n' +
    '    };\n' +
    '    var htmlDimensions = {\n' +
    '        clientHeight: html == null ? 0 : html.clientHeight,\n' +
    '        clientWidth: html == null ? 0 : html.clientWidth,\n' +
    '        scrollHeight: html == null ? 0 : html.scrollHeight,\n' +
    '        scrollWidth: html == null ? 0 : html.scrollWidth,\n' +
    '        offsetHeight: html == null ? 0 : html.offsetHeight\n' +
    '    };\n' +
    '    var windowDimensions = {\n' +
    '        innerWidth: window.innerWidth,\n' +
    '        innerHeight: window.innerHeight,\n' +
    '        outerHeight: window.outerHeight === 0 ? htmlDimensions.clientHeight : window.outerHeight,\n' +
    '        outerWidth: window.outerWidth === 0 ? htmlDimensions.clientWidth : window.outerWidth,\n' +
    '        devicePixelRatio: window.devicePixelRatio,\n' +
    '        screenWidth: window.screen.width,\n' +
    '        screenHeight: window.screen.height,\n' +
    '    };\n' +
    '    return {\n' +
    '        dimensions: {\n' +
    '            body: bodyDimensions,\n' +
    '            html: htmlDimensions,\n' +
    '            window: windowDimensions\n' +
    '        }\n' +
    '    };\n' +
    '}).apply(null, arguments)',
  args: []
}
2021-10-31T05:12:21.043Z INFO webdriver: RESULT {
  dimensions: {
    body: { offsetHeight: 4380, scrollHeight: 4380 },
    html: {
      clientHeight: 880,
      clientWidth: 1360,
      offsetHeight: 4380,
      scrollHeight: 4380,
      scrollWidth: 1360
    },
    window: {
      devicePixelRatio: 1,
      innerHeight: 880,
      innerWidth: 1360,
      outerHeight: 998,
      outerWidth: 1360,
      screenHeight: 1020,
      screenWidth: 1360
    }
  }
}
2021-10-31T05:12:21.044Z INFO webdriver: COMMAND takeScreenshot()
2021-10-31T05:12:21.044Z INFO webdriver: [GET] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/screenshot
2021-10-31T05:12:21.525Z INFO webdriver: RESULT iVBORw0KGgoAAAANSUhEUgAABVAAAANwCAYAAADJAkFEAAAAAXNSR0IArs4c6...
2021-10-31T05:12:21.888Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:21.888Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:21.889Z INFO webdriver: DATA {
  script: 'return (function hideScrollBars(hide) {\n' +
    '    try {\n' +
    '        if (hide) {\n' +
    "            document.body.style.overflow = 'hidden';\n" +
    '        }\n' +
    '        else {\n' +
    "            document.body.style.overflow = '';\n" +
    '        }\n' +
    '    }\n' +
    '    catch (e) {\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: [ false ]
}
2021-10-31T05:12:22.065Z INFO webdriver: RESULT 0
2021-10-31T05:12:22.072Z INFO webdriver: COMMAND navigateTo("https://www.volvocars.com/intl/v/cars/other-powertrains")
2021-10-31T05:12:22.072Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/url
2021-10-31T05:12:22.072Z INFO webdriver: DATA { url: 'https://www.volvocars.com/intl/v/cars/other-powertrains' }
2021-10-31T05:12:23.520Z INFO webdriver: COMMAND saveFullPageScreen("mildsfullpage", <object>)
2021-10-31T05:12:23.522Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:23.522Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:23.522Z INFO webdriver: DATA {
  script: 'return (function hideScrollBars(hide) {\n' +
    '    try {\n' +
    '        if (hide) {\n' +
    "            document.body.style.overflow = 'hidden';\n" +
    '        }\n' +
    '        else {\n' +
    "            document.body.style.overflow = '';\n" +
    '        }\n' +
    '    }\n' +
    '    catch (e) {\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: [ true ]
}
2021-10-31T05:12:23.570Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:23.570Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:23.570Z INFO webdriver: DATA {
  script: 'return (function getScreenDimensions() {\n' +
    '    var body = document.body;\n' +
    '    var html = document.documentElement;\n' +
    '    var bodyDimensions = {\n' +
    '        scrollHeight: body == null ? 0 : body.scrollHeight,\n' +
    '        offsetHeight: body == null ? 0 : body.offsetHeight\n' +
    '    };\n' +
    '    var htmlDimensions = {\n' +
    '        clientHeight: html == null ? 0 : html.clientHeight,\n' +
    '        clientWidth: html == null ? 0 : html.clientWidth,\n' +
    '        scrollHeight: html == null ? 0 : html.scrollHeight,\n' +
    '        scrollWidth: html == null ? 0 : html.scrollWidth,\n' +
    '        offsetHeight: html == null ? 0 : html.offsetHeight\n' +
    '    };\n' +
    '    var windowDimensions = {\n' +
    '        innerWidth: window.innerWidth,\n' +
    '        innerHeight: window.innerHeight,\n' +
    '        outerHeight: window.outerHeight === 0 ? htmlDimensions.clientHeight : window.outerHeight,\n' +
    '        outerWidth: window.outerWidth === 0 ? htmlDimensions.clientWidth : window.outerWidth,\n' +
    '        devicePixelRatio: window.devicePixelRatio,\n' +
    '        screenWidth: window.screen.width,\n' +
    '        screenHeight: window.screen.height,\n' +
    '    };\n' +
    '    return {\n' +
    '        dimensions: {\n' +
    '            body: bodyDimensions,\n' +
    '            html: htmlDimensions,\n' +
    '            window: windowDimensions\n' +
    '        }\n' +
    '    };\n' +
    '}).apply(null, arguments)',
  args: []
}
2021-10-31T05:12:23.651Z INFO webdriver: RESULT {
  dimensions: {
    body: { offsetHeight: 4380, scrollHeight: 4380 },
    html: {
      clientHeight: 880,
      clientWidth: 1360,
      offsetHeight: 4380,
      scrollHeight: 4380,
      scrollWidth: 1360
    },
    window: {
      devicePixelRatio: 1,
      innerHeight: 880,
      innerWidth: 1360,
      outerHeight: 998,
      outerWidth: 1360,
      screenHeight: 1020,
      screenWidth: 1360
    }
  }
}
2021-10-31T05:12:23.653Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:23.653Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:23.653Z INFO webdriver: DATA {
  script: 'return (function scrollToPosition(yPosition) {\n' +
    '    (document.scrollingElement || document.documentElement).scrollTop = yPosition;\n' +
    '}).apply(null, arguments)',
  args: [ 0 ]
}
2021-10-31T05:12:25.221Z INFO webdriver: COMMAND takeScreenshot()
2021-10-31T05:12:25.221Z INFO webdriver: [GET] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/screenshot
2021-10-31T05:12:25.806Z INFO webdriver: RESULT iVBORw0KGgoAAAANSUhEUgAABVAAAANwCAYAAADJAkFEAAAAAXNSR0IArs4c6...
2021-10-31T05:12:25.816Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:25.816Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:25.816Z INFO webdriver: DATA {
  script: 'return (function getDocumentScrollHeight() {\n' +
    '    var viewPortHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n' +
    '    var scrollHeight = document.documentElement.scrollHeight;\n' +
    '    var bodyScrollHeight = document.body.scrollHeight;\n' +
    '    if ((viewPortHeight === scrollHeight) && (bodyScrollHeight > scrollHeight)) {\n' +
    '        return bodyScrollHeight;\n' +
    '    }\n' +
    '    var pageHeight = 0;\n' +
    "    var largestNodeElement = document.querySelector('body');\n" +
    '    if (bodyScrollHeight === scrollHeight && bodyScrollHeight === viewPortHeight) {\n' +
    '        findHighestNode(document.documentElement.childNodes);\n' +
    '        return pageHeight + largestNodeElement.getBoundingClientRect().top;\n' +
    '    }\n' +
    '    return scrollHeight;\n' +
    '    function findHighestNode(nodesList) {\n' +
    '        for (var i = nodesList.length - 1; i >= 0; i--) {\n' +
    '            var currentNode = nodesList[i];\n' +
    '            if (currentNode.scrollHeight && currentNode.clientHeight) {\n' +
    '                var elHeight = Math.max(currentNode.scrollHeight, currentNode.clientHeight);\n' +
    '                pageHeight = Math.max(elHeight, pageHeight);\n' +
    '                if (elHeight === pageHeight) {\n' +
    '                    largestNodeElement = currentNode;\n' +
    '                }\n' +
    '            }\n' +
    '            if (currentNode.childNodes.length) {\n' +
    '                findHighestNode(currentNode.childNodes);\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: []
}
2021-10-31T05:12:25.858Z INFO webdriver: RESULT 4380
2021-10-31T05:12:25.859Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:25.859Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:25.859Z INFO webdriver: DATA {
  script: 'return (function scrollToPosition(yPosition) {\n' +
    '    (document.scrollingElement || document.documentElement).scrollTop = yPosition;\n' +
    '}).apply(null, arguments)',
  args: [ 880 ]
}
2021-10-31T05:12:27.422Z INFO webdriver: COMMAND takeScreenshot()
2021-10-31T05:12:27.422Z INFO webdriver: [GET] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/screenshot
2021-10-31T05:12:27.606Z INFO webdriver: RESULT iVBORw0KGgoAAAANSUhEUgAABVAAAANwCAYAAADJAkFEAAAAAXNSR0IArs4c6...
2021-10-31T05:12:27.622Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:27.622Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:27.622Z INFO webdriver: DATA {
  script: 'return (function getDocumentScrollHeight() {\n' +
    '    var viewPortHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n' +
    '    var scrollHeight = document.documentElement.scrollHeight;\n' +
    '    var bodyScrollHeight = document.body.scrollHeight;\n' +
    '    if ((viewPortHeight === scrollHeight) && (bodyScrollHeight > scrollHeight)) {\n' +
    '        return bodyScrollHeight;\n' +
    '    }\n' +
    '    var pageHeight = 0;\n' +
    "    var largestNodeElement = document.querySelector('body');\n" +
    '    if (bodyScrollHeight === scrollHeight && bodyScrollHeight === viewPortHeight) {\n' +
    '        findHighestNode(document.documentElement.childNodes);\n' +
    '        return pageHeight + largestNodeElement.getBoundingClientRect().top;\n' +
    '    }\n' +
    '    return scrollHeight;\n' +
    '    function findHighestNode(nodesList) {\n' +
    '        for (var i = nodesList.length - 1; i >= 0; i--) {\n' +
    '            var currentNode = nodesList[i];\n' +
    '            if (currentNode.scrollHeight && currentNode.clientHeight) {\n' +
    '                var elHeight = Math.max(currentNode.scrollHeight, currentNode.clientHeight);\n' +
    '                pageHeight = Math.max(elHeight, pageHeight);\n' +
    '                if (elHeight === pageHeight) {\n' +
    '                    largestNodeElement = currentNode;\n' +
    '                }\n' +
    '            }\n' +
    '            if (currentNode.childNodes.length) {\n' +
    '                findHighestNode(currentNode.childNodes);\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: []
}
2021-10-31T05:12:27.671Z INFO webdriver: RESULT 4476
2021-10-31T05:12:27.672Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:27.673Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:27.673Z INFO webdriver: DATA {
  script: 'return (function scrollToPosition(yPosition) {\n' +
    '    (document.scrollingElement || document.documentElement).scrollTop = yPosition;\n' +
    '}).apply(null, arguments)',
  args: [ 1760 ]
}
2021-10-31T05:12:29.247Z INFO webdriver: COMMAND takeScreenshot()
2021-10-31T05:12:29.247Z INFO webdriver: [GET] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/screenshot
2021-10-31T05:12:29.412Z INFO webdriver: RESULT iVBORw0KGgoAAAANSUhEUgAABVAAAANwCAYAAADJAkFEAAAAAXNSR0IArs4c6...
2021-10-31T05:12:29.414Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:29.414Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:29.414Z INFO webdriver: DATA {
  script: 'return (function getDocumentScrollHeight() {\n' +
    '    var viewPortHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n' +
    '    var scrollHeight = document.documentElement.scrollHeight;\n' +
    '    var bodyScrollHeight = document.body.scrollHeight;\n' +
    '    if ((viewPortHeight === scrollHeight) && (bodyScrollHeight > scrollHeight)) {\n' +
    '        return bodyScrollHeight;\n' +
    '    }\n' +
    '    var pageHeight = 0;\n' +
    "    var largestNodeElement = document.querySelector('body');\n" +
    '    if (bodyScrollHeight === scrollHeight && bodyScrollHeight === viewPortHeight) {\n' +
    '        findHighestNode(document.documentElement.childNodes);\n' +
    '        return pageHeight + largestNodeElement.getBoundingClientRect().top;\n' +
    '    }\n' +
    '    return scrollHeight;\n' +
    '    function findHighestNode(nodesList) {\n' +
    '        for (var i = nodesList.length - 1; i >= 0; i--) {\n' +
    '            var currentNode = nodesList[i];\n' +
    '            if (currentNode.scrollHeight && currentNode.clientHeight) {\n' +
    '                var elHeight = Math.max(currentNode.scrollHeight, currentNode.clientHeight);\n' +
    '                pageHeight = Math.max(elHeight, pageHeight);\n' +
    '                if (elHeight === pageHeight) {\n' +
    '                    largestNodeElement = currentNode;\n' +
    '                }\n' +
    '            }\n' +
    '            if (currentNode.childNodes.length) {\n' +
    '                findHighestNode(currentNode.childNodes);\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: []
}
2021-10-31T05:12:29.461Z INFO webdriver: RESULT 4476
2021-10-31T05:12:29.462Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:29.462Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:29.462Z INFO webdriver: DATA {
  script: 'return (function scrollToPosition(yPosition) {\n' +
    '    (document.scrollingElement || document.documentElement).scrollTop = yPosition;\n' +
    '}).apply(null, arguments)',
  args: [ 2640 ]
}
2021-10-31T05:12:31.007Z INFO webdriver: COMMAND takeScreenshot()
2021-10-31T05:12:31.007Z INFO webdriver: [GET] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/screenshot
2021-10-31T05:12:31.214Z INFO webdriver: RESULT iVBORw0KGgoAAAANSUhEUgAABVAAAANwCAYAAADJAkFEAAAAAXNSR0IArs4c6...
2021-10-31T05:12:31.225Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:31.225Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:31.225Z INFO webdriver: DATA {
  script: 'return (function getDocumentScrollHeight() {\n' +
    '    var viewPortHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n' +
    '    var scrollHeight = document.documentElement.scrollHeight;\n' +
    '    var bodyScrollHeight = document.body.scrollHeight;\n' +
    '    if ((viewPortHeight === scrollHeight) && (bodyScrollHeight > scrollHeight)) {\n' +
    '        return bodyScrollHeight;\n' +
    '    }\n' +
    '    var pageHeight = 0;\n' +
    "    var largestNodeElement = document.querySelector('body');\n" +
    '    if (bodyScrollHeight === scrollHeight && bodyScrollHeight === viewPortHeight) {\n' +
    '        findHighestNode(document.documentElement.childNodes);\n' +
    '        return pageHeight + largestNodeElement.getBoundingClientRect().top;\n' +
    '    }\n' +
    '    return scrollHeight;\n' +
    '    function findHighestNode(nodesList) {\n' +
    '        for (var i = nodesList.length - 1; i >= 0; i--) {\n' +
    '            var currentNode = nodesList[i];\n' +
    '            if (currentNode.scrollHeight && currentNode.clientHeight) {\n' +
    '                var elHeight = Math.max(currentNode.scrollHeight, currentNode.clientHeight);\n' +
    '                pageHeight = Math.max(elHeight, pageHeight);\n' +
    '                if (elHeight === pageHeight) {\n' +
    '                    largestNodeElement = currentNode;\n' +
    '                }\n' +
    '            }\n' +
    '            if (currentNode.childNodes.length) {\n' +
    '                findHighestNode(currentNode.childNodes);\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: []
}
2021-10-31T05:12:31.258Z INFO webdriver: RESULT 4476
2021-10-31T05:12:31.259Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:31.259Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:31.259Z INFO webdriver: DATA {
  script: 'return (function scrollToPosition(yPosition) {\n' +
    '    (document.scrollingElement || document.documentElement).scrollTop = yPosition;\n' +
    '}).apply(null, arguments)',
  args: [ 3520 ]
}
2021-10-31T05:12:32.801Z INFO webdriver: COMMAND takeScreenshot()
2021-10-31T05:12:32.801Z INFO webdriver: [GET] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/screenshot
2021-10-31T05:12:32.969Z INFO webdriver: RESULT iVBORw0KGgoAAAANSUhEUgAABVAAAANwCAYAAADJAkFEAAAAAXNSR0IArs4c6...
2021-10-31T05:12:32.983Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:32.983Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:32.984Z INFO webdriver: DATA {
  script: 'return (function getDocumentScrollHeight() {\n' +
    '    var viewPortHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n' +
    '    var scrollHeight = document.documentElement.scrollHeight;\n' +
    '    var bodyScrollHeight = document.body.scrollHeight;\n' +
    '    if ((viewPortHeight === scrollHeight) && (bodyScrollHeight > scrollHeight)) {\n' +
    '        return bodyScrollHeight;\n' +
    '    }\n' +
    '    var pageHeight = 0;\n' +
    "    var largestNodeElement = document.querySelector('body');\n" +
    '    if (bodyScrollHeight === scrollHeight && bodyScrollHeight === viewPortHeight) {\n' +
    '        findHighestNode(document.documentElement.childNodes);\n' +
    '        return pageHeight + largestNodeElement.getBoundingClientRect().top;\n' +
    '    }\n' +
    '    return scrollHeight;\n' +
    '    function findHighestNode(nodesList) {\n' +
    '        for (var i = nodesList.length - 1; i >= 0; i--) {\n' +
    '            var currentNode = nodesList[i];\n' +
    '            if (currentNode.scrollHeight && currentNode.clientHeight) {\n' +
    '                var elHeight = Math.max(currentNode.scrollHeight, currentNode.clientHeight);\n' +
    '                pageHeight = Math.max(elHeight, pageHeight);\n' +
    '                if (elHeight === pageHeight) {\n' +
    '                    largestNodeElement = currentNode;\n' +
    '                }\n' +
    '            }\n' +
    '            if (currentNode.childNodes.length) {\n' +
    '                findHighestNode(currentNode.childNodes);\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: []
}
2021-10-31T05:12:33.020Z INFO webdriver: RESULT 4476
2021-10-31T05:12:33.022Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:33.022Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:33.022Z INFO webdriver: DATA {
  script: 'return (function scrollToPosition(yPosition) {\n' +
    '    (document.scrollingElement || document.documentElement).scrollTop = yPosition;\n' +
    '}).apply(null, arguments)',
  args: [ 4400 ]
}
2021-10-31T05:12:34.573Z INFO webdriver: COMMAND takeScreenshot()
2021-10-31T05:12:34.574Z INFO webdriver: [GET] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/screenshot
2021-10-31T05:12:34.768Z INFO webdriver: RESULT iVBORw0KGgoAAAANSUhEUgAABVAAAANwCAYAAADJAkFEAAAAAXNSR0IArs4c6...
2021-10-31T05:12:34.775Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:34.775Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:34.775Z INFO webdriver: DATA {
  script: 'return (function getDocumentScrollHeight() {\n' +
    '    var viewPortHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n' +
    '    var scrollHeight = document.documentElement.scrollHeight;\n' +
    '    var bodyScrollHeight = document.body.scrollHeight;\n' +
    '    if ((viewPortHeight === scrollHeight) && (bodyScrollHeight > scrollHeight)) {\n' +
    '        return bodyScrollHeight;\n' +
    '    }\n' +
    '    var pageHeight = 0;\n' +
    "    var largestNodeElement = document.querySelector('body');\n" +
    '    if (bodyScrollHeight === scrollHeight && bodyScrollHeight === viewPortHeight) {\n' +
    '        findHighestNode(document.documentElement.childNodes);\n' +
    '        return pageHeight + largestNodeElement.getBoundingClientRect().top;\n' +
    '    }\n' +
    '    return scrollHeight;\n' +
    '    function findHighestNode(nodesList) {\n' +
    '        for (var i = nodesList.length - 1; i >= 0; i--) {\n' +
    '            var currentNode = nodesList[i];\n' +
    '            if (currentNode.scrollHeight && currentNode.clientHeight) {\n' +
    '                var elHeight = Math.max(currentNode.scrollHeight, currentNode.clientHeight);\n' +
    '                pageHeight = Math.max(elHeight, pageHeight);\n' +
    '                if (elHeight === pageHeight) {\n' +
    '                    largestNodeElement = currentNode;\n' +
    '                }\n' +
    '            }\n' +
    '            if (currentNode.childNodes.length) {\n' +
    '                findHighestNode(currentNode.childNodes);\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: []
}
2021-10-31T05:12:34.819Z INFO webdriver: RESULT 4476
2021-10-31T05:12:35.638Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:35.638Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:35.638Z INFO webdriver: DATA {
  script: 'return (function hideScrollBars(hide) {\n' +
    '    try {\n' +
    '        if (hide) {\n' +
    "            document.body.style.overflow = 'hidden';\n" +
    '        }\n' +
    '        else {\n' +
    "            document.body.style.overflow = '';\n" +
    '        }\n' +
    '    }\n' +
    '    catch (e) {\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: [ false ]
}
2021-10-31T05:12:35.684Z INFO webdriver: RESULT {
  fileName: 'mildsfullpage--1360x998.png',
  path: '/Users/ksaminat/testing/git_volvo/volvo-kube-wdio/.tmp/actual/desktop_chrome',
  devicePixelRatio: 1
}
2021-10-31T05:12:35.687Z INFO webdriver: COMMAND navigateTo("https://www.volvocars.com/intl/v/cars/other-powertrains")
2021-10-31T05:12:35.687Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/url
2021-10-31T05:12:35.687Z INFO webdriver: DATA { url: 'https://www.volvocars.com/intl/v/cars/other-powertrains' }
2021-10-31T05:12:37.213Z INFO webdriver: COMMAND checkFullPageScreen("mildsfullpage", <object>)
2021-10-31T05:12:37.215Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:37.216Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:37.216Z INFO webdriver: DATA {
  script: 'return (function hideScrollBars(hide) {\n' +
    '    try {\n' +
    '        if (hide) {\n' +
    "            document.body.style.overflow = 'hidden';\n" +
    '        }\n' +
    '        else {\n' +
    "            document.body.style.overflow = '';\n" +
    '        }\n' +
    '    }\n' +
    '    catch (e) {\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: [ true ]
}
2021-10-31T05:12:37.268Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:37.268Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:37.268Z INFO webdriver: DATA {
  script: 'return (function getScreenDimensions() {\n' +
    '    var body = document.body;\n' +
    '    var html = document.documentElement;\n' +
    '    var bodyDimensions = {\n' +
    '        scrollHeight: body == null ? 0 : body.scrollHeight,\n' +
    '        offsetHeight: body == null ? 0 : body.offsetHeight\n' +
    '    };\n' +
    '    var htmlDimensions = {\n' +
    '        clientHeight: html == null ? 0 : html.clientHeight,\n' +
    '        clientWidth: html == null ? 0 : html.clientWidth,\n' +
    '        scrollHeight: html == null ? 0 : html.scrollHeight,\n' +
    '        scrollWidth: html == null ? 0 : html.scrollWidth,\n' +
    '        offsetHeight: html == null ? 0 : html.offsetHeight\n' +
    '    };\n' +
    '    var windowDimensions = {\n' +
    '        innerWidth: window.innerWidth,\n' +
    '        innerHeight: window.innerHeight,\n' +
    '        outerHeight: window.outerHeight === 0 ? htmlDimensions.clientHeight : window.outerHeight,\n' +
    '        outerWidth: window.outerWidth === 0 ? htmlDimensions.clientWidth : window.outerWidth,\n' +
    '        devicePixelRatio: window.devicePixelRatio,\n' +
    '        screenWidth: window.screen.width,\n' +
    '        screenHeight: window.screen.height,\n' +
    '    };\n' +
    '    return {\n' +
    '        dimensions: {\n' +
    '            body: bodyDimensions,\n' +
    '            html: htmlDimensions,\n' +
    '            window: windowDimensions\n' +
    '        }\n' +
    '    };\n' +
    '}).apply(null, arguments)',
  args: []
}
2021-10-31T05:12:37.325Z INFO webdriver: RESULT {
  dimensions: {
    body: { offsetHeight: 4380, scrollHeight: 4380 },
    html: {
      clientHeight: 880,
      clientWidth: 1360,
      offsetHeight: 4380,
      scrollHeight: 4380,
      scrollWidth: 1360
    },
    window: {
      devicePixelRatio: 1,
      innerHeight: 880,
      innerWidth: 1360,
      outerHeight: 998,
      outerWidth: 1360,
      screenHeight: 1020,
      screenWidth: 1360
    }
  }
}
2021-10-31T05:12:37.326Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:37.326Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:37.326Z INFO webdriver: DATA {
  script: 'return (function scrollToPosition(yPosition) {\n' +
    '    (document.scrollingElement || document.documentElement).scrollTop = yPosition;\n' +
    '}).apply(null, arguments)',
  args: [ 0 ]
}
2021-10-31T05:12:38.878Z INFO webdriver: COMMAND takeScreenshot()
2021-10-31T05:12:38.879Z INFO webdriver: [GET] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/screenshot
2021-10-31T05:12:39.410Z INFO webdriver: RESULT iVBORw0KGgoAAAANSUhEUgAABVAAAANwCAYAAADJAkFEAAAAAXNSR0IArs4c6...
2021-10-31T05:12:39.419Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:39.419Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:39.419Z INFO webdriver: DATA {
  script: 'return (function getDocumentScrollHeight() {\n' +
    '    var viewPortHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n' +
    '    var scrollHeight = document.documentElement.scrollHeight;\n' +
    '    var bodyScrollHeight = document.body.scrollHeight;\n' +
    '    if ((viewPortHeight === scrollHeight) && (bodyScrollHeight > scrollHeight)) {\n' +
    '        return bodyScrollHeight;\n' +
    '    }\n' +
    '    var pageHeight = 0;\n' +
    "    var largestNodeElement = document.querySelector('body');\n" +
    '    if (bodyScrollHeight === scrollHeight && bodyScrollHeight === viewPortHeight) {\n' +
    '        findHighestNode(document.documentElement.childNodes);\n' +
    '        return pageHeight + largestNodeElement.getBoundingClientRect().top;\n' +
    '    }\n' +
    '    return scrollHeight;\n' +
    '    function findHighestNode(nodesList) {\n' +
    '        for (var i = nodesList.length - 1; i >= 0; i--) {\n' +
    '            var currentNode = nodesList[i];\n' +
    '            if (currentNode.scrollHeight && currentNode.clientHeight) {\n' +
    '                var elHeight = Math.max(currentNode.scrollHeight, currentNode.clientHeight);\n' +
    '                pageHeight = Math.max(elHeight, pageHeight);\n' +
    '                if (elHeight === pageHeight) {\n' +
    '                    largestNodeElement = currentNode;\n' +
    '                }\n' +
    '            }\n' +
    '            if (currentNode.childNodes.length) {\n' +
    '                findHighestNode(currentNode.childNodes);\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: []
}
2021-10-31T05:12:39.458Z INFO webdriver: RESULT 4380
2021-10-31T05:12:39.459Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:39.459Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:39.459Z INFO webdriver: DATA {
  script: 'return (function scrollToPosition(yPosition) {\n' +
    '    (document.scrollingElement || document.documentElement).scrollTop = yPosition;\n' +
    '}).apply(null, arguments)',
  args: [ 880 ]
}
2021-10-31T05:12:41.215Z INFO webdriver: COMMAND takeScreenshot()
2021-10-31T05:12:41.215Z INFO webdriver: [GET] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/screenshot
2021-10-31T05:12:41.374Z INFO webdriver: RESULT iVBORw0KGgoAAAANSUhEUgAABVAAAANwCAYAAADJAkFEAAAAAXNSR0IArs4c6...
2021-10-31T05:12:41.376Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:41.376Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:41.376Z INFO webdriver: DATA {
  script: 'return (function getDocumentScrollHeight() {\n' +
    '    var viewPortHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n' +
    '    var scrollHeight = document.documentElement.scrollHeight;\n' +
    '    var bodyScrollHeight = document.body.scrollHeight;\n' +
    '    if ((viewPortHeight === scrollHeight) && (bodyScrollHeight > scrollHeight)) {\n' +
    '        return bodyScrollHeight;\n' +
    '    }\n' +
    '    var pageHeight = 0;\n' +
    "    var largestNodeElement = document.querySelector('body');\n" +
    '    if (bodyScrollHeight === scrollHeight && bodyScrollHeight === viewPortHeight) {\n' +
    '        findHighestNode(document.documentElement.childNodes);\n' +
    '        return pageHeight + largestNodeElement.getBoundingClientRect().top;\n' +
    '    }\n' +
    '    return scrollHeight;\n' +
    '    function findHighestNode(nodesList) {\n' +
    '        for (var i = nodesList.length - 1; i >= 0; i--) {\n' +
    '            var currentNode = nodesList[i];\n' +
    '            if (currentNode.scrollHeight && currentNode.clientHeight) {\n' +
    '                var elHeight = Math.max(currentNode.scrollHeight, currentNode.clientHeight);\n' +
    '                pageHeight = Math.max(elHeight, pageHeight);\n' +
    '                if (elHeight === pageHeight) {\n' +
    '                    largestNodeElement = currentNode;\n' +
    '                }\n' +
    '            }\n' +
    '            if (currentNode.childNodes.length) {\n' +
    '                findHighestNode(currentNode.childNodes);\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: []
}
2021-10-31T05:12:41.417Z INFO webdriver: RESULT 4476
2021-10-31T05:12:41.418Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:41.418Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:41.418Z INFO webdriver: DATA {
  script: 'return (function scrollToPosition(yPosition) {\n' +
    '    (document.scrollingElement || document.documentElement).scrollTop = yPosition;\n' +
    '}).apply(null, arguments)',
  args: [ 1760 ]
}
2021-10-31T05:12:42.974Z INFO webdriver: COMMAND takeScreenshot()
2021-10-31T05:12:42.974Z INFO webdriver: [GET] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/screenshot
2021-10-31T05:12:43.130Z INFO webdriver: RESULT iVBORw0KGgoAAAANSUhEUgAABVAAAANwCAYAAADJAkFEAAAAAXNSR0IArs4c6...
2021-10-31T05:12:43.136Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:43.137Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:43.137Z INFO webdriver: DATA {
  script: 'return (function getDocumentScrollHeight() {\n' +
    '    var viewPortHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n' +
    '    var scrollHeight = document.documentElement.scrollHeight;\n' +
    '    var bodyScrollHeight = document.body.scrollHeight;\n' +
    '    if ((viewPortHeight === scrollHeight) && (bodyScrollHeight > scrollHeight)) {\n' +
    '        return bodyScrollHeight;\n' +
    '    }\n' +
    '    var pageHeight = 0;\n' +
    "    var largestNodeElement = document.querySelector('body');\n" +
    '    if (bodyScrollHeight === scrollHeight && bodyScrollHeight === viewPortHeight) {\n' +
    '        findHighestNode(document.documentElement.childNodes);\n' +
    '        return pageHeight + largestNodeElement.getBoundingClientRect().top;\n' +
    '    }\n' +
    '    return scrollHeight;\n' +
    '    function findHighestNode(nodesList) {\n' +
    '        for (var i = nodesList.length - 1; i >= 0; i--) {\n' +
    '            var currentNode = nodesList[i];\n' +
    '            if (currentNode.scrollHeight && currentNode.clientHeight) {\n' +
    '                var elHeight = Math.max(currentNode.scrollHeight, currentNode.clientHeight);\n' +
    '                pageHeight = Math.max(elHeight, pageHeight);\n' +
    '                if (elHeight === pageHeight) {\n' +
    '                    largestNodeElement = currentNode;\n' +
    '                }\n' +
    '            }\n' +
    '            if (currentNode.childNodes.length) {\n' +
    '                findHighestNode(currentNode.childNodes);\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: []
}
2021-10-31T05:12:43.182Z INFO webdriver: RESULT 4476
2021-10-31T05:12:43.183Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:43.183Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:43.183Z INFO webdriver: DATA {
  script: 'return (function scrollToPosition(yPosition) {\n' +
    '    (document.scrollingElement || document.documentElement).scrollTop = yPosition;\n' +
    '}).apply(null, arguments)',
  args: [ 2640 ]
}
2021-10-31T05:12:44.744Z INFO webdriver: COMMAND takeScreenshot()
2021-10-31T05:12:44.744Z INFO webdriver: [GET] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/screenshot
2021-10-31T05:12:44.962Z INFO webdriver: RESULT iVBORw0KGgoAAAANSUhEUgAABVAAAANwCAYAAADJAkFEAAAAAXNSR0IArs4c6...
2021-10-31T05:12:44.966Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:44.966Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:44.966Z INFO webdriver: DATA {
  script: 'return (function getDocumentScrollHeight() {\n' +
    '    var viewPortHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n' +
    '    var scrollHeight = document.documentElement.scrollHeight;\n' +
    '    var bodyScrollHeight = document.body.scrollHeight;\n' +
    '    if ((viewPortHeight === scrollHeight) && (bodyScrollHeight > scrollHeight)) {\n' +
    '        return bodyScrollHeight;\n' +
    '    }\n' +
    '    var pageHeight = 0;\n' +
    "    var largestNodeElement = document.querySelector('body');\n" +
    '    if (bodyScrollHeight === scrollHeight && bodyScrollHeight === viewPortHeight) {\n' +
    '        findHighestNode(document.documentElement.childNodes);\n' +
    '        return pageHeight + largestNodeElement.getBoundingClientRect().top;\n' +
    '    }\n' +
    '    return scrollHeight;\n' +
    '    function findHighestNode(nodesList) {\n' +
    '        for (var i = nodesList.length - 1; i >= 0; i--) {\n' +
    '            var currentNode = nodesList[i];\n' +
    '            if (currentNode.scrollHeight && currentNode.clientHeight) {\n' +
    '                var elHeight = Math.max(currentNode.scrollHeight, currentNode.clientHeight);\n' +
    '                pageHeight = Math.max(elHeight, pageHeight);\n' +
    '                if (elHeight === pageHeight) {\n' +
    '                    largestNodeElement = currentNode;\n' +
    '                }\n' +
    '            }\n' +
    '            if (currentNode.childNodes.length) {\n' +
    '                findHighestNode(currentNode.childNodes);\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: []
}
2021-10-31T05:12:45.021Z INFO webdriver: RESULT 4476
2021-10-31T05:12:45.022Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:45.022Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:45.022Z INFO webdriver: DATA {
  script: 'return (function scrollToPosition(yPosition) {\n' +
    '    (document.scrollingElement || document.documentElement).scrollTop = yPosition;\n' +
    '}).apply(null, arguments)',
  args: [ 3520 ]
}
2021-10-31T05:12:46.603Z INFO webdriver: COMMAND takeScreenshot()
2021-10-31T05:12:46.603Z INFO webdriver: [GET] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/screenshot
2021-10-31T05:12:46.819Z INFO webdriver: RESULT iVBORw0KGgoAAAANSUhEUgAABVAAAANwCAYAAADJAkFEAAAAAXNSR0IArs4c6...
2021-10-31T05:12:46.827Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:46.827Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:46.827Z INFO webdriver: DATA {
  script: 'return (function getDocumentScrollHeight() {\n' +
    '    var viewPortHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n' +
    '    var scrollHeight = document.documentElement.scrollHeight;\n' +
    '    var bodyScrollHeight = document.body.scrollHeight;\n' +
    '    if ((viewPortHeight === scrollHeight) && (bodyScrollHeight > scrollHeight)) {\n' +
    '        return bodyScrollHeight;\n' +
    '    }\n' +
    '    var pageHeight = 0;\n' +
    "    var largestNodeElement = document.querySelector('body');\n" +
    '    if (bodyScrollHeight === scrollHeight && bodyScrollHeight === viewPortHeight) {\n' +
    '        findHighestNode(document.documentElement.childNodes);\n' +
    '        return pageHeight + largestNodeElement.getBoundingClientRect().top;\n' +
    '    }\n' +
    '    return scrollHeight;\n' +
    '    function findHighestNode(nodesList) {\n' +
    '        for (var i = nodesList.length - 1; i >= 0; i--) {\n' +
    '            var currentNode = nodesList[i];\n' +
    '            if (currentNode.scrollHeight && currentNode.clientHeight) {\n' +
    '                var elHeight = Math.max(currentNode.scrollHeight, currentNode.clientHeight);\n' +
    '                pageHeight = Math.max(elHeight, pageHeight);\n' +
    '                if (elHeight === pageHeight) {\n' +
    '                    largestNodeElement = currentNode;\n' +
    '                }\n' +
    '            }\n' +
    '            if (currentNode.childNodes.length) {\n' +
    '                findHighestNode(currentNode.childNodes);\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: []
}
2021-10-31T05:12:46.871Z INFO webdriver: RESULT 4476
2021-10-31T05:12:46.871Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:46.872Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:46.872Z INFO webdriver: DATA {
  script: 'return (function scrollToPosition(yPosition) {\n' +
    '    (document.scrollingElement || document.documentElement).scrollTop = yPosition;\n' +
    '}).apply(null, arguments)',
  args: [ 4400 ]
}
2021-10-31T05:12:48.420Z INFO webdriver: COMMAND takeScreenshot()
2021-10-31T05:12:48.420Z INFO webdriver: [GET] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/screenshot
2021-10-31T05:12:48.597Z INFO webdriver: RESULT iVBORw0KGgoAAAANSUhEUgAABVAAAANwCAYAAADJAkFEAAAAAXNSR0IArs4c6...
2021-10-31T05:12:48.605Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:48.605Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:48.605Z INFO webdriver: DATA {
  script: 'return (function getDocumentScrollHeight() {\n' +
    '    var viewPortHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n' +
    '    var scrollHeight = document.documentElement.scrollHeight;\n' +
    '    var bodyScrollHeight = document.body.scrollHeight;\n' +
    '    if ((viewPortHeight === scrollHeight) && (bodyScrollHeight > scrollHeight)) {\n' +
    '        return bodyScrollHeight;\n' +
    '    }\n' +
    '    var pageHeight = 0;\n' +
    "    var largestNodeElement = document.querySelector('body');\n" +
    '    if (bodyScrollHeight === scrollHeight && bodyScrollHeight === viewPortHeight) {\n' +
    '        findHighestNode(document.documentElement.childNodes);\n' +
    '        return pageHeight + largestNodeElement.getBoundingClientRect().top;\n' +
    '    }\n' +
    '    return scrollHeight;\n' +
    '    function findHighestNode(nodesList) {\n' +
    '        for (var i = nodesList.length - 1; i >= 0; i--) {\n' +
    '            var currentNode = nodesList[i];\n' +
    '            if (currentNode.scrollHeight && currentNode.clientHeight) {\n' +
    '                var elHeight = Math.max(currentNode.scrollHeight, currentNode.clientHeight);\n' +
    '                pageHeight = Math.max(elHeight, pageHeight);\n' +
    '                if (elHeight === pageHeight) {\n' +
    '                    largestNodeElement = currentNode;\n' +
    '                }\n' +
    '            }\n' +
    '            if (currentNode.childNodes.length) {\n' +
    '                findHighestNode(currentNode.childNodes);\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: []
}
2021-10-31T05:12:48.636Z INFO webdriver: RESULT 4476
2021-10-31T05:12:49.416Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:49.416Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:49.416Z INFO webdriver: DATA {
  script: 'return (function hideScrollBars(hide) {\n' +
    '    try {\n' +
    '        if (hide) {\n' +
    "            document.body.style.overflow = 'hidden';\n" +
    '        }\n' +
    '        else {\n' +
    "            document.body.style.overflow = '';\n" +
    '        }\n' +
    '    }\n' +
    '    catch (e) {\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: [ false ]
}
2021-10-31T05:12:50.035Z INFO webdriver: RESULT 0
2021-10-31T05:12:50.044Z INFO webdriver: COMMAND navigateTo("https://www.volvocars.com/intl/v/cars/other-powertrains")
2021-10-31T05:12:50.045Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/url
2021-10-31T05:12:50.045Z INFO webdriver: DATA { url: 'https://www.volvocars.com/intl/v/cars/other-powertrains' }
2021-10-31T05:12:51.653Z INFO webdriver: COMMAND saveTabbablePage("mildstabbedpage", <object>)
2021-10-31T05:12:51.656Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:51.656Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:51.656Z INFO webdriver: DATA {
  script: 'return (function drawTabbableOnCanvas(drawOptions) {\n' +
    '    window.scrollTo(0, 0);\n' +
    '    var width = window.innerWidth;\n' +
    '    var height = getDocumentScrollHeight();\n' +
    '    var canvasNode = "<canvas id=\\"wic-tabbable-canvas\\" width=\\"" + width + "\\" height=\\"" + height + "\\" style=\\"position:absolute;top:0;left:0;z-index:999999;\\">";\n' +
    "    document.body.insertAdjacentHTML('afterbegin', canvasNode);\n" +
    '    var accessibleElements = tabbable();\n' +
    '    var elementCoordinates = accessibleElements.map(function (node) {\n' +
    '        var currentElement = node.getBoundingClientRect();\n' +
    '        return {\n' +
    '            x: currentElement.left + (currentElement.width / 2),\n' +
    '            y: currentElement.top + (currentElement.height / 2),\n' +
    '        };\n' +
    '    });\n' +
    '    elementCoordinates.unshift({ x: 0, y: 0 });\n' +
    '    elementCoordinates.forEach(function (elementCoordinate, i) {\n' +
    '        if (i === 0) {\n' +
    '            return;\n' +
    '        }\n' +
    '        drawLine(drawOptions.line, elementCoordinates[i - 1], elementCoordinate);\n' +
    '        drawCircleAndNumber(drawOptions.circle, elementCoordinate, i);\n' +
    '    });\n' +
    '    function drawLine(options, start, end) {\n' +
    "        var tabbableCanvasContext = document.getElementById('wic-tabbable-canvas').getContext('2d');\n" +
    '        tabbableCanvasContext.beginPath();\n' +
    "        tabbableCanvasContext.globalCompositeOperation = 'destination-over';\n" +
    '        tabbableCanvasContext.lineWidth = options.width;\n' +
    '        tabbableCanvasContext.strokeStyle = options.color;\n' +
    '        tabbableCanvasContext.moveTo(start.x, start.y);\n' +
    '        tabbableCanvasContext.lineTo(end.x, end.y);\n' +
    '        tabbableCanvasContext.stroke();\n' +
    '    }\n' +
    '    function drawCircleAndNumber(options, position, i) {\n' +
    "        var tabbableCanvasContext = document.getElementById('wic-tabbable-canvas').getContext('2d');\n" +
    '        tabbableCanvasContext.beginPath();\n' +
    "        tabbableCanvasContext.globalCompositeOperation = 'source-over';\n" +
    '        tabbableCanvasContext.fillStyle = options.backgroundColor;\n' +
    '        tabbableCanvasContext.arc(position.x, position.y, options.size, 0, Math.PI * 2, true);\n' +
    '        tabbableCanvasContext.fill();\n' +
    '        tabbableCanvasContext.lineWidth = options.borderWidth;\n' +
    '        tabbableCanvasContext.strokeStyle = options.borderColor;\n' +
    '        tabbableCanvasContext.stroke();\n' +
    '        if (options.showNumber) {\n' +
    '            tabbableCanvasContext.font = options.fontSize + "px " + options.fontFamily;\n' +
    "            tabbableCanvasContext.textAlign = 'center';\n" +
    "            tabbableCanvasContext.textBaseline = 'middle';\n" +
    '            tabbableCanvasContext.fillStyle = options.fontColor;\n' +
    '            tabbableCanvasContext.fillText(i.toString(), position.x, position.y);\n' +
    '        }\n' +
    '    }\n' +
    '    function tabbable() {\n' +
    '        var regularTabbables = [];\n' +
    '        var orderedTabbables = [];\n' +
    '        var candidateSelectors = [\n' +
    "            'input',\n" +
    "            'select',\n" +
    "            'textarea',\n" +
    "            'a[href]',\n" +
    "            'button',\n" +
    "            '[tabindex]',\n" +
    "            'audio[controls]',\n" +
    "            'video[controls]',\n" +
    `            '[contenteditable]:not([contenteditable="false"])',\n` +
    "        ].join(',');\n" +
    '        var candidates = document.querySelectorAll(candidateSelectors);\n' +
    '        for (var i = 0; i < candidates.length; i++) {\n' +
    '            var candidate = candidates[i];\n' +
    '            if (!isNodeMatchingSelectorTabbable(candidate)) {\n' +
    '                continue;\n' +
    '            }\n' +
    '            var candidateTabindex = getTabindex(candidate);\n' +
    '            if (candidateTabindex === 0) {\n' +
    '                regularTabbables.push(candidate);\n' +
    '            }\n' +
    '            else {\n' +
    '                orderedTabbables.push({\n' +
    '                    documentOrder: i,\n' +
    '                    tabIndex: candidateTabindex,\n' +
    '                    node: candidate,\n' +
    '                });\n' +
    '            }\n' +
    '        }\n' +
    '        return Array.prototype.slice.call(orderedTabbables.sort(sortOrderedTabbables).map(function (a) { return a.node; }).concat(regularTabbables));\n' +
    '    }\n' +
    '    function isNodeMatchingSelectorTabbable(node) {\n' +
    '        return !(!isNodeMatchingSelectorFocusable(node) ||\n' +
    '            isNonTabbableRadio(node) ||\n' +
    '            getTabindex(node) < 0);\n' +
    '    }\n' +
    '    function isNodeMatchingSelectorFocusable(node) {\n' +
    "        return !((node.hasAttribute('disabled') || node.getAttribute('disabled'))\n" +
    '            || isHiddenInput(node)\n' +
    '            || isHidden(node));\n' +
    '    }\n' +
    '    function getTabindex(node) {\n' +
    "        var tabindexAttr = parseInt(node.getAttribute('tabindex'), 10);\n" +
    '        if (!isNaN(tabindexAttr)) {\n' +
    '            return tabindexAttr;\n' +
    '        }\n' +
    '        if (isContentEditable(node)) {\n' +
    '            return 0;\n' +
    '        }\n' +
    '        return node.tabIndex;\n' +
    '    }\n' +
    '    function sortOrderedTabbables(nodeA, nodeB) {\n' +
    '        return nodeA.tabIndex === nodeB.tabIndex\n' +
    '            ? nodeA.documentOrder - nodeB.documentOrder\n' +
    '            : nodeA.tabIndex - nodeB.tabIndex;\n' +
    '    }\n' +
    '    function isContentEditable(node) {\n' +
    "        return node.contentEditable === 'true';\n" +
    '    }\n' +
    '    function isInput(node) {\n' +
    "        return node.tagName === 'INPUT';\n" +
    '    }\n' +
    '    function isHiddenInput(node) {\n' +
    "        return isInput(node) && node.type === 'hidden';\n" +
    '    }\n' +
    '    function isRadio(node) {\n' +
    "        return isInput(node) && node.type === 'radio';\n" +
    '    }\n' +
    '    function isNonTabbableRadio(node) {\n' +
    '        return isRadio(node) && !isTabbableRadio(node);\n' +
    '    }\n' +
    '    function getCheckedRadio(nodes) {\n' +
    '        for (var i = 0; i < nodes.length; i++) {\n' +
    '            if (nodes[i].checked) {\n' +
    '                return nodes[i];\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    '    function isTabbableRadio(node) {\n' +
    '        if (!node.name) {\n' +
    '            return true;\n' +
    '        }\n' +
    '        var radioSet = node.ownerDocument.querySelectorAll("input[type=\\"radio\\"][name=\\"" + node.name + "\\"]");\n' +
    '        var checked = getCheckedRadio(radioSet);\n' +
    '        return !checked || checked === node;\n' +
    '    }\n' +
    '    function isHidden(node) {\n' +
    "        return (node.offsetParent === null || getComputedStyle(node).visibility === 'hidden');\n" +
    '    }\n' +
    '    function getDocumentScrollHeight() {\n' +
    '        var viewPortHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n' +
    '        var scrollHeight = document.documentElement.scrollHeight;\n' +
    '        var bodyScrollHeight = document.body.scrollHeight;\n' +
    '        if ((viewPortHeight === scrollHeight) && (bodyScrollHeight > scrollHeight)) {\n' +
    '            return bodyScrollHeight;\n' +
    '        }\n' +
    '        var pageHeight = 0;\n' +
    "        var largestNodeElement = document.querySelector('body');\n" +
    '        if (bodyScrollHeight === scrollHeight && bodyScrollHeight === viewPortHeight) {\n' +
    '            findHighestNode(document.documentElement.childNodes);\n' +
    '            return pageHeight + largestNodeElement.getBoundingClientRect().top;\n' +
    '        }\n' +
    '        return scrollHeight;\n' +
    '        function findHighestNode(nodesList) {\n' +
    '            for (var i = nodesList.length - 1; i >= 0; i--) {\n' +
    '                var currentNode = nodesList[i];\n' +
    '                if (currentNode.scrollHeight && currentNode.clientHeight) {\n' +
    '                    var elHeight = Math.max(currentNode.scrollHeight, currentNode.clientHeight);\n' +
    '                    pageHeight = Math.max(elHeight, pageHeight);\n' +
    '                    if (elHeight === pageHeight) {\n' +
    '                        largestNodeElement = currentNode;\n' +
    '                    }\n' +
    '                }\n' +
    '                if (currentNode.childNodes.length) {\n' +
    '                    findHighestNode(currentNode.childNodes);\n' +
    '                }\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: [ { circle: [Object], line: [Object] } ]
}
2021-10-31T05:12:51.735Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:51.735Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:51.735Z INFO webdriver: DATA {
  script: 'return (function hideScrollBars(hide) {\n' +
    '    try {\n' +
    '        if (hide) {\n' +
    "            document.body.style.overflow = 'hidden';\n" +
    '        }\n' +
    '        else {\n' +
    "            document.body.style.overflow = '';\n" +
    '        }\n' +
    '    }\n' +
    '    catch (e) {\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: [ true ]
}
2021-10-31T05:12:51.804Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:51.804Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:51.804Z INFO webdriver: DATA {
  script: 'return (function getScreenDimensions() {\n' +
    '    var body = document.body;\n' +
    '    var html = document.documentElement;\n' +
    '    var bodyDimensions = {\n' +
    '        scrollHeight: body == null ? 0 : body.scrollHeight,\n' +
    '        offsetHeight: body == null ? 0 : body.offsetHeight\n' +
    '    };\n' +
    '    var htmlDimensions = {\n' +
    '        clientHeight: html == null ? 0 : html.clientHeight,\n' +
    '        clientWidth: html == null ? 0 : html.clientWidth,\n' +
    '        scrollHeight: html == null ? 0 : html.scrollHeight,\n' +
    '        scrollWidth: html == null ? 0 : html.scrollWidth,\n' +
    '        offsetHeight: html == null ? 0 : html.offsetHeight\n' +
    '    };\n' +
    '    var windowDimensions = {\n' +
    '        innerWidth: window.innerWidth,\n' +
    '        innerHeight: window.innerHeight,\n' +
    '        outerHeight: window.outerHeight === 0 ? htmlDimensions.clientHeight : window.outerHeight,\n' +
    '        outerWidth: window.outerWidth === 0 ? htmlDimensions.clientWidth : window.outerWidth,\n' +
    '        devicePixelRatio: window.devicePixelRatio,\n' +
    '        screenWidth: window.screen.width,\n' +
    '        screenHeight: window.screen.height,\n' +
    '    };\n' +
    '    return {\n' +
    '        dimensions: {\n' +
    '            body: bodyDimensions,\n' +
    '            html: htmlDimensions,\n' +
    '            window: windowDimensions\n' +
    '        }\n' +
    '    };\n' +
    '}).apply(null, arguments)',
  args: []
}
2021-10-31T05:12:51.857Z INFO webdriver: RESULT {
  dimensions: {
    body: { offsetHeight: 4380, scrollHeight: 4380 },
    html: {
      clientHeight: 880,
      clientWidth: 1360,
      offsetHeight: 4380,
      scrollHeight: 4380,
      scrollWidth: 1360
    },
    window: {
      devicePixelRatio: 1,
      innerHeight: 880,
      innerWidth: 1360,
      outerHeight: 998,
      outerWidth: 1360,
      screenHeight: 1020,
      screenWidth: 1360
    }
  }
}
2021-10-31T05:12:51.859Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:51.859Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:51.859Z INFO webdriver: DATA {
  script: 'return (function scrollToPosition(yPosition) {\n' +
    '    (document.scrollingElement || document.documentElement).scrollTop = yPosition;\n' +
    '}).apply(null, arguments)',
  args: [ 0 ]
}
2021-10-31T05:12:53.393Z INFO webdriver: COMMAND takeScreenshot()
2021-10-31T05:12:53.394Z INFO webdriver: [GET] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/screenshot
2021-10-31T05:12:54.018Z INFO webdriver: RESULT iVBORw0KGgoAAAANSUhEUgAABVAAAANwCAYAAADJAkFEAAAAAXNSR0IArs4c6...
2021-10-31T05:12:54.038Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:54.038Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:54.038Z INFO webdriver: DATA {
  script: 'return (function getDocumentScrollHeight() {\n' +
    '    var viewPortHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n' +
    '    var scrollHeight = document.documentElement.scrollHeight;\n' +
    '    var bodyScrollHeight = document.body.scrollHeight;\n' +
    '    if ((viewPortHeight === scrollHeight) && (bodyScrollHeight > scrollHeight)) {\n' +
    '        return bodyScrollHeight;\n' +
    '    }\n' +
    '    var pageHeight = 0;\n' +
    "    var largestNodeElement = document.querySelector('body');\n" +
    '    if (bodyScrollHeight === scrollHeight && bodyScrollHeight === viewPortHeight) {\n' +
    '        findHighestNode(document.documentElement.childNodes);\n' +
    '        return pageHeight + largestNodeElement.getBoundingClientRect().top;\n' +
    '    }\n' +
    '    return scrollHeight;\n' +
    '    function findHighestNode(nodesList) {\n' +
    '        for (var i = nodesList.length - 1; i >= 0; i--) {\n' +
    '            var currentNode = nodesList[i];\n' +
    '            if (currentNode.scrollHeight && currentNode.clientHeight) {\n' +
    '                var elHeight = Math.max(currentNode.scrollHeight, currentNode.clientHeight);\n' +
    '                pageHeight = Math.max(elHeight, pageHeight);\n' +
    '                if (elHeight === pageHeight) {\n' +
    '                    largestNodeElement = currentNode;\n' +
    '                }\n' +
    '            }\n' +
    '            if (currentNode.childNodes.length) {\n' +
    '                findHighestNode(currentNode.childNodes);\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: []
}
2021-10-31T05:12:54.079Z INFO webdriver: RESULT 4380
2021-10-31T05:12:54.080Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:54.080Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:54.080Z INFO webdriver: DATA {
  script: 'return (function scrollToPosition(yPosition) {\n' +
    '    (document.scrollingElement || document.documentElement).scrollTop = yPosition;\n' +
    '}).apply(null, arguments)',
  args: [ 880 ]
}
2021-10-31T05:12:55.644Z INFO webdriver: COMMAND takeScreenshot()
2021-10-31T05:12:55.645Z INFO webdriver: [GET] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/screenshot
2021-10-31T05:12:55.802Z INFO webdriver: RESULT iVBORw0KGgoAAAANSUhEUgAABVAAAANwCAYAAADJAkFEAAAAAXNSR0IArs4c6...
2021-10-31T05:12:55.815Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:55.815Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:55.815Z INFO webdriver: DATA {
  script: 'return (function getDocumentScrollHeight() {\n' +
    '    var viewPortHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n' +
    '    var scrollHeight = document.documentElement.scrollHeight;\n' +
    '    var bodyScrollHeight = document.body.scrollHeight;\n' +
    '    if ((viewPortHeight === scrollHeight) && (bodyScrollHeight > scrollHeight)) {\n' +
    '        return bodyScrollHeight;\n' +
    '    }\n' +
    '    var pageHeight = 0;\n' +
    "    var largestNodeElement = document.querySelector('body');\n" +
    '    if (bodyScrollHeight === scrollHeight && bodyScrollHeight === viewPortHeight) {\n' +
    '        findHighestNode(document.documentElement.childNodes);\n' +
    '        return pageHeight + largestNodeElement.getBoundingClientRect().top;\n' +
    '    }\n' +
    '    return scrollHeight;\n' +
    '    function findHighestNode(nodesList) {\n' +
    '        for (var i = nodesList.length - 1; i >= 0; i--) {\n' +
    '            var currentNode = nodesList[i];\n' +
    '            if (currentNode.scrollHeight && currentNode.clientHeight) {\n' +
    '                var elHeight = Math.max(currentNode.scrollHeight, currentNode.clientHeight);\n' +
    '                pageHeight = Math.max(elHeight, pageHeight);\n' +
    '                if (elHeight === pageHeight) {\n' +
    '                    largestNodeElement = currentNode;\n' +
    '                }\n' +
    '            }\n' +
    '            if (currentNode.childNodes.length) {\n' +
    '                findHighestNode(currentNode.childNodes);\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: []
}
2021-10-31T05:12:55.870Z INFO webdriver: RESULT 4476
2021-10-31T05:12:55.871Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:55.871Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:55.871Z INFO webdriver: DATA {
  script: 'return (function scrollToPosition(yPosition) {\n' +
    '    (document.scrollingElement || document.documentElement).scrollTop = yPosition;\n' +
    '}).apply(null, arguments)',
  args: [ 1760 ]
}
2021-10-31T05:12:57.472Z INFO webdriver: COMMAND takeScreenshot()
2021-10-31T05:12:57.472Z INFO webdriver: [GET] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/screenshot
2021-10-31T05:12:57.643Z INFO webdriver: RESULT iVBORw0KGgoAAAANSUhEUgAABVAAAANwCAYAAADJAkFEAAAAAXNSR0IArs4c6...
2021-10-31T05:12:57.648Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:57.648Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:57.648Z INFO webdriver: DATA {
  script: 'return (function getDocumentScrollHeight() {\n' +
    '    var viewPortHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n' +
    '    var scrollHeight = document.documentElement.scrollHeight;\n' +
    '    var bodyScrollHeight = document.body.scrollHeight;\n' +
    '    if ((viewPortHeight === scrollHeight) && (bodyScrollHeight > scrollHeight)) {\n' +
    '        return bodyScrollHeight;\n' +
    '    }\n' +
    '    var pageHeight = 0;\n' +
    "    var largestNodeElement = document.querySelector('body');\n" +
    '    if (bodyScrollHeight === scrollHeight && bodyScrollHeight === viewPortHeight) {\n' +
    '        findHighestNode(document.documentElement.childNodes);\n' +
    '        return pageHeight + largestNodeElement.getBoundingClientRect().top;\n' +
    '    }\n' +
    '    return scrollHeight;\n' +
    '    function findHighestNode(nodesList) {\n' +
    '        for (var i = nodesList.length - 1; i >= 0; i--) {\n' +
    '            var currentNode = nodesList[i];\n' +
    '            if (currentNode.scrollHeight && currentNode.clientHeight) {\n' +
    '                var elHeight = Math.max(currentNode.scrollHeight, currentNode.clientHeight);\n' +
    '                pageHeight = Math.max(elHeight, pageHeight);\n' +
    '                if (elHeight === pageHeight) {\n' +
    '                    largestNodeElement = currentNode;\n' +
    '                }\n' +
    '            }\n' +
    '            if (currentNode.childNodes.length) {\n' +
    '                findHighestNode(currentNode.childNodes);\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: []
}
2021-10-31T05:12:57.689Z INFO webdriver: RESULT 4476
2021-10-31T05:12:57.690Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:57.690Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:57.690Z INFO webdriver: DATA {
  script: 'return (function scrollToPosition(yPosition) {\n' +
    '    (document.scrollingElement || document.documentElement).scrollTop = yPosition;\n' +
    '}).apply(null, arguments)',
  args: [ 2640 ]
}
2021-10-31T05:12:59.246Z INFO webdriver: COMMAND takeScreenshot()
2021-10-31T05:12:59.246Z INFO webdriver: [GET] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/screenshot
2021-10-31T05:12:59.464Z INFO webdriver: RESULT iVBORw0KGgoAAAANSUhEUgAABVAAAANwCAYAAADJAkFEAAAAAXNSR0IArs4c6...
2021-10-31T05:12:59.466Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:59.467Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:59.467Z INFO webdriver: DATA {
  script: 'return (function getDocumentScrollHeight() {\n' +
    '    var viewPortHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n' +
    '    var scrollHeight = document.documentElement.scrollHeight;\n' +
    '    var bodyScrollHeight = document.body.scrollHeight;\n' +
    '    if ((viewPortHeight === scrollHeight) && (bodyScrollHeight > scrollHeight)) {\n' +
    '        return bodyScrollHeight;\n' +
    '    }\n' +
    '    var pageHeight = 0;\n' +
    "    var largestNodeElement = document.querySelector('body');\n" +
    '    if (bodyScrollHeight === scrollHeight && bodyScrollHeight === viewPortHeight) {\n' +
    '        findHighestNode(document.documentElement.childNodes);\n' +
    '        return pageHeight + largestNodeElement.getBoundingClientRect().top;\n' +
    '    }\n' +
    '    return scrollHeight;\n' +
    '    function findHighestNode(nodesList) {\n' +
    '        for (var i = nodesList.length - 1; i >= 0; i--) {\n' +
    '            var currentNode = nodesList[i];\n' +
    '            if (currentNode.scrollHeight && currentNode.clientHeight) {\n' +
    '                var elHeight = Math.max(currentNode.scrollHeight, currentNode.clientHeight);\n' +
    '                pageHeight = Math.max(elHeight, pageHeight);\n' +
    '                if (elHeight === pageHeight) {\n' +
    '                    largestNodeElement = currentNode;\n' +
    '                }\n' +
    '            }\n' +
    '            if (currentNode.childNodes.length) {\n' +
    '                findHighestNode(currentNode.childNodes);\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: []
}
2021-10-31T05:12:59.516Z INFO webdriver: RESULT 4476
2021-10-31T05:12:59.517Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:12:59.517Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:12:59.517Z INFO webdriver: DATA {
  script: 'return (function scrollToPosition(yPosition) {\n' +
    '    (document.scrollingElement || document.documentElement).scrollTop = yPosition;\n' +
    '}).apply(null, arguments)',
  args: [ 3520 ]
}
2021-10-31T05:13:01.067Z INFO webdriver: COMMAND takeScreenshot()
2021-10-31T05:13:01.067Z INFO webdriver: [GET] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/screenshot
2021-10-31T05:13:01.245Z INFO webdriver: RESULT iVBORw0KGgoAAAANSUhEUgAABVAAAANwCAYAAADJAkFEAAAAAXNSR0IArs4c6...
2021-10-31T05:13:01.255Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:13:01.255Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:13:01.255Z INFO webdriver: DATA {
  script: 'return (function getDocumentScrollHeight() {\n' +
    '    var viewPortHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n' +
    '    var scrollHeight = document.documentElement.scrollHeight;\n' +
    '    var bodyScrollHeight = document.body.scrollHeight;\n' +
    '    if ((viewPortHeight === scrollHeight) && (bodyScrollHeight > scrollHeight)) {\n' +
    '        return bodyScrollHeight;\n' +
    '    }\n' +
    '    var pageHeight = 0;\n' +
    "    var largestNodeElement = document.querySelector('body');\n" +
    '    if (bodyScrollHeight === scrollHeight && bodyScrollHeight === viewPortHeight) {\n' +
    '        findHighestNode(document.documentElement.childNodes);\n' +
    '        return pageHeight + largestNodeElement.getBoundingClientRect().top;\n' +
    '    }\n' +
    '    return scrollHeight;\n' +
    '    function findHighestNode(nodesList) {\n' +
    '        for (var i = nodesList.length - 1; i >= 0; i--) {\n' +
    '            var currentNode = nodesList[i];\n' +
    '            if (currentNode.scrollHeight && currentNode.clientHeight) {\n' +
    '                var elHeight = Math.max(currentNode.scrollHeight, currentNode.clientHeight);\n' +
    '                pageHeight = Math.max(elHeight, pageHeight);\n' +
    '                if (elHeight === pageHeight) {\n' +
    '                    largestNodeElement = currentNode;\n' +
    '                }\n' +
    '            }\n' +
    '            if (currentNode.childNodes.length) {\n' +
    '                findHighestNode(currentNode.childNodes);\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: []
}
2021-10-31T05:13:01.289Z INFO webdriver: RESULT 4476
2021-10-31T05:13:01.290Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:13:01.290Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:13:01.290Z INFO webdriver: DATA {
  script: 'return (function scrollToPosition(yPosition) {\n' +
    '    (document.scrollingElement || document.documentElement).scrollTop = yPosition;\n' +
    '}).apply(null, arguments)',
  args: [ 4400 ]
}
2021-10-31T05:13:02.848Z INFO webdriver: COMMAND takeScreenshot()
2021-10-31T05:13:02.849Z INFO webdriver: [GET] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/screenshot
2021-10-31T05:13:03.020Z INFO webdriver: RESULT iVBORw0KGgoAAAANSUhEUgAABVAAAANwCAYAAADJAkFEAAAAAXNSR0IArs4c6...
2021-10-31T05:13:03.022Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:13:03.022Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:13:03.022Z INFO webdriver: DATA {
  script: 'return (function getDocumentScrollHeight() {\n' +
    '    var viewPortHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n' +
    '    var scrollHeight = document.documentElement.scrollHeight;\n' +
    '    var bodyScrollHeight = document.body.scrollHeight;\n' +
    '    if ((viewPortHeight === scrollHeight) && (bodyScrollHeight > scrollHeight)) {\n' +
    '        return bodyScrollHeight;\n' +
    '    }\n' +
    '    var pageHeight = 0;\n' +
    "    var largestNodeElement = document.querySelector('body');\n" +
    '    if (bodyScrollHeight === scrollHeight && bodyScrollHeight === viewPortHeight) {\n' +
    '        findHighestNode(document.documentElement.childNodes);\n' +
    '        return pageHeight + largestNodeElement.getBoundingClientRect().top;\n' +
    '    }\n' +
    '    return scrollHeight;\n' +
    '    function findHighestNode(nodesList) {\n' +
    '        for (var i = nodesList.length - 1; i >= 0; i--) {\n' +
    '            var currentNode = nodesList[i];\n' +
    '            if (currentNode.scrollHeight && currentNode.clientHeight) {\n' +
    '                var elHeight = Math.max(currentNode.scrollHeight, currentNode.clientHeight);\n' +
    '                pageHeight = Math.max(elHeight, pageHeight);\n' +
    '                if (elHeight === pageHeight) {\n' +
    '                    largestNodeElement = currentNode;\n' +
    '                }\n' +
    '            }\n' +
    '            if (currentNode.childNodes.length) {\n' +
    '                findHighestNode(currentNode.childNodes);\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: []
}
2021-10-31T05:13:03.068Z INFO webdriver: RESULT 4476
2021-10-31T05:13:03.901Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:13:03.902Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:13:03.902Z INFO webdriver: DATA {
  script: 'return (function hideScrollBars(hide) {\n' +
    '    try {\n' +
    '        if (hide) {\n' +
    "            document.body.style.overflow = 'hidden';\n" +
    '        }\n' +
    '        else {\n' +
    "            document.body.style.overflow = '';\n" +
    '        }\n' +
    '    }\n' +
    '    catch (e) {\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: [ false ]
}
2021-10-31T05:13:03.941Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:13:03.942Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:13:03.942Z INFO webdriver: DATA {
  script: 'return (function removeElementFromDom(id) {\n' +
    '    var elem = document.querySelector("#" + id);\n' +
    '    if (elem != null) {\n' +
    '        elem.parentNode.removeChild(elem);\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: [ 'wic-tabbable-canvas' ]
}
2021-10-31T05:13:03.988Z INFO webdriver: RESULT {
  fileName: 'mildstabbedpage--1360x998.png',
  path: '/Users/ksaminat/testing/git_volvo/volvo-kube-wdio/.tmp/actual/desktop_chrome',
  devicePixelRatio: 1
}
2021-10-31T05:13:03.990Z INFO webdriver: COMMAND navigateTo("https://www.volvocars.com/intl/v/cars/other-powertrains")
2021-10-31T05:13:03.990Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/url
2021-10-31T05:13:03.990Z INFO webdriver: DATA { url: 'https://www.volvocars.com/intl/v/cars/other-powertrains' }
2021-10-31T05:13:05.615Z INFO webdriver: COMMAND checkTabbablePage("mildstabbedpage", <object>)
2021-10-31T05:13:05.616Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:13:05.616Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:13:05.616Z INFO webdriver: DATA {
  script: 'return (function drawTabbableOnCanvas(drawOptions) {\n' +
    '    window.scrollTo(0, 0);\n' +
    '    var width = window.innerWidth;\n' +
    '    var height = getDocumentScrollHeight();\n' +
    '    var canvasNode = "<canvas id=\\"wic-tabbable-canvas\\" width=\\"" + width + "\\" height=\\"" + height + "\\" style=\\"position:absolute;top:0;left:0;z-index:999999;\\">";\n' +
    "    document.body.insertAdjacentHTML('afterbegin', canvasNode);\n" +
    '    var accessibleElements = tabbable();\n' +
    '    var elementCoordinates = accessibleElements.map(function (node) {\n' +
    '        var currentElement = node.getBoundingClientRect();\n' +
    '        return {\n' +
    '            x: currentElement.left + (currentElement.width / 2),\n' +
    '            y: currentElement.top + (currentElement.height / 2),\n' +
    '        };\n' +
    '    });\n' +
    '    elementCoordinates.unshift({ x: 0, y: 0 });\n' +
    '    elementCoordinates.forEach(function (elementCoordinate, i) {\n' +
    '        if (i === 0) {\n' +
    '            return;\n' +
    '        }\n' +
    '        drawLine(drawOptions.line, elementCoordinates[i - 1], elementCoordinate);\n' +
    '        drawCircleAndNumber(drawOptions.circle, elementCoordinate, i);\n' +
    '    });\n' +
    '    function drawLine(options, start, end) {\n' +
    "        var tabbableCanvasContext = document.getElementById('wic-tabbable-canvas').getContext('2d');\n" +
    '        tabbableCanvasContext.beginPath();\n' +
    "        tabbableCanvasContext.globalCompositeOperation = 'destination-over';\n" +
    '        tabbableCanvasContext.lineWidth = options.width;\n' +
    '        tabbableCanvasContext.strokeStyle = options.color;\n' +
    '        tabbableCanvasContext.moveTo(start.x, start.y);\n' +
    '        tabbableCanvasContext.lineTo(end.x, end.y);\n' +
    '        tabbableCanvasContext.stroke();\n' +
    '    }\n' +
    '    function drawCircleAndNumber(options, position, i) {\n' +
    "        var tabbableCanvasContext = document.getElementById('wic-tabbable-canvas').getContext('2d');\n" +
    '        tabbableCanvasContext.beginPath();\n' +
    "        tabbableCanvasContext.globalCompositeOperation = 'source-over';\n" +
    '        tabbableCanvasContext.fillStyle = options.backgroundColor;\n' +
    '        tabbableCanvasContext.arc(position.x, position.y, options.size, 0, Math.PI * 2, true);\n' +
    '        tabbableCanvasContext.fill();\n' +
    '        tabbableCanvasContext.lineWidth = options.borderWidth;\n' +
    '        tabbableCanvasContext.strokeStyle = options.borderColor;\n' +
    '        tabbableCanvasContext.stroke();\n' +
    '        if (options.showNumber) {\n' +
    '            tabbableCanvasContext.font = options.fontSize + "px " + options.fontFamily;\n' +
    "            tabbableCanvasContext.textAlign = 'center';\n" +
    "            tabbableCanvasContext.textBaseline = 'middle';\n" +
    '            tabbableCanvasContext.fillStyle = options.fontColor;\n' +
    '            tabbableCanvasContext.fillText(i.toString(), position.x, position.y);\n' +
    '        }\n' +
    '    }\n' +
    '    function tabbable() {\n' +
    '        var regularTabbables = [];\n' +
    '        var orderedTabbables = [];\n' +
    '        var candidateSelectors = [\n' +
    "            'input',\n" +
    "            'select',\n" +
    "            'textarea',\n" +
    "            'a[href]',\n" +
    "            'button',\n" +
    "            '[tabindex]',\n" +
    "            'audio[controls]',\n" +
    "            'video[controls]',\n" +
    `            '[contenteditable]:not([contenteditable="false"])',\n` +
    "        ].join(',');\n" +
    '        var candidates = document.querySelectorAll(candidateSelectors);\n' +
    '        for (var i = 0; i < candidates.length; i++) {\n' +
    '            var candidate = candidates[i];\n' +
    '            if (!isNodeMatchingSelectorTabbable(candidate)) {\n' +
    '                continue;\n' +
    '            }\n' +
    '            var candidateTabindex = getTabindex(candidate);\n' +
    '            if (candidateTabindex === 0) {\n' +
    '                regularTabbables.push(candidate);\n' +
    '            }\n' +
    '            else {\n' +
    '                orderedTabbables.push({\n' +
    '                    documentOrder: i,\n' +
    '                    tabIndex: candidateTabindex,\n' +
    '                    node: candidate,\n' +
    '                });\n' +
    '            }\n' +
    '        }\n' +
    '        return Array.prototype.slice.call(orderedTabbables.sort(sortOrderedTabbables).map(function (a) { return a.node; }).concat(regularTabbables));\n' +
    '    }\n' +
    '    function isNodeMatchingSelectorTabbable(node) {\n' +
    '        return !(!isNodeMatchingSelectorFocusable(node) ||\n' +
    '            isNonTabbableRadio(node) ||\n' +
    '            getTabindex(node) < 0);\n' +
    '    }\n' +
    '    function isNodeMatchingSelectorFocusable(node) {\n' +
    "        return !((node.hasAttribute('disabled') || node.getAttribute('disabled'))\n" +
    '            || isHiddenInput(node)\n' +
    '            || isHidden(node));\n' +
    '    }\n' +
    '    function getTabindex(node) {\n' +
    "        var tabindexAttr = parseInt(node.getAttribute('tabindex'), 10);\n" +
    '        if (!isNaN(tabindexAttr)) {\n' +
    '            return tabindexAttr;\n' +
    '        }\n' +
    '        if (isContentEditable(node)) {\n' +
    '            return 0;\n' +
    '        }\n' +
    '        return node.tabIndex;\n' +
    '    }\n' +
    '    function sortOrderedTabbables(nodeA, nodeB) {\n' +
    '        return nodeA.tabIndex === nodeB.tabIndex\n' +
    '            ? nodeA.documentOrder - nodeB.documentOrder\n' +
    '            : nodeA.tabIndex - nodeB.tabIndex;\n' +
    '    }\n' +
    '    function isContentEditable(node) {\n' +
    "        return node.contentEditable === 'true';\n" +
    '    }\n' +
    '    function isInput(node) {\n' +
    "        return node.tagName === 'INPUT';\n" +
    '    }\n' +
    '    function isHiddenInput(node) {\n' +
    "        return isInput(node) && node.type === 'hidden';\n" +
    '    }\n' +
    '    function isRadio(node) {\n' +
    "        return isInput(node) && node.type === 'radio';\n" +
    '    }\n' +
    '    function isNonTabbableRadio(node) {\n' +
    '        return isRadio(node) && !isTabbableRadio(node);\n' +
    '    }\n' +
    '    function getCheckedRadio(nodes) {\n' +
    '        for (var i = 0; i < nodes.length; i++) {\n' +
    '            if (nodes[i].checked) {\n' +
    '                return nodes[i];\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    '    function isTabbableRadio(node) {\n' +
    '        if (!node.name) {\n' +
    '            return true;\n' +
    '        }\n' +
    '        var radioSet = node.ownerDocument.querySelectorAll("input[type=\\"radio\\"][name=\\"" + node.name + "\\"]");\n' +
    '        var checked = getCheckedRadio(radioSet);\n' +
    '        return !checked || checked === node;\n' +
    '    }\n' +
    '    function isHidden(node) {\n' +
    "        return (node.offsetParent === null || getComputedStyle(node).visibility === 'hidden');\n" +
    '    }\n' +
    '    function getDocumentScrollHeight() {\n' +
    '        var viewPortHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n' +
    '        var scrollHeight = document.documentElement.scrollHeight;\n' +
    '        var bodyScrollHeight = document.body.scrollHeight;\n' +
    '        if ((viewPortHeight === scrollHeight) && (bodyScrollHeight > scrollHeight)) {\n' +
    '            return bodyScrollHeight;\n' +
    '        }\n' +
    '        var pageHeight = 0;\n' +
    "        var largestNodeElement = document.querySelector('body');\n" +
    '        if (bodyScrollHeight === scrollHeight && bodyScrollHeight === viewPortHeight) {\n' +
    '            findHighestNode(document.documentElement.childNodes);\n' +
    '            return pageHeight + largestNodeElement.getBoundingClientRect().top;\n' +
    '        }\n' +
    '        return scrollHeight;\n' +
    '        function findHighestNode(nodesList) {\n' +
    '            for (var i = nodesList.length - 1; i >= 0; i--) {\n' +
    '                var currentNode = nodesList[i];\n' +
    '                if (currentNode.scrollHeight && currentNode.clientHeight) {\n' +
    '                    var elHeight = Math.max(currentNode.scrollHeight, currentNode.clientHeight);\n' +
    '                    pageHeight = Math.max(elHeight, pageHeight);\n' +
    '                    if (elHeight === pageHeight) {\n' +
    '                        largestNodeElement = currentNode;\n' +
    '                    }\n' +
    '                }\n' +
    '                if (currentNode.childNodes.length) {\n' +
    '                    findHighestNode(currentNode.childNodes);\n' +
    '                }\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: [ { circle: [Object], line: [Object] } ]
}
2021-10-31T05:13:05.674Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:13:05.674Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:13:05.674Z INFO webdriver: DATA {
  script: 'return (function hideScrollBars(hide) {\n' +
    '    try {\n' +
    '        if (hide) {\n' +
    "            document.body.style.overflow = 'hidden';\n" +
    '        }\n' +
    '        else {\n' +
    "            document.body.style.overflow = '';\n" +
    '        }\n' +
    '    }\n' +
    '    catch (e) {\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: [ true ]
}
2021-10-31T05:13:05.733Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:13:05.733Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:13:05.733Z INFO webdriver: DATA {
  script: 'return (function getScreenDimensions() {\n' +
    '    var body = document.body;\n' +
    '    var html = document.documentElement;\n' +
    '    var bodyDimensions = {\n' +
    '        scrollHeight: body == null ? 0 : body.scrollHeight,\n' +
    '        offsetHeight: body == null ? 0 : body.offsetHeight\n' +
    '    };\n' +
    '    var htmlDimensions = {\n' +
    '        clientHeight: html == null ? 0 : html.clientHeight,\n' +
    '        clientWidth: html == null ? 0 : html.clientWidth,\n' +
    '        scrollHeight: html == null ? 0 : html.scrollHeight,\n' +
    '        scrollWidth: html == null ? 0 : html.scrollWidth,\n' +
    '        offsetHeight: html == null ? 0 : html.offsetHeight\n' +
    '    };\n' +
    '    var windowDimensions = {\n' +
    '        innerWidth: window.innerWidth,\n' +
    '        innerHeight: window.innerHeight,\n' +
    '        outerHeight: window.outerHeight === 0 ? htmlDimensions.clientHeight : window.outerHeight,\n' +
    '        outerWidth: window.outerWidth === 0 ? htmlDimensions.clientWidth : window.outerWidth,\n' +
    '        devicePixelRatio: window.devicePixelRatio,\n' +
    '        screenWidth: window.screen.width,\n' +
    '        screenHeight: window.screen.height,\n' +
    '    };\n' +
    '    return {\n' +
    '        dimensions: {\n' +
    '            body: bodyDimensions,\n' +
    '            html: htmlDimensions,\n' +
    '            window: windowDimensions\n' +
    '        }\n' +
    '    };\n' +
    '}).apply(null, arguments)',
  args: []
}
2021-10-31T05:13:05.774Z INFO webdriver: RESULT {
  dimensions: {
    body: { offsetHeight: 4380, scrollHeight: 4380 },
    html: {
      clientHeight: 880,
      clientWidth: 1360,
      offsetHeight: 4380,
      scrollHeight: 4380,
      scrollWidth: 1360
    },
    window: {
      devicePixelRatio: 1,
      innerHeight: 880,
      innerWidth: 1360,
      outerHeight: 998,
      outerWidth: 1360,
      screenHeight: 1020,
      screenWidth: 1360
    }
  }
}
2021-10-31T05:13:05.775Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:13:05.775Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:13:05.775Z INFO webdriver: DATA {
  script: 'return (function scrollToPosition(yPosition) {\n' +
    '    (document.scrollingElement || document.documentElement).scrollTop = yPosition;\n' +
    '}).apply(null, arguments)',
  args: [ 0 ]
}
2021-10-31T05:13:07.307Z INFO webdriver: COMMAND takeScreenshot()
2021-10-31T05:13:07.307Z INFO webdriver: [GET] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/screenshot
2021-10-31T05:13:07.830Z INFO webdriver: RESULT iVBORw0KGgoAAAANSUhEUgAABVAAAANwCAYAAADJAkFEAAAAAXNSR0IArs4c6...
2021-10-31T05:13:07.838Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:13:07.838Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:13:07.838Z INFO webdriver: DATA {
  script: 'return (function getDocumentScrollHeight() {\n' +
    '    var viewPortHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n' +
    '    var scrollHeight = document.documentElement.scrollHeight;\n' +
    '    var bodyScrollHeight = document.body.scrollHeight;\n' +
    '    if ((viewPortHeight === scrollHeight) && (bodyScrollHeight > scrollHeight)) {\n' +
    '        return bodyScrollHeight;\n' +
    '    }\n' +
    '    var pageHeight = 0;\n' +
    "    var largestNodeElement = document.querySelector('body');\n" +
    '    if (bodyScrollHeight === scrollHeight && bodyScrollHeight === viewPortHeight) {\n' +
    '        findHighestNode(document.documentElement.childNodes);\n' +
    '        return pageHeight + largestNodeElement.getBoundingClientRect().top;\n' +
    '    }\n' +
    '    return scrollHeight;\n' +
    '    function findHighestNode(nodesList) {\n' +
    '        for (var i = nodesList.length - 1; i >= 0; i--) {\n' +
    '            var currentNode = nodesList[i];\n' +
    '            if (currentNode.scrollHeight && currentNode.clientHeight) {\n' +
    '                var elHeight = Math.max(currentNode.scrollHeight, currentNode.clientHeight);\n' +
    '                pageHeight = Math.max(elHeight, pageHeight);\n' +
    '                if (elHeight === pageHeight) {\n' +
    '                    largestNodeElement = currentNode;\n' +
    '                }\n' +
    '            }\n' +
    '            if (currentNode.childNodes.length) {\n' +
    '                findHighestNode(currentNode.childNodes);\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: []
}
2021-10-31T05:13:07.873Z INFO webdriver: RESULT 4380
2021-10-31T05:13:07.874Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:13:07.874Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:13:07.874Z INFO webdriver: DATA {
  script: 'return (function scrollToPosition(yPosition) {\n' +
    '    (document.scrollingElement || document.documentElement).scrollTop = yPosition;\n' +
    '}).apply(null, arguments)',
  args: [ 880 ]
}
2021-10-31T05:13:09.457Z INFO webdriver: COMMAND takeScreenshot()
2021-10-31T05:13:09.457Z INFO webdriver: [GET] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/screenshot
2021-10-31T05:13:09.675Z INFO webdriver: RESULT iVBORw0KGgoAAAANSUhEUgAABVAAAANwCAYAAADJAkFEAAAAAXNSR0IArs4c6...
2021-10-31T05:13:09.676Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:13:09.676Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:13:09.676Z INFO webdriver: DATA {
  script: 'return (function getDocumentScrollHeight() {\n' +
    '    var viewPortHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n' +
    '    var scrollHeight = document.documentElement.scrollHeight;\n' +
    '    var bodyScrollHeight = document.body.scrollHeight;\n' +
    '    if ((viewPortHeight === scrollHeight) && (bodyScrollHeight > scrollHeight)) {\n' +
    '        return bodyScrollHeight;\n' +
    '    }\n' +
    '    var pageHeight = 0;\n' +
    "    var largestNodeElement = document.querySelector('body');\n" +
    '    if (bodyScrollHeight === scrollHeight && bodyScrollHeight === viewPortHeight) {\n' +
    '        findHighestNode(document.documentElement.childNodes);\n' +
    '        return pageHeight + largestNodeElement.getBoundingClientRect().top;\n' +
    '    }\n' +
    '    return scrollHeight;\n' +
    '    function findHighestNode(nodesList) {\n' +
    '        for (var i = nodesList.length - 1; i >= 0; i--) {\n' +
    '            var currentNode = nodesList[i];\n' +
    '            if (currentNode.scrollHeight && currentNode.clientHeight) {\n' +
    '                var elHeight = Math.max(currentNode.scrollHeight, currentNode.clientHeight);\n' +
    '                pageHeight = Math.max(elHeight, pageHeight);\n' +
    '                if (elHeight === pageHeight) {\n' +
    '                    largestNodeElement = currentNode;\n' +
    '                }\n' +
    '            }\n' +
    '            if (currentNode.childNodes.length) {\n' +
    '                findHighestNode(currentNode.childNodes);\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: []
}
2021-10-31T05:13:09.710Z INFO webdriver: RESULT 4476
2021-10-31T05:13:09.711Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:13:09.711Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:13:09.711Z INFO webdriver: DATA {
  script: 'return (function scrollToPosition(yPosition) {\n' +
    '    (document.scrollingElement || document.documentElement).scrollTop = yPosition;\n' +
    '}).apply(null, arguments)',
  args: [ 1760 ]
}
2021-10-31T05:13:11.267Z INFO webdriver: COMMAND takeScreenshot()
2021-10-31T05:13:11.267Z INFO webdriver: [GET] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/screenshot
2021-10-31T05:13:11.506Z INFO webdriver: RESULT iVBORw0KGgoAAAANSUhEUgAABVAAAANwCAYAAADJAkFEAAAAAXNSR0IArs4c6...
2021-10-31T05:13:11.507Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:13:11.508Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:13:11.508Z INFO webdriver: DATA {
  script: 'return (function getDocumentScrollHeight() {\n' +
    '    var viewPortHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n' +
    '    var scrollHeight = document.documentElement.scrollHeight;\n' +
    '    var bodyScrollHeight = document.body.scrollHeight;\n' +
    '    if ((viewPortHeight === scrollHeight) && (bodyScrollHeight > scrollHeight)) {\n' +
    '        return bodyScrollHeight;\n' +
    '    }\n' +
    '    var pageHeight = 0;\n' +
    "    var largestNodeElement = document.querySelector('body');\n" +
    '    if (bodyScrollHeight === scrollHeight && bodyScrollHeight === viewPortHeight) {\n' +
    '        findHighestNode(document.documentElement.childNodes);\n' +
    '        return pageHeight + largestNodeElement.getBoundingClientRect().top;\n' +
    '    }\n' +
    '    return scrollHeight;\n' +
    '    function findHighestNode(nodesList) {\n' +
    '        for (var i = nodesList.length - 1; i >= 0; i--) {\n' +
    '            var currentNode = nodesList[i];\n' +
    '            if (currentNode.scrollHeight && currentNode.clientHeight) {\n' +
    '                var elHeight = Math.max(currentNode.scrollHeight, currentNode.clientHeight);\n' +
    '                pageHeight = Math.max(elHeight, pageHeight);\n' +
    '                if (elHeight === pageHeight) {\n' +
    '                    largestNodeElement = currentNode;\n' +
    '                }\n' +
    '            }\n' +
    '            if (currentNode.childNodes.length) {\n' +
    '                findHighestNode(currentNode.childNodes);\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: []
}
2021-10-31T05:13:11.556Z INFO webdriver: RESULT 4476
2021-10-31T05:13:11.557Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:13:11.557Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:13:11.557Z INFO webdriver: DATA {
  script: 'return (function scrollToPosition(yPosition) {\n' +
    '    (document.scrollingElement || document.documentElement).scrollTop = yPosition;\n' +
    '}).apply(null, arguments)',
  args: [ 2640 ]
}
2021-10-31T05:13:13.099Z INFO webdriver: COMMAND takeScreenshot()
2021-10-31T05:13:13.099Z INFO webdriver: [GET] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/screenshot
2021-10-31T05:13:13.413Z INFO webdriver: RESULT iVBORw0KGgoAAAANSUhEUgAABVAAAANwCAYAAADJAkFEAAAAAXNSR0IArs4c6...
2021-10-31T05:13:13.430Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:13:13.430Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:13:13.430Z INFO webdriver: DATA {
  script: 'return (function getDocumentScrollHeight() {\n' +
    '    var viewPortHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n' +
    '    var scrollHeight = document.documentElement.scrollHeight;\n' +
    '    var bodyScrollHeight = document.body.scrollHeight;\n' +
    '    if ((viewPortHeight === scrollHeight) && (bodyScrollHeight > scrollHeight)) {\n' +
    '        return bodyScrollHeight;\n' +
    '    }\n' +
    '    var pageHeight = 0;\n' +
    "    var largestNodeElement = document.querySelector('body');\n" +
    '    if (bodyScrollHeight === scrollHeight && bodyScrollHeight === viewPortHeight) {\n' +
    '        findHighestNode(document.documentElement.childNodes);\n' +
    '        return pageHeight + largestNodeElement.getBoundingClientRect().top;\n' +
    '    }\n' +
    '    return scrollHeight;\n' +
    '    function findHighestNode(nodesList) {\n' +
    '        for (var i = nodesList.length - 1; i >= 0; i--) {\n' +
    '            var currentNode = nodesList[i];\n' +
    '            if (currentNode.scrollHeight && currentNode.clientHeight) {\n' +
    '                var elHeight = Math.max(currentNode.scrollHeight, currentNode.clientHeight);\n' +
    '                pageHeight = Math.max(elHeight, pageHeight);\n' +
    '                if (elHeight === pageHeight) {\n' +
    '                    largestNodeElement = currentNode;\n' +
    '                }\n' +
    '            }\n' +
    '            if (currentNode.childNodes.length) {\n' +
    '                findHighestNode(currentNode.childNodes);\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: []
}
2021-10-31T05:13:13.476Z INFO webdriver: RESULT 4476
2021-10-31T05:13:13.477Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:13:13.477Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:13:13.477Z INFO webdriver: DATA {
  script: 'return (function scrollToPosition(yPosition) {\n' +
    '    (document.scrollingElement || document.documentElement).scrollTop = yPosition;\n' +
    '}).apply(null, arguments)',
  args: [ 3520 ]
}
2021-10-31T05:13:15.051Z INFO webdriver: COMMAND takeScreenshot()
2021-10-31T05:13:15.051Z INFO webdriver: [GET] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/screenshot
2021-10-31T05:13:15.316Z INFO webdriver: RESULT iVBORw0KGgoAAAANSUhEUgAABVAAAANwCAYAAADJAkFEAAAAAXNSR0IArs4c6...
2021-10-31T05:13:15.323Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:13:15.323Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:13:15.323Z INFO webdriver: DATA {
  script: 'return (function getDocumentScrollHeight() {\n' +
    '    var viewPortHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n' +
    '    var scrollHeight = document.documentElement.scrollHeight;\n' +
    '    var bodyScrollHeight = document.body.scrollHeight;\n' +
    '    if ((viewPortHeight === scrollHeight) && (bodyScrollHeight > scrollHeight)) {\n' +
    '        return bodyScrollHeight;\n' +
    '    }\n' +
    '    var pageHeight = 0;\n' +
    "    var largestNodeElement = document.querySelector('body');\n" +
    '    if (bodyScrollHeight === scrollHeight && bodyScrollHeight === viewPortHeight) {\n' +
    '        findHighestNode(document.documentElement.childNodes);\n' +
    '        return pageHeight + largestNodeElement.getBoundingClientRect().top;\n' +
    '    }\n' +
    '    return scrollHeight;\n' +
    '    function findHighestNode(nodesList) {\n' +
    '        for (var i = nodesList.length - 1; i >= 0; i--) {\n' +
    '            var currentNode = nodesList[i];\n' +
    '            if (currentNode.scrollHeight && currentNode.clientHeight) {\n' +
    '                var elHeight = Math.max(currentNode.scrollHeight, currentNode.clientHeight);\n' +
    '                pageHeight = Math.max(elHeight, pageHeight);\n' +
    '                if (elHeight === pageHeight) {\n' +
    '                    largestNodeElement = currentNode;\n' +
    '                }\n' +
    '            }\n' +
    '            if (currentNode.childNodes.length) {\n' +
    '                findHighestNode(currentNode.childNodes);\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: []
}
2021-10-31T05:13:15.361Z INFO webdriver: RESULT 4476
2021-10-31T05:13:15.362Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:13:15.362Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:13:15.362Z INFO webdriver: DATA {
  script: 'return (function scrollToPosition(yPosition) {\n' +
    '    (document.scrollingElement || document.documentElement).scrollTop = yPosition;\n' +
    '}).apply(null, arguments)',
  args: [ 4400 ]
}
2021-10-31T05:13:16.949Z INFO webdriver: COMMAND takeScreenshot()
2021-10-31T05:13:16.950Z INFO webdriver: [GET] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/screenshot
2021-10-31T05:13:17.133Z INFO webdriver: RESULT iVBORw0KGgoAAAANSUhEUgAABVAAAANwCAYAAADJAkFEAAAAAXNSR0IArs4c6...
2021-10-31T05:13:17.137Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:13:17.137Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:13:17.137Z INFO webdriver: DATA {
  script: 'return (function getDocumentScrollHeight() {\n' +
    '    var viewPortHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n' +
    '    var scrollHeight = document.documentElement.scrollHeight;\n' +
    '    var bodyScrollHeight = document.body.scrollHeight;\n' +
    '    if ((viewPortHeight === scrollHeight) && (bodyScrollHeight > scrollHeight)) {\n' +
    '        return bodyScrollHeight;\n' +
    '    }\n' +
    '    var pageHeight = 0;\n' +
    "    var largestNodeElement = document.querySelector('body');\n" +
    '    if (bodyScrollHeight === scrollHeight && bodyScrollHeight === viewPortHeight) {\n' +
    '        findHighestNode(document.documentElement.childNodes);\n' +
    '        return pageHeight + largestNodeElement.getBoundingClientRect().top;\n' +
    '    }\n' +
    '    return scrollHeight;\n' +
    '    function findHighestNode(nodesList) {\n' +
    '        for (var i = nodesList.length - 1; i >= 0; i--) {\n' +
    '            var currentNode = nodesList[i];\n' +
    '            if (currentNode.scrollHeight && currentNode.clientHeight) {\n' +
    '                var elHeight = Math.max(currentNode.scrollHeight, currentNode.clientHeight);\n' +
    '                pageHeight = Math.max(elHeight, pageHeight);\n' +
    '                if (elHeight === pageHeight) {\n' +
    '                    largestNodeElement = currentNode;\n' +
    '                }\n' +
    '            }\n' +
    '            if (currentNode.childNodes.length) {\n' +
    '                findHighestNode(currentNode.childNodes);\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: []
}
2021-10-31T05:13:17.199Z INFO webdriver: RESULT 4476
2021-10-31T05:13:18.030Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:13:18.031Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:13:18.031Z INFO webdriver: DATA {
  script: 'return (function hideScrollBars(hide) {\n' +
    '    try {\n' +
    '        if (hide) {\n' +
    "            document.body.style.overflow = 'hidden';\n" +
    '        }\n' +
    '        else {\n' +
    "            document.body.style.overflow = '';\n" +
    '        }\n' +
    '    }\n' +
    '    catch (e) {\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: [ false ]
}
2021-10-31T05:13:18.665Z INFO webdriver: COMMAND executeScript(<fn>, <object>)
2021-10-31T05:13:18.665Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/execute/sync
2021-10-31T05:13:18.665Z INFO webdriver: DATA {
  script: 'return (function removeElementFromDom(id) {\n' +
    '    var elem = document.querySelector("#" + id);\n' +
    '    if (elem != null) {\n' +
    '        elem.parentNode.removeChild(elem);\n' +
    '    }\n' +
    '}).apply(null, arguments)',
  args: [ 'wic-tabbable-canvas' ]
}
2021-10-31T05:13:18.695Z INFO webdriver: RESULT 0
2021-10-31T05:13:18.733Z INFO webdriver: COMMAND getLogTypes()
2021-10-31T05:13:18.733Z INFO webdriver: [GET] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/se/log/types
2021-10-31T05:13:18.762Z INFO webdriver: RESULT [ 'browser', 'driver' ]
2021-10-31T05:13:18.762Z INFO webdriver: COMMAND getLogs("driver")
2021-10-31T05:13:18.762Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/se/log
2021-10-31T05:13:18.762Z INFO webdriver: DATA { type: 'driver' }
2021-10-31T05:13:18.762Z INFO webdriver: COMMAND getLogs("browser")
2021-10-31T05:13:18.763Z INFO webdriver: [POST] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f/se/log
2021-10-31T05:13:18.763Z INFO webdriver: DATA { type: 'browser' }
2021-10-31T05:13:18.788Z INFO webdriver: RESULT []
2021-10-31T05:13:18.817Z INFO webdriver: RESULT [
  {
    level: 'SEVERE',
    message: 'https://p.adsymptotic.com/d/px/?_pid=16218&_psign=0aa5badf92527f7732e22463d6fa4dbc&coopa=0&gdpr=0&gdpr_consent=&_puuid=1c376334-ecbe-48c1-b53b-2edd8c6f2aa2 - Failed to load resource: the server responded with a status of 403 (Forbidden)',
    source: 'network',
    timestamp: 1635657139888
  },
  {
    level: 'SEVERE',
    message: 'https://p.adsymptotic.com/d/px/?_pid=16218&_psign=0aa5badf92527f7732e22463d6fa4dbc&coopa=0&gdpr=0&gdpr_consent=&_puuid=1c376334-ecbe-48c1-b53b-2edd8c6f2aa2 - Failed to load resource: the server responded with a status of 403 (Forbidden)',
    source: 'network',
    timestamp: 1635657143546
  },
  {
    level: 'SEVERE',
    message: 'https://p.adsymptotic.com/d/px/?_pid=16218&_psign=0aa5badf92527f7732e22463d6fa4dbc&coopa=0&gdpr=0&gdpr_consent=&_puuid=1c376334-ecbe-48c1-b53b-2edd8c6f2aa2 - Failed to load resource: the server responded with a status of 403 (Forbidden)',
    source: 'network',
    timestamp: 1635657157239
  },
  {
    level: 'SEVERE',
    message: 'https://p.adsymptotic.com/d/px/?_pid=16218&_psign=0aa5badf92527f7732e22463d6fa4dbc&coopa=0&gdpr=0&gdpr_consent=&_puuid=1c376334-ecbe-48c1-b53b-2edd8c6f2aa2 - Failed to load resource: the server responded with a status of 403 (Forbidden)',
    source: 'network',
    timestamp: 1635657171697
  },
  {
    level: 'SEVERE',
    message: 'https://p.adsymptotic.com/d/px/?_pid=16218&_psign=0aa5badf92527f7732e22463d6fa4dbc&coopa=0&gdpr=0&gdpr_consent=&_puuid=1c376334-ecbe-48c1-b53b-2edd8c6f2aa2 - Failed to load resource: the server responded with a status of 403 (Forbidden)',
    source: 'network',
    timestamp: 1635657185631
  }
]
2021-10-31T05:13:18.818Z INFO webdriver: COMMAND deleteSession()
2021-10-31T05:13:18.819Z INFO webdriver: [DELETE] http://localhost:4444/session/50e6767cc905a324239d866e613d0d9f
